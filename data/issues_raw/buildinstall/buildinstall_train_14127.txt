[Mac] Build @HEAD fails with XLA errors

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac High Sierra 10.13
TensorFlow installed from (source or binary): Source
TensorFlow version (use command below): HEAD at c44f67a
Python version: 2.7
Bazel version (if compiling from source):
CUDA/cuDNN version: N/A
GPU model and memory: N/A
Exact command to reproduce:


Clone repo at head
configure
build with CPU support only and native arch optimization

Building TensorFlow at c44f67a (HEAD) yields the errors below related to XLA (optimized for Intel(R) Core(TM) i7-7700HQ).
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:220:3: error: reinterpret_cast cannot resolve overloaded function 'acos' to type 'void *'
  REGISTER_LIBM_SYMBOL(acos);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:714:1: note: candidate function
acos(_A1 __lcpp_x) _NOEXCEPT {return ::acos((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:708:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double acos(long double __lcpp_x) _NOEXCEPT {return ::acosl(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:707:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       acos(float __lcpp_x) _NOEXCEPT       {return ::acosf(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:323:15: note: candidate function
extern double acos(double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:221:3: error: reinterpret_cast cannot resolve overloaded function 'acosh' to type 'void *'
  REGISTER_LIBM_SYMBOL(acosh);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1005:1: note: candidate function
acosh(_A1 __lcpp_x) _NOEXCEPT {return ::acosh((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1000:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double acosh(long double __lcpp_x) _NOEXCEPT {return ::acoshl(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:999:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       acosh(float __lcpp_x) _NOEXCEPT       {return ::acoshf(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:351:15: note: candidate function
extern double acosh(double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:222:3: error: reinterpret_cast cannot resolve overloaded function 'asin' to type 'void *'
  REGISTER_LIBM_SYMBOL(asin);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:726:1: note: candidate function
asin(_A1 __lcpp_x) _NOEXCEPT {return ::asin((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:720:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double asin(long double __lcpp_x) _NOEXCEPT {return ::asinl(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:719:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       asin(float __lcpp_x) _NOEXCEPT       {return ::asinf(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:327:15: note: candidate function
extern double asin(double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:223:3: error: reinterpret_cast cannot resolve overloaded function 'asinh' to type 'void *'
  REGISTER_LIBM_SYMBOL(asinh);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1017:1: note: candidate function
asinh(_A1 __lcpp_x) _NOEXCEPT {return ::asinh((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1012:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double asinh(long double __lcpp_x) _NOEXCEPT {return ::asinhl(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1011:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       asinh(float __lcpp_x) _NOEXCEPT       {return ::asinhf(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:355:15: note: candidate function
extern double asinh(double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:224:3: error: reinterpret_cast cannot resolve overloaded function 'atan' to type 'void *'
  REGISTER_LIBM_SYMBOL(atan);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:738:1: note: candidate function
atan(_A1 __lcpp_x) _NOEXCEPT {return ::atan((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:732:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double atan(long double __lcpp_x) _NOEXCEPT {return ::atanl(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:731:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       atan(float __lcpp_x) _NOEXCEPT       {return ::atanf(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:331:15: note: candidate function
extern double atan(double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:225:3: error: reinterpret_cast cannot resolve overloaded function 'atan2' to type 'void *'
  REGISTER_LIBM_SYMBOL(atan2);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:755:1: note: candidate function
atan2(_A1 __lcpp_y, _A2 __lcpp_x) _NOEXCEPT
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:744:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double atan2(long double __lcpp_y, long double __lcpp_x) _NOEXCEPT {return ::atan2l(__lcpp_y, __lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:743:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       atan2(float __lcpp_y, float __lcpp_x) _NOEXCEPT             {return ::atan2f(__lcpp_y, __lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:335:15: note: candidate function
extern double atan2(double, double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:226:3: error: reinterpret_cast cannot resolve overloaded function 'atanh' to type 'void *'
  REGISTER_LIBM_SYMBOL(atanh);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1029:1: note: candidate function
atanh(_A1 __lcpp_x) _NOEXCEPT {return ::atanh((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1024:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double atanh(long double __lcpp_x) _NOEXCEPT {return ::atanhl(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1023:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       atanh(float __lcpp_x) _NOEXCEPT       {return ::atanhf(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:359:15: note: candidate function
extern double atanh(double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:227:3: error: reinterpret_cast cannot resolve overloaded function 'cbrt' to type 'void *'
  REGISTER_LIBM_SYMBOL(cbrt);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1041:1: note: candidate function
cbrt(_A1 __lcpp_x) _NOEXCEPT {return ::cbrt((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1036:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double cbrt(long double __lcpp_x) _NOEXCEPT {return ::cbrtl(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1035:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       cbrt(float __lcpp_x) _NOEXCEPT       {return ::cbrtf(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:435:15: note: candidate function
extern double cbrt(double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:228:3: error: reinterpret_cast cannot resolve overloaded function 'ceil' to type 'void *'
  REGISTER_LIBM_SYMBOL(ceil);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:773:1: note: candidate function
ceil(_A1 __lcpp_x) _NOEXCEPT {return ::ceil((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:767:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double ceil(long double __lcpp_x) _NOEXCEPT {return ::ceill(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:766:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       ceil(float __lcpp_x) _NOEXCEPT       {return ::ceilf(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:470:15: note: candidate function
extern double ceil(double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:229:3: error: reinterpret_cast cannot resolve overloaded function 'copysign' to type 'void *'
  REGISTER_LIBM_SYMBOL(copysign);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1065:1: note: candidate function
copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1052:1: note: candidate function
copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1047:40: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x,
                                       ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:526:15: note: candidate function
extern double copysign(double, double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:230:3: error: reinterpret_cast cannot resolve overloaded function 'cos' to type 'void *'
  REGISTER_LIBM_SYMBOL(cos);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:785:1: note: candidate function
cos(_A1 __lcpp_x) _NOEXCEPT {return ::cos((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:779:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double cos(long double __lcpp_x) _NOEXCEPT {return ::cosl(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:778:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       cos(float __lcpp_x) _NOEXCEPT       {return ::cosf(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:339:15: note: candidate function
extern double cos(double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:231:3: error: reinterpret_cast cannot resolve overloaded function 'cosh' to type 'void *'
  REGISTER_LIBM_SYMBOL(cosh);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:797:1: note: candidate function
cosh(_A1 __lcpp_x) _NOEXCEPT {return ::cosh((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:791:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double cosh(long double __lcpp_x) _NOEXCEPT {return ::coshl(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:790:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       cosh(float __lcpp_x) _NOEXCEPT       {return ::coshf(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:363:15: note: candidate function
extern double cosh(double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:232:3: error: reinterpret_cast cannot resolve overloaded function 'erf' to type 'void *'
  REGISTER_LIBM_SYMBOL(erf);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1083:1: note: candidate function
erf(_A1 __lcpp_x) _NOEXCEPT {return ::erf((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1078:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double erf(long double __lcpp_x) _NOEXCEPT {return ::erfl(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1077:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       erf(float __lcpp_x) _NOEXCEPT       {return ::erff(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:451:15: note: candidate function
extern double erf(double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:233:3: error: reinterpret_cast cannot resolve overloaded function 'erfc' to type 'void *'
  REGISTER_LIBM_SYMBOL(erfc);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1093:1: note: candidate function
erfc(_A1 __lcpp_x) _NOEXCEPT {return ::erfc((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1088:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double erfc(long double __lcpp_x) _NOEXCEPT {return ::erfcl(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1087:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       erfc(float __lcpp_x) _NOEXCEPT       {return ::erfcf(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:455:15: note: candidate function
extern double erfc(double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:234:3: error: reinterpret_cast cannot resolve overloaded function 'exp' to type 'void *'
  REGISTER_LIBM_SYMBOL(exp);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:809:1: note: candidate function
exp(_A1 __lcpp_x) _NOEXCEPT {return ::exp((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:803:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double exp(long double __lcpp_x) _NOEXCEPT {return ::expl(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:802:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       exp(float __lcpp_x) _NOEXCEPT       {return ::expf(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:375:15: note: candidate function
extern double exp(double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:235:3: error: reinterpret_cast cannot resolve overloaded function 'exp2' to type 'void *'
  REGISTER_LIBM_SYMBOL(exp2);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1103:1: note: candidate function
exp2(_A1 __lcpp_x) _NOEXCEPT {return ::exp2((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1098:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double exp2(long double __lcpp_x) _NOEXCEPT {return ::exp2l(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1097:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       exp2(float __lcpp_x) _NOEXCEPT       {return ::exp2f(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:379:15: note: candidate function
extern double exp2(double); 
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:236:3: error: reinterpret_cast cannot resolve overloaded function 'expm1' to type 'void *'
  REGISTER_LIBM_SYMBOL(expm1);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1113:1: note: candidate function
expm1(_A1 __lcpp_x) _NOEXCEPT {return ::expm1((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1108:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double expm1(long double __lcpp_x) _NOEXCEPT {return ::expm1l(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1107:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       expm1(float __lcpp_x) _NOEXCEPT       {return ::expm1f(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:383:15: note: candidate function
extern double expm1(double); 
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:237:3: error: reinterpret_cast cannot resolve overloaded function 'fabs' to type 'void *'
  REGISTER_LIBM_SYMBOL(fabs);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:821:1: note: candidate function
fabs(_A1 __lcpp_x) _NOEXCEPT {return ::fabs((double)__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:815:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double fabs(long double __lcpp_x) _NOEXCEPT {return ::fabsl(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:814:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       fabs(float __lcpp_x) _NOEXCEPT       {return ::fabsf(__lcpp_x);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:431:15: note: candidate function
extern double fabs(double);
              ^
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:238:3: error: reinterpret_cast cannot resolve overloaded function 'fdim' to type 'void *'
  REGISTER_LIBM_SYMBOL(fdim);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note: expanded from macro 'REGISTER_LIBM_SYMBOL'
    registry->Register(#name, reinterpret_cast<void*>(name));         \
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1128:1: note: candidate function
fdim(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1118:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY long double fdim(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::fdiml(__lcpp_x, __lcpp_y);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/math.h:1117:46: note: candidate function
inline _LIBCPP_INLINE_VISIBILITY float       fdim(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::fdimf(__lcpp_x, __lcpp_y);}
                                             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/math.h:542:15: note: candidate function
extern double fdim(double, double);
              ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
2 warnings and 20 errors generated.
Target //tensorflow/tools/pip_package:build_pip_package failed to build
Use --verbose_failures to see the command lines of failed build steps.
INFO: Elapsed time: 2220.010s, Critical Path: 87.74s