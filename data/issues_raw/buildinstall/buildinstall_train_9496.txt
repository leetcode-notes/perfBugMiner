icc Compilation Errors in tf1.0: usage of "typename" on TTypes

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 14.04
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): 1.0
Bazel version (if compiling from source): 0.4.5
CUDA/cuDNN version: not configured
GPU model and memory: not configured
Exact command to reproduce: CC=icc bazel build -c opt //tensorflow/tools/pip_package:build_pip_package

When compiling tensorflow using icc (version 17.0.3 20170404) using the command above, errors appear concerning the usage of typename associated with TTypes. For instance:

tensorflow/core/kernels/depthtospace_op.cc(88): error: type name is not allowed
typename TTypes<T, 4>::ConstTensor Tinput = input.tensor<T, 4>();

A more constrained example, however, makes the problem more apparent. Command:
CC=icc bazel build -c opt //tensorflow/core/kernels:resize_nearest_neighbor_op
Output (partial):

tensorflow/core/kernels/resize_nearest_neighbor_op.cc(57): error: type name is not allowed
typename TTypes<T, 4>::ConstTensor input_data = input.tensor<T, 4>();

I can change line resize_nearest_neighbor_op.cc(57) to:
TTypes<T, 4>::ConstTensor input_data = input.tensor<T, 4>();
and repeat the command to get Output (partial):

tensorflow/core/kernels/resize_nearest_neighbor_op.cc(57): error: use the "typename" keyword to treat nontype "tensorflow::TTypes<T, NDIMS, IndexType>::ConstTensor [with T=T, NDIMS=4, IndexType=Eigen::DenseIndex={std::ptrdiff_t={long}}]" as a type in a dependent context
TTypes<T, 4>::ConstTensor input_data = input.tensor<T, 4>();

I do not know if Intel Compiler compatibility is an intended feature of tensorflow, but I hoped this issue would still be of interest to the developers.
Thank you!