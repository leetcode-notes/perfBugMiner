Unable to compile from source using Bazel

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS 7
TensorFlow installed from (source or binary): Attempting source. (Binary installation works)
TensorFlow version (use command below): 1.7 (tried 1.5+)
Python version: 3.6
Bazel version (if compiling from source): 0.11
GCC/Compiler version (if compiling from source): 4.8
CUDA/cuDNN version: 9.0/7
GPU model and memory: K10, 12GB
Exact command to reproduce: bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package

I receive the following error:
INFO: Analysed target //tensorflow/tools/pip_package:build_pip_package (258 packages loaded). INFO: Found 1 target... Unhandled exception thrown during build; message: /home/dmallon@isd.csc.mrc.ac.uk/cardiac/dl_stuff/tensorflow/bazel-out (Operation not supported) INFO: Elapsed time: 6.481s FAILED: Build did NOT complete successfully java.lang.UnsupportedOperationException: /home/dmallon@isd.csc.mrc.ac.uk/cardiac/dl_stuff/tensorflow/bazel-out (Operation not supported) at com.google.devtools.build.lib.unix.NativePosixFiles.symlink(Native Method) at com.google.devtools.build.lib.unix.UnixFileSystem.createSymbolicLink(UnixFileSystem.java:329) at com.google.devtools.build.lib.vfs.Path.createSymbolicLink(Path.java:883) at com.google.devtools.build.lib.vfs.FileSystemUtils.ensureSymbolicLink(FileSystemUtils.java:369) at com.google.devtools.build.lib.vfs.FileSystemUtils.ensureSymbolicLink(FileSystemUtils.java:320) at com.google.devtools.build.lib.buildtool.OutputDirectoryLinksUtils.createLink(OutputDirectoryLinksUtils.java:251) at com.google.devtools.build.lib.buildtool.OutputDirectoryLinksUtils.createOutputDirectoryLinks(OutputDirectoryLinksUtils.java:89) at com.google.devtools.build.lib.buildtool.ExecutionTool.executeBuild(ExecutionTool.java:380) at com.google.devtools.build.lib.buildtool.BuildTool.buildTargets(BuildTool.java:279) at com.google.devtools.build.lib.buildtool.BuildTool.processRequest(BuildTool.java:383) at com.google.devtools.build.lib.buildtool.BuildTool.processRequest(BuildTool.java:350) at com.google.devtools.build.lib.runtime.commands.BuildCommand.exec(BuildCommand.java:74) at com.google.devtools.build.lib.runtime.BlazeCommandDispatcher.execExclusively(BlazeCommandDispatcher.java:489) at com.google.devtools.build.lib.runtime.BlazeCommandDispatcher.exec(BlazeCommandDispatcher.java:218) at com.google.devtools.build.lib.runtime.CommandExecutor.exec(CommandExecutor.java:58) at com.google.devtools.build.lib.server.GrpcServerImpl.executeCommand(GrpcServerImpl.java:851) at com.google.devtools.build.lib.server.GrpcServerImpl.access$2100(GrpcServerImpl.java:109) at com.google.devtools.build.lib.server.GrpcServerImpl$2.lambda$run$0(GrpcServerImpl.java:916) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) java.lang.UnsupportedOperationException: /home/dmallon@isd.csc.mrc.ac.uk/cardiac/dl_stuff/tensorflow/bazel-out (Operation not supported) at com.google.devtools.build.lib.unix.NativePosixFiles.symlink(Native Method) at com.google.devtools.build.lib.unix.UnixFileSystem.createSymbolicLink(UnixFileSystem.java:329) at com.google.devtools.build.lib.vfs.Path.createSymbolicLink(Path.java:883) at com.google.devtools.build.lib.vfs.FileSystemUtils.ensureSymbolicLink(FileSystemUtils.java:369) at com.google.devtools.build.lib.vfs.FileSystemUtils.ensureSymbolicLink(FileSystemUtils.java:320) at com.google.devtools.build.lib.buildtool.OutputDirectoryLinksUtils.createLink(OutputDirectoryLinksUtils.java:251) at com.google.devtools.build.lib.buildtool.OutputDirectoryLinksUtils.createOutputDirectoryLinks(OutputDirectoryLinksUtils.java:89) at com.google.devtools.build.lib.buildtool.ExecutionTool.executeBuild(ExecutionTool.java:380) at com.google.devtools.build.lib.buildtool.BuildTool.buildTargets(BuildTool.java:279) at com.google.devtools.build.lib.buildtool.BuildTool.processRequest(BuildTool.java:383) at com.google.devtools.build.lib.buildtool.BuildTool.processRequest(BuildTool.java:350) at com.google.devtools.build.lib.runtime.commands.BuildCommand.exec(BuildCommand.java:74) at com.google.devtools.build.lib.runtime.BlazeCommandDispatcher.execExclusively(BlazeCommandDispatcher.java:489) at com.google.devtools.build.lib.runtime.BlazeCommandDispatcher.exec(BlazeCommandDispatcher.java:218) at com.google.devtools.build.lib.runtime.CommandExecutor.exec(CommandExecutor.java:58) at com.google.devtools.build.lib.server.GrpcServerImpl.executeCommand(GrpcServerImpl.java:851) at com.google.devtools.build.lib.server.GrpcServerImpl.access$2100(GrpcServerImpl.java:109) at com.google.devtools.build.lib.server.GrpcServerImpl$2.lambda$run$0(GrpcServerImpl.java:916) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748)
Does anyone have any ideas? I've tried multiple versions of Java (8-151, 8-161, 7-161).