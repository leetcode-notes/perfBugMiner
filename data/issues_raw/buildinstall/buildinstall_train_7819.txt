XLA build error on macOS 10.12.4 Beta

NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.
For general support from the community, see StackOverflow.
To make bugs and feature requests more easy to find and organize, we close issues that are deemed
out of scope for GitHub Issues and point people to StackOverflow.
For bugs or installation issues, please provide the following information.
The more information you provide, the more easily we will be able to offer
help and advice.
What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?
Nothing seems to be related
Environment info
Operating System:
macOS 10.12.4 Beta
Installed version of CUDA and cuDNN:
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
None
If installed from binary pip package, provide:

A link to the pip package you installed:
The output from python -c "import tensorflow; print(tensorflow.__version__)".

If installed from source, provide

The commit hash (git rev-parse HEAD): 4ac9c09
The output of bazel version:

Build label: 0.4.4-homebrew
Build target: bazel-out/local-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar
Build time: Thu Feb 2 01:05:15 2017 (1485997515)
Build timestamp: 1485997515
Build timestamp as int: 1485997515

If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)
Enable XLA at configuration and build with bazel build --config=opt
What other attempted solutions have you tried?
Building without XLA is working smoothly.
Logs or other output that would be helpful
(If logs are large, please upload as attachment or provide link).
ERROR: /Users/inflation/workspace/tensorflow/tensorflow/compiler/xla/service/BUILD:108:1: C++ compilation of rule '//tensorflow/compiler/xla/service:versioned_computation_handle' failed: cc_wrapper.sh failed: error executing command external/local_config_cc/cc_wrapper.sh -U_FORTIFY_SOURCE -fstack-protector -Wall -Wthread-safety -Wself-assign -fcolor-diagnostics -fno-omit-frame-pointer -g0 -O2 '-D_FORTIFY_SOURCE=1' -DNDEBUG ... (remaining 93 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.
In file included from tensorflow/compiler/xla/service/versioned_computation_handle.cc:16:
./tensorflow/compiler/xla/service/versioned_computation_handle.h:33:19: error: unknown type name 'int64'; did you mean 'tensorflow::int64'?
  using Version = int64;
                  ^~~~~
                  tensorflow::int64
./tensorflow/core/platform/default/integral_types.h:27:19: note: 'tensorflow::int64' declared here
typedef long long int64;
                  ^
In file included from tensorflow/compiler/xla/service/versioned_computation_handle.cc:16:
./tensorflow/compiler/xla/service/versioned_computation_handle.h:38:3: error: unknown type name 'string'; did you mean 'std::string'?
  string ToString() const;
  ^~~~~~
  std::string
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/iosfwd:194:65: note: 'std::string' declared here
typedef basic_string<char, char_traits<char>, allocator<char> > string;
                                                                ^
tensorflow/compiler/xla/service/versioned_computation_handle.cc:22:1: error: unknown type name 'string'; did you mean 'std::string'?
string VersionedComputationHandle::ToString() const {
^~~~~~
std::string
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/iosfwd:194:65: note: 'std::string' declared here
typedef basic_string<char, char_traits<char>, allocator<char> > string;