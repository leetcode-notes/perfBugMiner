Server terminated abruptly when build from source

What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?
Initially I encountered the problem described as in #8731
After modified configure file as in fba05c3. This error happened
Environment info
Operating System: CentOS Linux release 7.3.1611 (Core)
Installed version of CUDA and cuDNN: CUDA 7.5 and cuDNN 5.0
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
$ ls -l /usr/local/cuda/lib64/libcud*
-rw-r--r-- 1 root root   322936 Dec  6 11:05 /usr/local/cuda/lib64/libcudadevrt.a
lrwxrwxrwx 1 root root       16 Dec  6 11:05 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.7.5
lrwxrwxrwx 1 root root       19 Dec  6 11:05 /usr/local/cuda/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18
-rwxr-xr-x 1 root root   383336 Dec  6 11:05 /usr/local/cuda/lib64/libcudart.so.7.5.18
-rw-r--r-- 1 root root   720192 Dec  6 11:05 /usr/local/cuda/lib64/libcudart_static.a
lrwxrwxrwx 1 asb  ttic       13 Apr 22  2016 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.5
lrwxrwxrwx 1 asb  ttic       17 Apr 22  2016 /usr/local/cuda/lib64/libcudnn.so.5 -> libcudnn.so.5.0.5
-rwxr-xr-x 1 asb  ttic 59909104 Apr 22  2016 /usr/local/cuda/lib64/libcudnn.so.5.0.5
-rw-r--r-- 1 asb  ttic 58775484 Apr 22  2016 /usr/local/cuda/lib64/libcudnn_static.a
If installed from source, provide


The commit hash (git rev-parse HEAD)
$ git rev-parse HEAD
83be34c


The output of bazel version
$ bazel version
Build label: 0.4.5
Build target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar
Build time: Thu Mar 16 12:19:38 2017 (1489666778)
Build timestamp: 1489666778
Build timestamp as int: 1489666778


If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)
./configure
Please specify the location of python. [Default is /home-nfs/mingdachen/anaconda2/envs/py35gpu/bin/python]:
Please specify optimization flags to use during compilation when bazel option "--config=opt" is specified [Default is -march=native]:
Do you wish to use jemalloc as the malloc implementation? [Y/n]
jemalloc enabled
Do you wish to build TensorFlow with Google Cloud Platform support? [y/N]
No Google Cloud Platform support will be enabled for TensorFlow
Do you wish to build TensorFlow with Hadoop File System support? [y/N]
No Hadoop File System support will be enabled for TensorFlow
Do you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N]
No XLA support will be enabled for TensorFlow
Found possible Python library paths:
/home-nfs/mingdachen/anaconda2/envs/py35gpu/lib/python3.5/site-packages
Please input the desired Python library path to use.  Default is [/home-nfs/mingdachen/anaconda2/envs/py35gpu/lib/python3.5/site-packages]
Using python library path: /home-nfs/mingdachen/anaconda2/envs/py35gpu/lib/python3.5/site-packages
Do you wish to build TensorFlow with OpenCL support? [y/N]
No OpenCL support will be enabled for TensorFlow
Do you wish to build TensorFlow with CUDA support? [y/N] y
CUDA support will be enabled for TensorFlow
Please specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]:
Please specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 7.5
Please specify the location where CUDA 7.5 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:
Please specify the Cudnn version you want to use. [Leave empty to use system default]: 5
Please specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:
Please specify a list of comma-separated Cuda compute capabilities you want to build with.
You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.
Please note that each additional compute capability significantly increases your build time and binary size.
[Default is: "3.5,5.2"]:
INFO: $TEST_TMPDIR defined: output root default is '/scratch/mingda/'.
Extracting Bazel installation...
.........
INFO: All external dependencies fetched successfully.
Configuration finished
$ bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package &> ../log
What other attempted solutions have you tried?
I have tried different branches, including r1.0, r1.1 and master
Logs or other output that would be helpful
(If logs are large, please upload as attachment or provide link).
log.txt
The log file of /scratch/mingda/_bazel_mingdachen/b48312abf86569e91b44fe1197c1c461/server/jvm.out is empty