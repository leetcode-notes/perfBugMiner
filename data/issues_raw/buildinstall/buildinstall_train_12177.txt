InvalidArgumentError in tensorflow reduce_sum gradient when compiling from sources

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Windows 10
TensorFlow installed from (source or binary):
source
TensorFlow version (use command below):
1.3.0rc2
Python version:
3.5.3
Bazel version (if compiling from source):
cmake 3.9.0
CUDA/cuDNN version:
cpu only
GPU model and memory:
cpu only
Exact command to reproduce:

I compiled tensorflow from source according to the instructions given here: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/cmake/README.md
I activated support for AVX (that's the reason I want to compile from source). All steps work without problems. I then install the whl with pip in my python environment.
Now, if I run my code with that version of tf, it crashes, but it works if I use a pre-compiled version.
Describe the problem
A script that runs without problems when I use a pre-built version of tensorflow throws an error when I use the compiled version (see below for trace). I also compiled r1.2 and saw the same problem. Since the code works with the pre-built tf version (1.1), I suspect the problem is related to compiling from source.
Source code / logs
Error when running with the compiled tf:
  File "test_network.py", line 35, in <module>
    network = Network(**configuration)
[elided 0 identical lines from previous traceback]
  File "C:\Users\falke\EclipseWorkspace\nn\src\codebase\network.py", line 194, in __init__
    self._build_graph()
  File "C:\Users\falke\EclipseWorkspace\nn\src\codebase\network.py", line 227, in _build_graph
    self.graph_states = gop(self.graph_states, enc_state)
  File "C:\Users\falke\EclipseWorkspace\nn\src\codebase\network.py", line 158, in __call__
    w = tf.exp(tf.reduce_sum(tf.multiply(node_labels, enc_state), axis=2, keep_dims=True))
  File "C:\Anaconda\envs\tfc\lib\site-packages\tensorflow\python\ops\math_ops.py", line 1279, in reduce_sum
    name=name)
  File "C:\Anaconda\envs\tfc\lib\site-packages\tensorflow\python\ops\gen_math_ops.py", line 2727, in _sum
    keep_dims=keep_dims, name=name)
  File "C:\Anaconda\envs\tfc\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 328, in apply_op
    op_type_name, name, **keywords)
  File "C:\Anaconda\envs\tfc\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 787, in _apply_op_helper
    op_def=op_def)
  File "C:\Anaconda\envs\tfc\lib\site-packages\tensorflow\python\framework\ops.py", line 2624, in create_op
    original_op=self._default_original_op, op_def=op_def)
  File "C:\Anaconda\envs\tfc\lib\site-packages\tensorflow\python\framework\ops.py", line 1210, in __init__
    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access

InvalidArgumentError (see above for traceback): indices[1] is out of range
         [[Node: opt/gradients/node_label_update_1/Sum_grad/DynamicStitch = DynamicStitch[N=2, T=DT_INT32, _device="/job:localhost/replica:0/task:0/cpu:0"](opt/gradients/node_label_update_1/Sum_grad/range, opt/gradients/node_label_update_1/Sum_grad/mod, opt/gradients/node_label_update_1/Sum_grad/Shape, opt/gradients/node_label_update_1/Sum_grad/Fill)]]

The code causing the error is:
w = tf.exp(tf.reduce_sum(tf.multiply(node_labels, enc_state), axis=2, keep_dims=True))
Both node_labels and enc_state are 40x5x30 dim tensors. And as I already said, there are no issues at all running this code if I don't compile from source.