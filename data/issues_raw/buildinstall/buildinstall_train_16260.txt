easier installation debugging

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 with Java API
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.3.0
Python version:
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 8 with cudnn64_6.dll
GPU model and memory: 1080
Exact command to reproduce: HelloTF.java

Describe the problem
Default error message from NativeLibrary load() method is not helpful enough.
Simple suggested improvement: please print the contents in the string variable "frameworkResourceName", which is the missing resource, when throwing a new UnsatisfiedLinkError exception.
Source code / logs
Suggested Source Code Improvement for NativeLibrary.java:
if (jniResource == null) {
  throw new UnsatisfiedLinkError(
      String.format(
          "Cannot find TensorFlow native library %s for OS: %s, architecture: %s. See "
              + "https://github.com/tensorflow/tensorflow/tree/master/tensorflow/java/README.md"
              + " for possible solutions (such as building the library from source). Additional"
              + " information on attempts to find the native library can be obtained by adding"
              + " org.tensorflow.NativeLibrary.DEBUG=1 to the system properties of the JVM.",
              frameworkResourceName,
          os(), architecture()));
}