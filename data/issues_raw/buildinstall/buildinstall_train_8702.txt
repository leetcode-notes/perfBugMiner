[bug] bazel cudnn-version-check is broken on python 2.7 / ubuntu 14.04

When I ./configure on /r1.1 or /r1.0, I get the following error:
Auto-Configuration Error: cuDNN version detected from /usr/local/cuda-8.0/include/cudnn.h (      5.      1. 5) does not match TF_CUDNN_VERSION (5.1.5)

For what it is worth, I counted the space in cudnn.h, and they match the number of spaces in that error message above. Not sure if related.
#define CUDNN_MAJOR      5
#define CUDNN_MINOR      1
#define CUDNN_PATCHLEVEL 5

$ ./configure
Please specify the location of python. [Default is /usr/bin/python]: 
Please specify optimization flags to use during compilation [Default is -march=native]: 
Do you wish to use jemalloc as the malloc implementation? (Linux only) [Y/n] 
jemalloc enabled on Linux
Do you wish to build TensorFlow with Google Cloud Platform support? [y/N] 
No Google Cloud Platform support will be enabled for TensorFlow
Do you wish to build TensorFlow with Hadoop File System support? [y/N] 
No Hadoop File System support will be enabled for TensorFlow
Do you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] 
No XLA support will be enabled for TensorFlow
Found possible Python library paths:
  /usr/local/lib/python2.7/dist-packages
Please input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]
/usr/local/lib/python2.7/dist-packages
Do you wish to build TensorFlow with OpenCL support? [y/N] 
No OpenCL support will be enabled for TensorFlow
Do you wish to build TensorFlow with CUDA support? [y/N] y
CUDA support will be enabled for TensorFlow
Please specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: 
Please specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0
Please specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: 
Please specify the Cudnn version you want to use. [Leave empty to use system default]: 5.1.5
Please specify the location where cuDNN 5.1.5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: 
Please specify a list of comma-separated Cuda compute capabilities you want to build with.
You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.
Please note that each additional compute capability significantly increases your build time and binary size.
[Default is: "3.5,5.2"]: 
INFO: Starting clean (this may take a while). Consider using --expunge_async if the clean takes more than several minutes.
..........
ERROR: package contains errors: tensorflow/core/kernels/cloud.
ERROR: error loading package 'tensorflow/core/kernels/cloud': Encountered error while reading extension file 'cuda/build_defs.bzl': no such package '@local_config_cuda//cuda': Traceback (most recent call last):
	File "/mnt/6tb_internal/cnn_experiments/tensorflow_src/tensorflow/third_party/gpus/cuda_configure.bzl", line 815
		_create_cuda_repository(repository_ctx)
	File "/mnt/6tb_internal/cnn_experiments/tensorflow_src/tensorflow/third_party/gpus/cuda_configure.bzl", line 728, in _create_cuda_repository
		_get_cuda_config(repository_ctx)
	File "/mnt/6tb_internal/cnn_experiments/tensorflow_src/tensorflow/third_party/gpus/cuda_configure.bzl", line 584, in _get_cuda_config
		_cudnn_version(repository_ctx, cudnn_install_base..., ...)
	File "/mnt/6tb_internal/cnn_experiments/tensorflow_src/tensorflow/third_party/gpus/cuda_configure.bzl", line 311, in _cudnn_version
		auto_configure_fail("cuDNN version detected from %s ...))
	File "/mnt/6tb_internal/cnn_experiments/tensorflow_src/tensorflow/third_party/gpus/cuda_configure.bzl", line 93, in auto_configure_fail
		fail("
%sAuto-Configuration Error:%s ...))

Auto-Configuration Error: cuDNN version detected from /usr/local/cuda-8.0/include/cudnn.h (      5.      1. 5) does not match TF_CUDNN_VERSION (5.1.5)

Environment info
Operating System: Ubuntu 14.04 LTS
Installed version of CUDA and cuDNN:
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
$ ls -l /usr/local/cuda/lib64/libcud*
-rw-r--r-- 1 root root   558720 Sep 14  2016 /usr/local/cuda/lib64/libcudadevrt.a
lrwxrwxrwx 1 root root       16 Sep 14  2016 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.8.0
lrwxrwxrwx 1 root root       19 Sep 14  2016 /usr/local/cuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.44
-rw-r--r-- 1 root root   415432 Sep 14  2016 /usr/local/cuda/lib64/libcudart.so.8.0.44
-rw-r--r-- 1 root root   775162 Sep 14  2016 /usr/local/cuda/lib64/libcudart_static.a
-rwxr-xr-x 1 root root 79337624 Nov  7 13:54 /usr/local/cuda/lib64/libcudnn.so
-rwxr-xr-x 1 root root 79337624 Nov  7 13:54 /usr/local/cuda/lib64/libcudnn.so.5
-rwxr-xr-x 1 root root 79337624 Nov  7 13:54 /usr/local/cuda/lib64/libcudnn.so.5.1.5
-rw-r--r-- 1 root root 69756172 Nov  7 13:54 /usr/local/cuda/lib64/libcudnn_static.a

If installed from source, provide

The commit hash (git rev-parse HEAD)
The output of bazel version

r1.0, r1.1

Build label: 0.4.5
Build target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar
Build time: Thu Mar 16 12:19:38 2017 (1489666778)
Build timestamp: 1489666778
Build timestamp as int: 1489666778