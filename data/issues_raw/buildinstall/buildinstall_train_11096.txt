C1002 error when building on Windows 10 64 bit, with vs 2017

Please go to Stack Overflow for help and support:
http://stackoverflow.com/questions/tagged/tensorflow
If you open a GitHub issue, here is our policy:

It must be a bug or a feature request.
The form below must be filled out.
It shouldn't be a TensorBoard issue. Those go here.

Here's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.

System information


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): N/A


OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 64 bit, version 1511


TensorFlow installed from (source or binary): source


TensorFlow version (use command below): master branch, commit 90b2a38


Bazel version (if compiling from source): N/A


CUDA/cuDNN version: N/A


GPU model and memory: CPU only


Exact command to reproduce:
C:\cmake-3.9.0-rc4-win64-x64\bin\cmake.exe .. -G "Visual Studio 15 2017 Win64" ^
-DCMAKE_BUILD_TYPE=Release -DSWIG_EXECUTABLE=C:\swigwin-3.0.12\swig.exe ^
-DPYTHON_EXECUTABLE=C:\Users\x\.conda\envs\tensorflow\python.exe ^
-DPYTHON_LIBRARIES=C:\Users\x\.conda\envs\tensorflow\libs\python35.lib ^
-Dtensorflow_BUILD_CC_TESTS=ON ^
-Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX

C:\cmake-3.9.0-rc4-win64-x64\bin\cmake.exe --build .



You can collect some of this information using our environment capture script:
https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh
You can obtain the TensorFlow version with
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
Describe the problem
Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.
Issued above build command, and got the following error at last.
"C:\Users\X\github\tensorflow\tensorflow\contrib\cmake\build\ALL_BUILD.vcxproj" (default target) (1) ->
"C:\Users\X\github\tensorflow\tensorflow\contrib\cmake\build\_beam_search_ops.vcxproj" (default target) (3) ->
"C:\Users\X\github\tensorflow\tensorflow\contrib\cmake\build\pywrap_tensorflow_internal.vcxproj" (default target)
(4) ->
"C:\Users\X\github\tensorflow\tensorflow\contrib\cmake\build\pywrap_tensorflow_internal_static.vcxproj" (default t
arget) (5) ->
"C:\Users\X\github\tensorflow\tensorflow\contrib\cmake\build\tf_core_kernels.vcxproj" (default target) (108) ->
(ClCompile target) ->
  c:\users\x\github\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\eigen\src\core\products\gener
alblockpanelkernel.h(2011): fatal error C1002: compiler is out of heap space in pass 2 [C:\Users\X\github\tensorfl
ow\tensorflow\contrib\cmake\build\tf_core_kernels.vcxproj]
  cl : Command line error D8040: error creating or communicating with child process [C:\Users\X\github\tensorflow\
tensorflow\contrib\cmake\build\tf_core_kernels.vcxproj]

86 Warning(s)
2 Error(s)

For the warnings, there are two kinds:
  C:\Users\X\github\tensorflow\tensorflow\c\c_api.cc(1938): warning C4190: 'TF_NewWhile' has C-linkage specified,
but returns UDT 'TF_WhileParams' which is incompatible with C [C:\Users\X\github\tensorflow\tensorflow\contrib\cma
ke\build\tf_test_lib.vcxproj]

and
  c:\users\X\github\tensorflow\tensorflow\core\kernels\eigen_spatial_convolutions.h(724): warning C4789: buffer ''
 of size 8 bytes will be overrun; 32 bytes will be written starting at offset 0 [C:\Users\X\github\tensorflow\tens
orflow\contrib\cmake\build\tf_core_kernels.vcxproj]

I saw there're many complains about compiler is out of heap space in pass 2 error, and some say adding "/Zm2000" to the compiler would solve the problem. I applied this patch:
@@ -78,6 +78,8 @@ if(WIN32)
   set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /D_ITERATOR_DEBUG_LEVEL=0")
   set(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /D_ITERATOR_DEBUG_LEVEL=0")
   set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /D_ITERATOR_DEBUG_LEVEL=0")
+  # Increase heap size
+  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Zm2000")

But did not solve this problem.
Source code / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.