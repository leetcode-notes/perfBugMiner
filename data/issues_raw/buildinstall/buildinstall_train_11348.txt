The order in which tensorflow libraries are loaded leads to segmentation fault

I have a simple java code below.Running this code produces a core dump.
i am running this on debian/8 jessie system. I use tensorflow 1.2.1.
The same code works fine in mac osx but has problems when we run the same  in Linux.
When the code is changed to load tensorflow libraries before rocksdb library it works fine on all platforms.
package com.test.tensorflow;
import org.rocksdb.RocksDB;
import org.rocksdb.RocksDBException;
import org.tensorflow.SavedModelBundle;
import org.tensorflow.Session;
import org.tensorflow.Tensor;
public class TestTensorFlow {
public static void main(String[] args){
	
	 System.out.println("before loading.." + System.getProperty("java.io.tmpdir"));
	
	
	 RocksDB.loadLibrary();
	 try {
		RocksDB db =RocksDB.open("/tmp/rocksdelete");
		db.close();
	} catch (RocksDBException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	 
	 SavedModelBundle smb = SavedModelBundle.load("test-model", "serve");
	 Session tfSession = smb.session();
	 System.out.println("loaded");

}

}