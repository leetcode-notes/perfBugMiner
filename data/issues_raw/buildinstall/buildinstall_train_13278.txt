tf_cc_binary() makes opencv unable to load an image

I try to load an image with opencv and work further on it with the tensorflow framework. Unfortunately I get a really weird behaviour:
The image is loaded without problems using cc_binary(...) in Bazel. Changing it to tf_cc_binary(...) doesn't stop the code from compilation or running, but opencv can't load any images any more.
Source code / logs
This is my BUILD file:
load("//tensorflow:tensorflow.bzl", "tf_cc_binary")

#tf_cc_binary( <-- using this, no image could be loaded anymore
cc_binary(
    name = "main",
    srcs = ["main.cpp"],
    linkopts = [
        "-lopencv_core",
        "-lopencv_highgui",
        "-lopencv_imgcodecs",
        "-lopencv_imgproc",
    ],
    visibility=["//visibility:public"]
)

I use the standard example code from the opencv website. Again, it is working and the image gets loaded using cc_binary(:
#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <iostream>

using namespace cv;
using namespace std;

int main( int argc, char** argv )
{
    Mat image;
    image = imread("tensorflow/test/imageHolder/data/example.jpg", CV_LOAD_IMAGE_COLOR);   // Read the file

    if(! image.data )                              // Check for invalid input
    {
        cout <<  "Could not open or find the image" << std::endl ;
        return -1;
    }

    namedWindow( "Display window", WINDOW_AUTOSIZE );// Create a window for display.
    imshow( "Display window", image );                   // Show our image inside it.

    waitKey(0);                                          // Wait for a keystroke in the window
    return 0;
}

This is my file structure in case it matters:
├── data
    ├── example.jpg
└── src
    ├── BUILD
    ├── main.cpp