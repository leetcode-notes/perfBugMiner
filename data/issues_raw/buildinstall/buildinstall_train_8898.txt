Import Error  Couldn't open CUDA library libcudnn.so.5.

What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?
i was installing tensorflow  GPU version on ubuntu x86-64
but I found an error:
>>> import tensorflow as tf I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally I tensorflow/stream_executor/dso_loader.cc:126] Couldn't open CUDA library libcudnn.so.5. LD_LIBRARY_PATH: /home/lunasdejavu/Downloads:/usr/local/cuda-8.0/lib64 I tensorflow/stream_executor/cuda/cuda_dnn.cc:3517] Unable to load cuDNN DSO I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally
i tried to install again and again follow the instructions
it is still useless.
I tried the NVIDIA_CUDA-8.0_Samples then make. no error after all
can somebody help me... i was working on this setting for almost 24 hours....
Environment info
Operating System:
gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.4)
64 bit
Installed version of CUDA and cuDNN:
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
i can't use the command
but the packages are cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64.deb
cudnn-8.0-linux-x64-v6.0.tgz
If installed from binary pip package, provide:
https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0-cp27-none-linux_x86_64.whl

A link to the pip package you installed:
The output from python -c "import tensorflow; print(tensorflow.__version__)".

If installed from source, provide

The commit hash (git rev-parse HEAD)
The output of bazel version
Build label: 0.4.5
Build target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar
Build time: Thu Mar 16 12:19:38 2017 (1489666778)
Build timestamp: 1489666778
Build timestamp as int: 1489666778

If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)
What other attempted solutions have you tried?
i searched the manual of th
cd 
export LD_LIBRARY_PATH=pwd:$LD_LIBRARY_PATH
Add <installpath> to your build and link process by adding -I<installpath> to your compile
line and -L<installpath> -lcudnn to your link line.

Logs or other output that would be helpful
(If logs are large, please upload as attachment or provide link).