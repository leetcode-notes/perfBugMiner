Compile from source on Skylake-X (Intel i9)

Hello,
Compiling tensorflow source on Skylake-X Intel i9 with "--config=opt" gives the following error in the snappy external module:


ERROR: /home/armafire/.cache/bazel/bazel_armafire/efbef35334c587b69e16a82829bb0e2d/external/snappy/BUILD:19:1: C++ compilation of rule '@snappy//:snappy' failed (Exit 1): crosstool_wrapper_driver_is_not_gcc failed: error executing command
(cd /home/armafire/.cache/bazel/bazel_armafire/efbef35334c587b69e16a82829bb0e2d/execroot/org_tensorflow && 
exec env - 
CUDA_TOOLKIT_PATH=/usr/local/cuda 
CUDNN_INSTALL_PATH=/usr/local/cuda-8.0 
GCC_HOST_COMPILER_PATH=/usr/bin/gcc 
PWD=/proc/self/cwd 
PYTHON_BIN_PATH=/usr/bin/python 
PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages 
TF_CUDA_CLANG=0 
TF_CUDA_COMPUTE_CAPABILITIES=6.1 
TF_CUDA_VERSION=8.0 
TF_CUDNN_VERSION=6 
TF_NEED_CUDA=1 
TF_NEED_OPENCL=0 
external/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -Wunused-but-set-parameter -Wno-free-nonheap-object -fno-omit-frame-pointer -g0 -O2 -DNDEBUG -ffunction-sections -fdata-sections '-march=native' '-std=c++11' '-march=native' -MD -MF bazel-out/local_linux-opt/bin/external/snappy/objs/snappy/external/snappy/snappy.pic.d '-frandom-seed=bazel-out/local_linux-opt/bin/external/snappy/objs/snappy/external/snappy/snappy.pic.o' -fPIC -iquote external/snappy -iquote bazel-out/local_linux-opt/genfiles/external/snappy -iquote external/bazel_tools -iquote bazel-out/local_linux-opt/genfiles/external/bazel_tools -isystem external/bazel_tools/tools/cpp/gcc3 -Wno-shift-negative-value -Wno-implicit-function-declaration -no-canonical-prefixes -Wno-builtin-macro-redefined '-D__DATE="redacted"' '-D__TIMESTAMP="redacted"' '-D__TIME__="redacted"' -fno-canonical-system-headers -c external/snappy/snappy.cc -o bazel-out/local_linux-opt/bin/external/snappy/objs/snappy/external/snappy/snappy.pic.o)
cc1plus: warning: command line option '-Wno-implicit-function-declaration' is valid for C/ObjC but not for C++
external/snappy/snappy.cc: In member function 'void snappy::SnappySinkAllocator::Flush(size_t)':
external/snappy/snappy.cc:1403:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
for (int i = 0; i < blocks.size(); ++i) {
^
In file included from external/snappy/snappy-internal.h:34:0,
from external/snappy/snappy.cc:30:
external/snappy/snappy.cc: In instantiation of 'bool snappy::SnappyScatteredWriter::AppendFromSelf(size_t, size_t) [with Allocator = snappy::SnappySinkAllocator; size_t = long unsigned int]':
external/snappy/snappy.cc:715:13:   required from 'void snappy::SnappyDecompressor::DecompressAllTags(Writer*) [with Writer = snappy::SnappyScatteredWritersnappy::SnappySinkAllocator]'
external/snappy/snappy.cc:799:3:   required from 'bool snappy::InternalUncompressAllTags(snappy::SnappyDecompressor*, Writer*, snappy::uint32) [with Writer = snappy::SnappyScatteredWritersnappy::SnappySinkAllocator; snappy::uint32 = unsigned int]'
external/snappy/snappy.cc:1460:78:   required from here
external/snappy/snappy.cc:1316:34: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
if (PREDICT_TRUE(offset - 1u < op_ptr_ - op_base_ && op_end <= op_limit_)) {
^
external/snappy/snappy-stubs-internal.h:80:25: note: in definition of macro 'PREDICT_TRUE'
#define PREDICT_TRUE(x) x
^
/tmp/ccxBWytY.s: Assembler messages:
/tmp/ccxBWytY.s:389: Error: no such instruction: kmovq %rdx,%k3' /tmp/ccxBWytY.s:391: Error: no such instruction:kshiftrq $32,%k3,%k2'
/tmp/ccxBWytY.s:394: Error: no such instruction: kmovq %k2,%rdx' /tmp/ccxBWytY.s:600: Error: no such instruction:kmovq %rsi,%k1'
/tmp/ccxBWytY.s:602: Error: no such instruction: kshiftrq $32,%k1,%k0' /tmp/ccxBWytY.s:605: Error: no such instruction:kmovq %k0,%rsi'
Target //tensorflow/tools/pip_package:build_pip_package failed to build
INFO: Elapsed time: 34.595s, Critical Path: 14.66s
FAILED: Build did NOT complete successfully


The command I use is:
bazel build --config=opt -c opt //tensorflow/tools/pip_package:build_pip_package --verbose_failures -j 64
If I change to --config=mkl, then it compiles fine. Therefore, it seems that the problem is "--march=native" (generated by "--config=opt"), which forces the snappy module to generate AVX512, however, the generated assembly is not correct for Skylake-X Intel i9 (which supports AVX512). I tried "--march=skylake-avx512" and all other AVX512 options like "-mavx512f" and similar, and all result in the same error.
My goal is to compile tensorflow with Eigen AVX512. Any ideas how this can be done?