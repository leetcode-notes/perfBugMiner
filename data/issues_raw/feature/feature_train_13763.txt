Modify the TensorFlow Scheduler and Runtime to Change the Operations Priority

Hi,
I am trying to modify the TensorFlow scheduler and runtime to change the operation priorities. As my understanding, TensorFlow has inter-operation and intra-operation thread pool with a scheduler scheduling operations for different threads and there is also a FIFO queue of operations for operations waiting. The workflow between them is that operations are sent to the inter-op thread pool from the executor, and then that work is running through XLA compiler to eventually be executed on the intra-op thread pool. Schedule() is in inside a specific ThreadPool and is to schedule function for the threads in the pool. The thread scheduler selects a subset of threads to run at any given moment. When the tasks are passed to the ThreadPool, they are added to one of the scheduler threadâ€™s FIFO queues and then the scheduler will pick up the tasks distributed to the available worker threads. I have all the control and data dependencies got from the Graph in TensorFlow by using TensorBoard. Now I am not sure whether my understanding for the TensorFlow scheduler and runtime is correct or not.
The problem is that I still have no clue how and where to modify the threadpool/scheduler/ready_queue or others to change the operations priority/sequence for different threads at the TensorFlow runtime by modifying the source code. Does anyone have any ideas?