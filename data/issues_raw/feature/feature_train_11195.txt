No error reported when a wrong argument name is inputted to tf.app.flags

The default behavior of tf.app.flags is: when the user inputs a wrong/undefined argument name, the program just keeps running without throwing out any error about it. For example,
flags.DEFINE_string("weight_path", None, "the path of saved model to restore from")

But when the user inputs
python your_prog.py --weights_path ${MODEL_PATH}

The program just keeps running with weight_path=None and does not report the wrong argument of weights_path which has a s appended.
Should we change this kind of default behavior? In this case, users may think they input the correct arguments to finetune the model but unfortunately it just trains from scratch.