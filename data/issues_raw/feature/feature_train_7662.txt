Add a dynamic_partial_sum operator to tensorflow?

Hi,
In my application I need to do operations that dynamically sum some rows of a matrix to get a new matrix.  There will be an input tensor named "index" that guides which part of the tensor to be summed.
An example is, if the input matrix is
[ [   1,   1,   1],
  [  10,  10,  10],
  [ 100, 100, 100] ]
And the index is
[ [ 0, 2 ],
  [ 2, 3 ]]
which simply says the output tensor will have two rows (because the "index" have two rows), the first row is the sum of rows with row number i that satisfies 0 <= i < 2 in the input, and the second row is the sum of rows with row number 2. So the result should be
[ [  11,  11,  11],
  [ 100, 100, 100] ]
I don't find any existing operation that does this job, so I implement it (support only 2d matrix and GPU) by myself.  Since I already have an implementation, I'm not requesting a new feature here. But I do want to know that if the tensorflow team is interested in adding this operation as part of tensorflow. If the answer is yes, I will add CPU support (maybe also xla? I have no idea on how to add xla support yet), and then create a pull request for that.