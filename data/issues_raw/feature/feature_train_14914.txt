"and", "or", etc, should be overloaded if possible

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): OS X 10.13.1
TensorFlow installed from (source or binary): Binary (anaconda)
TensorFlow version (use command below): 1.1.0
Python version: 2.7
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version:  N/A
GPU model and memory: Intel HD Graphics 630 1536 MB (not used)
Exact command to reproduce: N/A

Describe the problem
It would make code much cleaner if more of Python's binary boolean operations were overloaded for
TF. I understand this can't be done for "==" because of hashmap key problems but "and", "or", "^", "not", really as many operations as possible, would be great.
Source code / logs
Currently:
def cube_isect(x_m,x_M,y_m,y_M):
  return tf.logical_or(tf.logical_and(x_m >= y_m, x_m <= y_M), 
                                  tf.logical_and(y_m >= x_m, y_m <= x_M))

Proposed:
def cube_isect(x_m,x_M,y_m,y_M):
  return (x_m >= y_m and x_m <= y_M) or (y_m >= x_m and y_m <= x_M)