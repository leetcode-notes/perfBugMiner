try ... catch like structure when loading tfrecords?

When transferring tfrecords from place to place, some of them might be damaged or become incomplete. In this case, tensorflow will just return a queue error.
Is it possible to put some try...catch structure into the data loading process to avoid the interuption?
Some of the core errors:
W tensorflow/core/framework/op_kernel.cc:975] Invalid argument: Could not parse example inpu
`tensorflow.python.framework.errors_impl.OutOfRangeError: FIFOQueue '_0_batch/fifo_queue' is closed and has insufficient elements (requested 1, current size 0)
[[Node: batch = QueueDequeueMany[_class=["loc:"], component_types=[DT_FLOAT, DT_INT64, DT_STRING], timeout_ms=-1, _device="/job:localhost/replica:0/task:0/cpu:0"](batch/fifo_queue, batch/n)]]
Caused by op u'batch', defined at:
File "check_tf_records.py", line 34, in `
OutOfRangeError (see above for traceback): FIFOQueue '_0_batch/fifo_queue' is closed and has insufficient elements (requested 1, current size 0) [[Node: batch = QueueDequeueMany[_class=["loc:@batch/fifo_queue"], component_types=[DT_FLOAT, DT_INT64, DT_STRING], timeout_ms=-1, _device="/job:localhost/replica:0/task:0/cpu:0"](batch/fifo_queue, batch/n)]]