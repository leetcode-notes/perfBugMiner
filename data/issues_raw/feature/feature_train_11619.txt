Feature request: tensordot GPU kernel

Hi,
I have two placeholder tensors with some matching axes that I would like to multiply element-wise and sum across. Implementation with tf.tensordot works perfectly on cpu, but it looks like there is no gpu kernel available for this op. Would it be possible to have one added? Or is there a workaround using simpler operations such as multiply and reduce_sum that are currently gpu-supported?
Specifically I would like to be able to run something equivalent to the following on gpu:
a=tf.placeholder(shape=[None,16,17,18]) #e.g.
b=tf.placeholder(shape=[5,17,18,20])
c=tf.tensordot(a,b,axes=[[2,3],[1,2]])
#shape of c: [None,16,5,20]
When I run c in a session using tf.device('/gpu:0') I get the following error:
InvalidArgumentError (see above for traceback): Cannot assign a device for operation 'Tensordot/ListDiff': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available. [[Node: Tensordot/ListDiff = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device="/device:GPU:0"](Tensordot/range, Tensordot/add_1)]]