tf.estimator.inputs.numpy_input_fn does not accept dict as labels.

System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Win10 x64
TensorFlow installed from (source or binary): pip install
TensorFlow version (use command below): r1.3
Python version:  3.5 amd 64
Bazel version (if compiling from source): Used binary
CUDA/cuDNN version: CUDA 8.0 + CuDNN 6.0
GPU model and memory:  GeForce GTX 1070 8.00GiB

According to the tf.estimator.Estimator document, estimator accept dict as labels input. However, when I creating a tf.estimator.inputs.numpy_input_fn as:
train_input_fn = tf.estimator.inputs.numpy_input_fn(
    x={"x": samples.astype(np.float32)},
    y={'go_action': np.full(samples.shape[0], 1), 'operation': ops.astype(np.float32)},
    batch_size=100,
    num_epochs=None,
    shuffle=True)
then feed it to estimator like:
action_estimator.train(
    input_fn=train_input_fn,
    steps=20000,
    hooks=[logging_hook])

it throw me an error:
Traceback (most recent call last):
  File "G:/Python/onmyoji-hacker/primary/cnnopnet.py", line 120, in <module>
    hooks=[logging_hook])
  File "C:\Python\Python35\lib\site-packages\tensorflow\python\estimator\estimator.py", line 241, in train
    loss = self._train_model(input_fn=input_fn, hooks=hooks)
  File "C:\Python\Python35\lib\site-packages\tensorflow\python\estimator\estimator.py", line 628, in _train_model
    input_fn, model_fn_lib.ModeKeys.TRAIN)
  File "C:\Python\Python35\lib\site-packages\tensorflow\python\estimator\estimator.py", line 499, in _get_features_and_labels_from_input_fn
    result = self._call_input_fn(input_fn, mode)
  File "C:\Python\Python35\lib\site-packages\tensorflow\python\estimator\estimator.py", line 585, in _call_input_fn
    return input_fn(**kwargs)
  File "C:\Python\Python35\lib\site-packages\tensorflow\python\estimator\inputs\numpy_io.py", line 109, in input_fn
    if len(set(v.shape[0] for v in ordered_dict_x.values())) != 1:
  File "C:\Python\Python35\lib\site-packages\tensorflow\python\estimator\inputs\numpy_io.py", line 109, in <genexpr>
    if len(set(v.shape[0] for v in ordered_dict_x.values())) != 1:
AttributeError: 'dict' object has no attribute 'shape'