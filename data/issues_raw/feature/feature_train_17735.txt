FEATURE REQUEST : Kindly provide the gradient for tf.assign

Hi, i am trying to connect a CNN to another custom layer i have created. However the custom layer that i have created requires the variables in my custom layer to be assigned from the outputs of CNN.
One may think why i need variables if its assigned from CNN at every iteration.
Reason for variable creation is to calculate explicit gradients(via Register gradient and pyFunc) that involves sparse linear equations ,so that i can apply these gradients on my variables so that the error is back propagated all the way into CNN.
However when i call tf.gradients ,all the values are None for CNN. I found a link over stackoverflow stating that gradients are not defined for tf.assign.
https://stackoverflow.com/questions/46984316/how-tf-assign-compute-gradients-in-tensorflow
Could you please provide gradient for tf.assign so that i can go for an end to end training.
Thanks.
Source code / logs
 with tf.variable_scope("xyz", reuse=tf.AUTO_REUSE) as scope:        
 F = tf.get_variable("FXT",  initializer=''')
 B = tf.get_variable("BXT",  initializer='')   
 lambda_tf = tf.get_variable("lamda_tf",initializer = [100.0],dtype=tf.float32)


assign_op1 = tf.assign(F,Fx)
assign_op2 = tf.assign(B,Bx)     

op=custom layer(F,B)
grads=tf.gradients(op,tf.all_trainables())

Here Fx and Bx are values from CNN
In my backprop i have custom gradients that i have explicitly calculated and over-riden with tf.RegisterGradient and gradient overide.
When i apply calculate grads i get
[None,None,None............None{None values returned for variables in CNN},Defined Gradients{Defined Gradients returned for variables in Custom Layer}]