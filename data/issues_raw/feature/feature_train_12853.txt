Sub-gradient for self_adjoin_eig when eigen values are equal

System information


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes, I have written custom code


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Linux 14.04


TensorFlow installed from (source or binary):
Binary


TensorFlow version (use command below):
1.2.1


Python version:
Python 2.7


Bazel version (if compiling from source):


CUDA/cuDNN version:
8.0.61


GPU model and memory:
Tesla K40c


Exact command to reproduce:


You can collect some of this information using our environment capture script:
https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh
You can obtain the TensorFlow version with
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
Describe the problem
Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.
This is a feature request. When any two eigen values are equal, the tf.gradients( tf.self_adjoint_eig(matrix), matrix) returns NaN.
While the gradient is not well defined, it would be useful if some valid sub-gradient is returned (which could be used in the optimization).
In particular, I am trying to optimize a function involving max eigen value of a matrix.
Even when two eigen values are equal, a valid sub-gradient would be v_1 * v_1^T,
where v_1 is the eigen vector corresponding to a max eigen value.
Source code / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.