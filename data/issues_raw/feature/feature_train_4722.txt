einsum not fully implemented

I am glad to see the newly added einsum function. The documentation claims that its usage is the same as numpy. However, it can do almost nothing as compared to numpy. For example, it only supports subscripts in the form of '->'. Unfortunately, even matrix transpose does not work, i.e., 'ij->ji'.
Numpy works:
>>> A
array([[ 0.3828997 , -0.39114848, -0.09727838, -0.20430113],
       [ 0.48020577, -0.47122706,  0.42830791,  0.25665744],
       [-0.30885863,  0.21669025,  0.31648793,  0.22417514],
       [ 0.32505724,  0.30478035,  0.48655034,  0.20040547]])
>>> einsum('ij->ji',A)
array([[ 0.3828997 ,  0.48020577, -0.30885863,  0.32505724],
       [-0.39114848, -0.47122706,  0.21669025,  0.30478035],
       [-0.09727838,  0.42830791,  0.31648793,  0.48655034],
       [-0.20430113,  0.25665744,  0.22417514,  0.20040547]])

Tensorflow does not work:
pseudo-code:
M_ = tf.Variable(tf.random_normal([4,4]))
N_ = tf.einsum('ij->ji',M_)              
print [M_, N_]

output:
[array([[ 0.80474716, -1.38590837, -0.3379252 , -1.24965811],
       [ 2.57852983,  0.05492432,  0.23039417, -0.74263287],
       [-2.42627382,  1.70774114,  1.19503212,  0.43006262],
       [-1.04652011, -0.32753903, -1.26430523,  0.8810069 ]], dtype=float32), 
array([[ 0.80474716, -1.38590837, -0.3379252 , -1.24965811],
       [ 2.57852983,  0.05492432,  0.23039417, -0.74263287],
       [-2.42627382,  1.70774114,  1.19503212,  0.43006262],
       [-1.04652011, -0.32753903, -1.26430523,  0.8810069 ]], dtype=float32)]

I want to multiply a matrix with every frame vector in every batch. Or similar operations which can be done by a simple tensor product. It seems that I still have to duplicate the matrix so many times and perform a batch_matmul, which is very inconvenient and slow and memory consuming.
I suggest tensorflow to implement either the tensordot or einsum function which can perform tensor product.
It is quite a shame that tensorflow cannot even perform basic tensor product so far :(