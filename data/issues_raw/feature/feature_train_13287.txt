Make a tools CLI for easy access to freeze_graph, saved_model_cli, etc.

Related to #6134. Right now, the users of the tensorflow/python/tools scripts have these options:

Download and save a copy of the individual .py file with whatever model/project they are working on, so that it is bundled with their code. This causes tons of code duplication across projects.
Import the tools programmatically and use them there. Being able to do this is extremely handy, but often the most convenient way to use the tool (and the way they are generally designed to be used) are as ad-hoc command-line calls.
Build a binary using Bazel. This is extremely inconvenient, and doesn't really solve the problem of code-reuse from above. I'd also argue that building a binary for what amounts to a Python script is overkill.
Create a custom CLI/module/alias that bundles these tools together (or allows for a single tool to be called from anywhere). This is convenient, but complicates setting up a development environment, and leads to divergent patterns across the user base.

I think having some sort of unified tool that is able to provide uniform access to the CLI of frequently used tools, such as freeze_graph.py and saved_model_cli.py would greatly improve UX, as well as make it much easier to explain how to use these tools. Additionally, it would help prevent version mismatches of tooling, as the correct version of the tool would already be at their fingertips (instead of fumbling through GitHub branches).
I think having some sort of simple umbrella module, let's call it tftools, which provides access to the underlying python files would suffice. E.g.
$ tftools freeze_graph --input_graph=... --output_graph=...

$ tftools saved_model_cli show --dir /tmp/saved_model_dir

This would be a little bit of legwork, but I think the benefit-out to effort-in ratio is pretty large, at least from a user perspective. Not sure if the TensorFlow team would want to handle this or leave it to the community (if I can get company approval, I'd be happy to take a crack at it).