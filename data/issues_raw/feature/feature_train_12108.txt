tf.string_split didn't behave the same as that split in python

In python, if we split the following string 'a#'.split('#'), we will get a list of two elements: ['a', ''].
While in tensorflow, if we use tf.string_split, we will get an sparsetensor with only one elements.
For reproduction, you can run the following piece of code
a = tf.constant("#2")
b = tf.string_split([a], "#")
with tf.Session() as ss:
    ss.run(tf.local_variables_initializer())
    print(ss.run(b))

As a result, when we use tf.string_split, we don't know whether the 2 is before or after the #. I think such behavior is undesirable since we usually have missing values when decoding csv files.