Custom configuration of tf.estimator.Estimator - unfavorable change on tf1.1

This is a feature request, following a change in behavior from TF1.0 to TF1.1.


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Debian GNU/Linux 8 (jessie) 64-bit
TensorFlow installed from (source or binary): installed using pip
TensorFlow version (use command below): v1.1.0-rc0-61-g1ec6ed5
Bazel version (if compiling from source):
CUDA/cuDNN version: N/A
GPU model and memory: N/A
Exact command to reproduce:
my_estimator = tf.estimator.Estimator(
model_fn = my_model_fn,
model_dir = my_model_dir,
config=tf.contrib.learn.RunConfig(
save_checkpoints_steps=20,
save_checkpoints_secs=None,
save_summary_steps=40,
)
)

Describe the problem
on tf version 1.0 we could easily configure the checkpoint dump (and more) of tf.contrib.learn.Estimator, as stated above: by sending as an input to the estimator tf.contrib.learn.RunConfig with the desired configuration.
on tf version 1.1 this became more complex: the above (and more) configurations in RunConfig are static, and changing them requires either changing the original tf code, or maybe creating a class inheriting from tf.estimator.RunConfig to serve as the config for the estimator.
Source code / logs
in tf.estimator.RunConfig (v1.1), e.g.:
@property
def save_checkpoints_secs(self):
return 600
in tf.contrib.learn.RunConfig (v1.0, yet supported on tf1.1):
@property
def save_checkpoints_secs(self):
return self._save_checkpoints_secs