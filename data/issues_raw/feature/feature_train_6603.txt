Allow dynamic summary names in new summary interface

This is a feature request connected with pull request #5558.
The new summary interface only allows Python strings as summary names, while the old one could use string tensors.
The new behaviour is considerably less flexible. Consider the case where you have train/devel/test data split, and you want to report summaries (accuracy for example) for each dataset individually (i.e., having them in three different graphs in TensorBoard). With the old summary interface, this can be accomplished nicely:
  dataset_name = tf.placeholder(tf.string, [])
  summary = tf.scalar_summary(dataset_name+"/accuracy", accuracy)
...
  s = session.run([summary], {dataset_name:"train" / "devel" / "test"})
With the new interface, there has to be three summary nodes in the Graph to accomplish this, which makes the code repetitive and more complicated to maintain (you can create the three nodes with different name scopes, but you have to store them somewhere [a dictionary?], and if you want to use these nodes after restoring a metagraph, things become unellegant).
One possible solution is #5558  -- that pull request adds a prefix to all summary operations. The prefix is added to all summary names and can be a string tensor. That would allow reporting summaries for different datasets, while being applicable to the "new summary approach" of naming the summary operations according to the summary names (i.e., with the new approach it is not possible for name to be string tensor, but a prefix is fine).
The change #5558 is opt-in, so nobody interested in dynamic summary names is affected, while allowing much more flexible names to those interested, and I would like to see it merged.
However, there could be other approaches how the problem could be solved. Therefore, I am opening this issue for discussion and finding the best solution.