Is it possible to extend normal operators like add/minus with convolution-like operating?

This is a feature request, and so far I haven't got any solution from tensorflow source code or websites like stackoverflow.
It may be confusing to state the problem like my title, so, I am going to give it a demo:

The input matrix A has shape of [5,5], and the operation matrix B has shape of [3,3];
In convolution manner, tf.nn.conv2d(A, B, padding='VALID') will compute like this:
create a sliding window C with the same size of the filter matrix B on matrix A, and apply
computation DOT(C, B) for all possible position of C on A. All obtained product of B and C
form the matrix of convolution result,
Here, if we enables the users to replace the DOT(C, B) with other element-wise operators
like ADD(C, B) or user defined ones, it will enable tons of more creative layer designs to
explore the power of AI.
A more flexiable interface will help users to avoid building his own operators by hacking the ops lib.
Sorry for interruption. If this request get passed, I hope I can help implementing it.