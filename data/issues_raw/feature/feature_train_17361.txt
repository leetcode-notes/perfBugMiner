Feature request: Let Dataset.padded_batch() return a sequence_length tensor as a feature

System information

Have I written custom code: Yes
OS Platform and Distribution: MacOS High Sierra v10.13.3
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): 1.5.0
Python version: 3.6.4 :: Anaconda, Inc.
Bazel version (if compiling from source): n/a
GCC/Compiler version (if compiling from source): n/a
CUDA/cuDNN version: n/a
GPU model and memory: Intel Iris Pro 1536 MB
Exact command to reproduce: n/a

Describe the problem
I am building a tf.data.Dataset that should return batches for model built around tf.nn.dynamic_rnn. The data consists of variable length time series, and i use Dataset.padded_batch to build batch tensors from these time series. When operating on variable length data, we want to pass a sequence_length tensor to tf.nn.dynamic_rnn. This tensor is also useful to extract the final valid outputs of the rnn for each series in the batch. It is possible to generate sequence_length in the model itself, knowing the padding symbol used by Dataset.padded_batch. This is unsatisfactory, however, as the padding symbol can be in the domain of the time series function, and thus, it is hard to know if you are looking at padding or real data.
Feature request
I suggest modifying Dataset.padded_batch in such a way that it can optionally return a sequence_length tensor as one of it's features, storing the true padding information. I think this would be very convenient for work with time series.