"Expected bool, got 1 of type 'int' instead" when taking gradient through 'greater'

While I didn't expect this to work, a better error message might be in order:
import tensorflow as tf
x=tf.constant(1)
y=tf.constant(2)
z=tf.greater(x,y)
tf.gradients(z,x)
TypeError                                 Traceback (most recent call last)
<ipython-input-8-4df05786a146> in <module>()
----> 1 tf.gradients(z,x)

/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients_impl.pyc in gradients(ys, xs, grad_ys, name, colocate_gradients_with_ops, gate_gradients, aggregation_method)
    377     ys = ops.convert_n_to_tensor_or_indexed_slices(ys, name="y")
    378     xs = ops.convert_n_to_tensor_or_indexed_slices(xs, name="x")
--> 379     grad_ys = _DefaultGradYs(grad_ys, ys, colocate_gradients_with_ops)
    380
    381     # The approach we take here is as follows: Create a list of all ops in the

/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients_impl.pyc in _DefaultGradYs(grad_ys, ys, colocate_gradients_with_ops)
    225         grad_ys[i] = array_ops.fill(
    226             array_ops.shape(y), constant_op.constant(
--> 227                 1, dtype=y.dtype))
    228     else:
    229       if grad_y.dtype != y.dtype:

/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.pyc in constant(value, dtype, shape, name, verify_shape)
    163   tensor_value = attr_value_pb2.AttrValue()
    164   tensor_value.tensor.CopyFrom(
--> 165       tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))
    166   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)
    167   const_tensor = g.create_op(

/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.pyc in make_tensor_proto(values, dtype, shape, verify_shape)
    365       nparray = np.empty(shape, dtype=np_dt)
    366     else:
--> 367       _AssertCompatible(values, dtype)
    368       nparray = np.array(values, dtype=np_dt)
    369       # check to them.

/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.pyc in _AssertCompatible(values, dtype)
    300     else:
    301       raise TypeError("Expected %s, got %s of type '%s' instead." %
--> 302                       (dtype.name, repr(mismatch), type(mismatch).__name__))
    303
    304

TypeError: Expected bool, got 1 of type 'int' instead.