Broadcasting support in `tf.where`

tf.where does not support broadcasting like its numpy equivalent at the moment. How easy would it be to add broadcasting?
Here are some examples.
condition = np.random.normal(0, 1, (3, 5, 1, 1)) < 0
x = np.zeros((7, 11))
y = np.ones((7, 11))

np.where(condition, x, y).shape  # (3, 5, 7, 11)
tf.where(condition, x, y)

>>> InvalidArgumentError: Shapes must be equal rank, but are 2 and 4 for 'Select_2' 
>>> (op: 'Select')  with input shapes: [3,5,1,1], [7,11], [7,11].
condition = np.random.normal(0, 1, (3, 5, 1, 1)) < 0
x = np.zeros((1, 1, 7, 11))
y = np.ones((1, 1, 7, 11))

np.where(condition, x, y).shape  # (3, 5, 7, 11)
tf.where(condition, x, y)

>>> InvalidArgumentError: Dimension 0 in both shapes must be equal, but are 1 and 3 
>>> for 'Select_3' (op: 'Select') with input shapes: [3,5,1,1], [1,1,7,11], [1,1,7,11].