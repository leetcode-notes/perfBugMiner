Feature request: Implementing spatially-sparse conv networks in TensorFlow

I am inspired by Dr. Ben Graham's recent work regarding spatially-sparse convolutional neural networks:
http://arxiv.org/abs/1409.6070 (particularly section 2.3)
http://www2.warwick.ac.uk/fac/sci/statistics/staff/academic-research/graham/sparse3d.pdf
He has graciously open-sourced his neural network library but I'd like to utilize these same ideas in my models, which are implemented in Tensorflow.
Unfortunately, I'm finding his implementation and citations a little hard to follow, but his description of a "feature matrix" and a "pointer matrix" sounds a little like something that can be implemented using sparse variable updates in Tensorflow (https://www.tensorflow.org/versions/r0.7/api_docs/python/state_ops.html#sparse-variable-updates), but I'm afraid that it might not be so simple and would require building custom kernels to support a new-ish type of convolution. But I don't know enough to say for certain which direction to take.
Any thoughts on how we can bring spatially-sparse convolutions to Tensorflow? Anyone interested in collaborating on implementing this?