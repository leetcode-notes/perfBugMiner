Feature Request: Let tf.scan accept/return tuples of Tensors in addition to just Tensors

Right now, tf.scan splits Tensors along dimension 0, and to process multiple state/input Tensors with tf.scan, we need to concatenate/split. For example, to create an LSTM block using tf.scan, we might have something like
def lstm_block(c_prev_and_m_prev, x):
    c_prev, m_prev = tf.split(1, 2, c_prev_and_m_prev)
    # Compute new c, m
    c_and_m = tf.concat(1, [c, m])
    return c_and_m

This has been asked about by others in #1725 and rdipietro/jupyter-notebooks#2
Also, if we hope to process multiple Tensors with significantly different shapes, then the current solution will become even less concise, as we'd probably have to do something like flatten, maintain shape info, unflatten, etc.
I can probably make this change if it's something that'd be accepted.