sparse_tensor_dense_matmul not working with float64 on gpu

tensorflow (I tried 0.11, 0.12 and master) claims sparse_tensor_dense_matmul be not supported on gpu, yet the docs
https://www.tensorflow.org/versions/r0.11/api_docs/python/sparse_ops.html#sparse_tensor_dense_matmul
and the fact that there is a source file
tensorflow/core/kernels/sparse_tensor_dense_matmul_op_gpu.cu.cc
which apparently gets compiled
.cache/bazel/_bazel_panzer/eb98e8482caa36ec89e479cdd4c996e7/execroot/tensorflow/bazel-out/local_linux-py3-opt/bin/tensorflow/core/kernels/libsparse_tensor_dense_matmul_op_gpu.pic.lo
suggest it should.
############ example script
import tensorflow as tf
import numpy as np

with tf.device('/gpu:0'):
    M = tf.SparseTensor(np.arange(4).reshape(2, 2), np.ones((2,)), (3, 3))
    v = tf.constant(np.ones((3, 1)))
    p = tf.sparse_tensor_dense_matmul(M, v)

    init = tf.initialize_all_variables()
    sess = tf.Session()
    sess.run(init)
    p = sess.run (p)

############ output
panzer:~$ python3 sparse_tensor_dense_matmul.py
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
WARNING:tensorflow:From sparse_tensor_dense_matmul.py:9 in <module>.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:936] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties:
name: GeForce GTX 1080
major: 6 minor: 1 memoryClockRate (GHz) 1.8095
pciBusID 0000:01:00.0
Total memory: 7.92GiB
Free memory: 7.81GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)
Traceback (most recent call last):
  File "/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1021, in _do_call
    return fn(*args)
  File "/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 999, in _run_fn
    self._extend_graph()
  File "/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1048, in _extend_graph
    self._session, graph_def.SerializeToString(), status)
  File "/usr/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device to node 'SparseTensorDenseMatMul/SparseTensorDenseMatMul': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.
         [[Node: SparseTensorDenseMatMul/SparseTensorDenseMatMul = SparseTensorDenseMatMul[T=DT_DOUBLE, adjoint_a=false, adjoint_b=false, _device="/device:GPU:0"](SparseTensor/indices, SparseTensor/values, SparseTensor/shape, Const)]]

During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "sparse_tensor_dense_matmul.py", line 11, in <module>
    sess.run(init)
  File "/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 766, in run
    run_metadata_ptr)
  File "/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 964, in _run
    feed_dict_string, options, run_metadata)
  File "/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1014, in _do_run
    target_list, options, run_metadata)
  File "/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1034, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device to node 'SparseTensorDenseMatMul/SparseTensorDenseMatMul': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.
         [[Node: SparseTensorDenseMatMul/SparseTensorDenseMatMul = SparseTensorDenseMatMul[T=DT_DOUBLE, adjoint_a=false, adjoint_b=false, _device="/device:GPU:0"](SparseTensor/indices, SparseTensor/values, SparseTensor/shape, Const)]]

Caused by op 'SparseTensorDenseMatMul/SparseTensorDenseMatMul', defined at:
  File "sparse_tensor_dense_matmul.py", line 7, in <module>
    p = tf.sparse_tensor_dense_matmul(M, v)
  File "/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/ops/sparse_ops.py", line 1339, in sparse_tensor_dense_matmul
    adjoint_b=adjoint_b)
  File "/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/ops/gen_sparse_ops.py", line 975, in _sparse_tensor_dense_mat_mul
    adjoint_b=adjoint_b, name=name)
  File "/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py", line 759, in apply_op
    op_def=op_def)
  File "/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 2240, in create_op
    original_op=self._default_original_op, op_def=op_def)
  File "/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 1128, in __init__
    self._traceback = _extract_stack()

InvalidArgumentError (see above for traceback): Cannot assign a device to node 'SparseTensorDenseMatMul/SparseTensorDenseMatMul': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.
         [[Node: SparseTensorDenseMatMul/SparseTensorDenseMatMul = SparseTensorDenseMatMul[T=DT_DOUBLE, adjoint_a=false, adjoint_b=false, _device="/device:GPU:0"](SparseTensor/indices, SparseTensor/values, SparseTensor/shape, Const)]]

Environment info
Operating System:
linux (ubuntu 16.04)
Installed version of CUDA and cuDNN:
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
/usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudart.so.8.0.44
/usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn.so.5.1.5
If installed from source, provide


The commit hash (git rev-parse HEAD)
e5d44ff


The output of bazel version
Build label: 0.4.0
Build target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar
Build time: Wed Nov 2 17:54:14 2016 (1478109254)
Build timestamp: 1478109254
Build timestamp as int: 1478109254