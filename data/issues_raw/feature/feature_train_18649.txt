Feature Request: Backprop through the transformation matrix in tf.contrib.image.transform and tf.contrib.image.rotate

System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04
TensorFlow installed from (source or binary): binary, cpu
TensorFlow version (use command below): 1.7.0
Python version: 2.7
Have I written custom code: No
Bazel version: N/A
CUDA/cuDNN version: N/A
GPU model and memory: GTX 730M but not in use
Exact command to reproduce: N/A

Hello Guys,
today I met a problem while using tf.contrib.image.rotate and tf.contrib.image.translate in TensorFlow. I want to train a Convolutional Network to estimate the rotation and translation between two 2D Laserscan images as Input (estimate some kind of odometry).
network = NeuralTransformEstimator()
xy, alpha = tf.split(network.logits, [2, 1], 1)
img1, img2 = tf.split(network.inputs, [1, 1], 3)
alphas = tf.squeeze(alpha, axis=1)
rotated = tf.contrib.image.rotate(img1, alphas, interpolation='NEAREST')
translated = tf.contrib.image.translate(rotated, xy, interpolation='NEAREST')
loss_function = tf.reduce_mean(tf.square(img2-translated))
The Network outputs three values(x,y, alpha) and the input is two images. When I use BackProp I get this error message:

ValueError: No gradients provided for any variable, check your graph for ops that do not support gradients, between variables

So I created a more lightweight approach to check if I did something wrong elsewhere but it seems that translate and rotate do not provide gradients.
Is there a chance that this feature will be added?