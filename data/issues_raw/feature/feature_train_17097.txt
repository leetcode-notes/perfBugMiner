Feature request: complex support in initializers

AFAIK no initializers work with tf.complex64 and tf.complex128 (is there a mathematical reason for this?).
My current workaround is to call them twice (once for the real part and once for the imaginary), as
def complex_initializer(base_initializer):
    f = base_initializer()

    def initializer(*args, dtype=tf.complex64, **kwargs):
        real = f(*args, **kwargs)
        imag = f(*args, **kwargs)
        return tf.complex(real, imag)

    return initializer


tf.get_variable(
        name='my_complex_variable',
        shape=[1],
        dtype=tf.complex64,
        initializer=complex_initializer(tf.random_normal_initializer))
which seems to work fine so I'm wondering why this isn't built-in already?