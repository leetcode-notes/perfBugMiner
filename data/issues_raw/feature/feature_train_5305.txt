More programmatically configurable TensorBoard graph visualization

I'm repeatedly making small tweaks to graphs and visualizing them in TensorBoard.
Here are two feature requests for TensorBoard that would make this workflow significantly smoother:
(1)
Allow the user to specify that a node should always be drawn in the main graph or as an auxiliary node.  Alternatively, add an option to draw all nodes in main graph.
Currently, TensorBoard chooses to put nodes in a subgraph as auxiliary nodes (within the subgraph). Adding a node to the main graph consists of "open subgraph, click auxiliary node to add to main graph", which needs to be repeated for each auxiliary node to move because "add to main graph" collapses all subgraphs. This pain could also be partially alleviated by an option to "Shift + Click" to add/remove multiple nodes from the main graph at once.
(2)
Allow the user to force edges to be drawn when both nodes are in the main graph.
Example case:
Let op X be in the top level graph. Let SG be a subgraph and let SG contain 10 subgraphs F_i for i=1,...,10 that all take X as input.
TensorBoard will draw an edge from X to SG, but each F_i will have it's dependence on X noted as an auxiliary input. There is no way to add X to the main graph because it is already in the main graph (but visualized as an aux input).
It would nice for there to be a way for there to be one edge from X to SG, and then 10 edges connecting the entry point of X into SG with each of the F_i. Ideally this option would also have a programmatic interface or at least a default to set.