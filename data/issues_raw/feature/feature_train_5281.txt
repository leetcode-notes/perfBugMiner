feature: permutation

This is a feature request on a Tensor creation function based on problems met when using tf.transpose.
Suppose I want to transpose a Tensor a (not variable) into a new Tensor, exchanging its two dimensions. Indices of the two dimensions are represented by two Tensors b and c.
From what I understand, there are only one complicated way of generating the argument perm in tf.transpose to achieve this in Tensorflow. That's by using tf.select twice.
dims = tf.range(5)
b = tf.constant(1)
c = tf.constant(3)
b_mask = tf.cast(tf.one_hot(b, 5), tf.bool)
c_mask = tf.cast(tf.one_hot(c, 5), tf.bool)
bs = tf.ones(5, tf.int32) * b
cs = tf.ones(5, tf.int32) * c
perm_1 = tf.select(b_mask, cs, dims)
perm_2 = tf.select(c_mask, bs, perm_1)
# ==> perm2: [0, 3, 2, 1, 4]
I personally feel this is too redundant for achieving such a simple operation. Could it be possible to add some op that generate permutations when it is not possible to be achieved by tf.gather (target dims are dynamic)?