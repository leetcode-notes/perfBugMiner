foldr is too restrictive:  dimension 0 in both shapes must be equal

Using TF 1.2.0-rc1 on Ubuntu 16.04.
There are cases where tf.foldr should work, but is unable to because of a restriction that the first shape dimensions be identical for all list elements.  Below is a self-contained example that demonstrates the problem:
import tensorflow as tf
sess = tf.InteractiveSession()

def concat2(A, B):
    return tf.concat([A, B], axis=0)

A = tf.constant([[10,10]])             # A.shape => (1,2)
B = tf.constant([[20, 20], [30, 30]])  # B.shape => (2,2)

print(concat2(A, B).eval())              # => [[10, 10], [20, 20], [30, 30]]
print(tf.foldr(concat2, [A, B]).eval())  # => ERROR!