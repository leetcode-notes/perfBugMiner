Queues don't support enqueuing SparseTensor?

It seems that right now RandomShuffleQueue doesn't support SparseTensor. When I run this minimal example
import tensorflow as tf
values = tf.constant([0, 1, 2], dtype=tf.int32)
indices = tf.constant([[0, 0], [0, 1], [0, 2]], dtype=tf.int64)
shape = tf.constant([1, 3], dtype=tf.int64)

sparse = tf.SparseTensor(values=values, indices=indices, shape=shape)
queue = tf.RandomShuffleQueue(2, 1, [tf.int32])
queue.enqueue([sparse])

I get the following error:
TypeError                                 Traceback (most recent call last)
<ipython-input-12-a8e6053e53cf> in <module>()
----> 1 queue.enqueue([sparse])

/Users/astepanov/.virtualenvs/py_asr/lib/python3.5/site-packages/tensorflow/python/ops/data_flow_ops.py in enqueue(self, vals, name)
    320     with ops.name_scope(name, "%s_enqueue" % self._name,
    321                         self._scope_vals(vals)) as scope:
--> 322       vals = self._check_enqueue_dtypes(vals)
    323 
    324       # NOTE(mrry): Not using a shape function because we need access to

/Users/astepanov/.virtualenvs/py_asr/lib/python3.5/site-packages/tensorflow/python/ops/data_flow_ops.py in _check_enqueue_dtypes(self, vals)
    275     for i, (val, dtype) in enumerate(zip(vals, self._dtypes)):
    276       tensors.append(ops.convert_to_tensor(val, dtype=dtype,
--> 277                                            name="component_%d" % i))
    278 
    279     return tensors

/Users/astepanov/.virtualenvs/py_asr/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in convert_to_tensor(value, dtype, name, as_ref, preferred_dtype)
    667 
    668         if ret is None:
--> 669           ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
    670 
    671         if ret is NotImplemented:

/Users/astepanov/.virtualenvs/py_asr/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py in _constant_tensor_conversion_function(v, dtype, name, as_ref)
    174                                          as_ref=False):
    175   _ = as_ref
--> 176   return constant(v, dtype=dtype, name=name)
    177 
    178 

/Users/astepanov/.virtualenvs/py_asr/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py in constant(value, dtype, shape, name, verify_shape)
    163   tensor_value = attr_value_pb2.AttrValue()
    164   tensor_value.tensor.CopyFrom(
--> 165       tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))
    166   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)
    167   const_tensor = g.create_op(

/Users/astepanov/.virtualenvs/py_asr/lib/python3.5/site-packages/tensorflow/python/framework/tensor_util.py in make_tensor_proto(values, dtype, shape, verify_shape)
    365       nparray = np.empty(shape, dtype=np_dt)
    366     else:
--> 367       _AssertCompatible(values, dtype)
    368       nparray = np.array(values, dtype=np_dt)
    369       # check to them.

/Users/astepanov/.virtualenvs/py_asr/lib/python3.5/site-packages/tensorflow/python/framework/tensor_util.py in _AssertCompatible(values, dtype)
    300     else:
    301       raise TypeError("Expected %s, got %s of type '%s' instead." %
--> 302                       (dtype.name, repr(mismatch), type(mismatch).__name__))
    303 
    304 

TypeError: Expected int32, got <tensorflow.python.framework.sparse_tensor.SparseTensor object at 0x105fedef0> of type 'SparseTensor' instead.