tf.metrics.mean_per_class_accuracy does not assume num_classes

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 14.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): ('v1.2.0-5-g435cdfc', '1.2.1')
Python version: 2.7.6
CUDA/cuDNN version: 5.1
Exact command to reproduce:

Describe the problem
When I run an Experiment with tf.metrics.mean_per_class_accuracy as a metric, I get the following error. This is unexpected because all other metrics simply need predictions and labels. Also, num_classes is already known by the graph in the model head.
ERROR:tensorflow:Could not create metric ops for MetricSpec(metric_fn=mean_per_class_accuracy, prediction_key=classes, label_key=None, weight_key=None), mean_per_class_accuracy() takes at least 3 arguments (2 given).
Traceback (most recent call last):
  File "/usr/lib/python2.7/runpy.py", line 162, in _run_module_as_main
    "__main__", fname, loader, pkg_name)
  File "/usr/lib/python2.7/runpy.py", line 72, in _run_code
    exec code in run_globals
  File "/usr/local/home/rasmi/trainer/task.py", line 282, in <module>
    learn_runner.run(generate_experiment_fn(args), args.job_dir)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/learn_runner.py", line 210, in run
    return _execute_schedule(experiment, schedule)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/learn_runner.py", line 47, in _execute_schedule
    return task()
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.py", line 495, in train_and_evaluate
    self.train(delay_secs=0)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.py", line 275, in train
    hooks=self._train_monitors + extra_hooks)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.py", line 665, in _call_train
    monitors=hooks)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/python/util/deprecation.py", line 289, in new_func
    return func(*args, **kwargs)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py", line 455, in fit
    loss = self._train_model(input_fn=input_fn, hooks=hooks)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py", line 1007, in _train_model
    _, loss = mon_sess.run([model_fn_ops.train_op, model_fn_ops.loss])
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py", line 505, in run
    run_metadata=run_metadata)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py", line 842, in run
    run_metadata=run_metadata)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py", line 798, in run
    return self._sess.run(*args, **kwargs)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py", line 960, in run
    run_metadata=run_metadata))
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/monitors.py", line 1178, in after_run
    induce_stop = m.step_end(self._last_step, result)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/monitors.py", line 357, in step_end
    return self.every_n_step_end(step, output)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/monitors.py", line 677, in every_n_step_end
    validation_outputs = self._evaluate_estimator()
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/monitors.py", line 653, in _evaluate_estimator
    metrics=self.metrics, hooks=self.hooks, name=self.name)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/python/util/deprecation.py", line 289, in new_func
    return func(*args, **kwargs)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py", line 543, in evaluate
    log_progress=log_progress)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py", line 829, in _evaluate_model
    model_fn_results = self._get_eval_ops(features, labels, metrics)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py", line 1196, in _get_eval_ops
    metrics, features, labels, model_fn_ops.predictions))
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py", line 269, in _make_metrics_ops
    result[name] = metric.create_metric_ops(features, labels, predictions)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/metric_spec.py", line 428, in create_metric_ops
    weights=inputs[self.weight_key] if self.weight_key else None)
  File "/usr/local/home/rasmi/virtualenvs/python2env/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/metric_spec.py", line 166, in _named_metric_fn
    return metric_fn(**kwargs)
TypeError: mean_per_class_accuracy() takes at least 3 arguments (2 given)

Source code / logs
I create my Experiment as follows:
    return tf.contrib.learn.Experiment(
        train_input_fn = train_input,
        eval_input_fn = eval_input,
        train_steps = 10000,
        eval_steps = 100,
        eval_metrics = {
          "mean_per_class_accuracy": tf.contrib.learn.MetricSpec(
            metric_fn=tf.metrics.mean_per_class_accuracy,
            prediction_key=tf.contrib.learn.PredictionKey.CLASSES
          )
      }