Different convolutional padding per channel

Hello,
would it be possible to specify different convolutional padding for each channel? My use case is using 3D convolutions on input, where the first dimension is temporal and the next 2 dimensions are 2D images. I'd like to have "SAME" padding on temporal dimension and "VALID" padding on convolutional dimensions.
The model in question is for estimating speed of a vehicle from on-board camera where a sequence of images of fixed length (e.g. 10 frames) is sent to a 3D convolutional network and it makes sense to avoid unnecessary clipping of temporal dimension where it's perfectly fine for convolutional part.
Would this be possible to add to TensorFlow?
Thank you!
Have I written custom code: No
OS Platform and Distribution: Linux Mint 18.2
TensorFlow installed from: pip
TensorFlow version: 1.3.0
Bazel version: N/A
CUDA/cuDNN version: 9.0
GPU model and memory: GTX970 4GB
Exact command to reproduce: tf.nn.conv2d's "padding" parameter uses a single approach for all convolutional dimensions