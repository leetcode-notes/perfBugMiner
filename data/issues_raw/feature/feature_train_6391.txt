tf.sparse_tensor_to_dense does not have a gradient

Differentiating tf.sparse_tensor_to_dense and also tf.sparse_to_dense returns None. At the same time, a hacky way of converting a sparse tensor to a dense tensor by using tf.sparse_add works. Please see the code below:
indices = tf.placeholder(tf.int64, (None, 2))
values = tf.placeholder(tf.float32, (None,))
sparse_tensor = tf.SparseTensor(indices, values, (5, 7))
dense_tensor1 = tf.sparse_tensor_to_dense(sparse_tensor)
dense_tensor2 = tf.sparse_add(tf.zeros((5, 7)), sparse_tensor)
sum1 = tf.reduce_sum(dense_tensor1)
sum2 = tf.reduce_sum(dense_tensor2)
print tf.gradients(sum1, values)
>>> [None]
print tf.gradients(sum2, values)
>>> [tf.Tensor ...]
What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?
Didn't find anything.
Environment info

A link to the pip package you installed:

pip install --user https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0rc1-cp27-none-linux_x86_64.whl

The output from python -c "import tensorflow; print(tensorflow.__version__)"

0.11.0rc1
If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)
Please see the code above.