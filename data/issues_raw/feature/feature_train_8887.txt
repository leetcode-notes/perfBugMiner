Embedding visualizations for hi-res images training (feature request)

Hi Tensorflow people, thank you all.
I wonder if I could train my image classification model on my normal sized images (1080px X 1920px) but still use Tensorboard's cool embedding visualizations. I prefer to keep the images with the highest resolution possible since it proved to be important for the classification.
In the tutorial (https://www.tensorflow.org/get_started/embedding_viz) the developers specify tensorflow currently supports sprites up to 8192px X 8192px, meaning you can either use a lot of low-res images (fine for MNIST 28X28 and CIFAR-10 32X32) or a few high-res images (a too small training set size). So, I was wondering if there could be a way around it.
What if, we could use full-res photos for training, but downsize them for the thumbnails needed to make up the sprite?
That way we could still get a sense of which picture is which in the visualization, but let the model train on higher quality data.

Can I do it myself, by creating a low-res (down-sized) copy of my entire database beforehand, and use it to create the sprite etc., will the embedding event still correlate to the same source image (and the right label in the metadata)?
Instead, should I put inside the training code itself, a small procedure for resizing of the full-res image after each bottleneck calculation, and then store that thumbnail in a separate folder - making sure the embedding log in the metadata actually corresponds to the right thumbnail?


Environment info:
Ubuntu 16.04.02 (64 bit)
tensorflow 0.12.1 CPU only (64 bit). I have a NVIDIA GTX 1050ti waiting to be used if crucial for this task.
I'm am a kind of a coding noob so forgive my inaccuracies and ignorance. I'm relatively new (6 months) to tensorflow and CNNs in general. I've been transfer-training inception V3 on classification of large (1080px X 1920px) images, divided to 10 labels (folders).
The reason I'm asking and not just diving deep into it is that I'll have to spend a lot of time to resize my images and create the perfect sprite image and metadata file, but won't have the confidence that the trained data corresponds to the sprite image. So I want to see if it's even possible to begin with - to get full certainty of visualized thumbnail corresponding to actual full-res image used for training.
Thank you for this great platform!! Tensorboard is a very powerful tool and I'm very excited to unlock the embedding visualizations' potential. @dandelionmane