tf.estimator.Estimator breaks when using python 3.5 type annotations

Minimal example:
import tensorflow as tf

def model_fn(features: dict, labels: tf.Tensor, mode: str):
    pass

estimator = tf.estimator.Estimator(model_fn)

results in
File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py", line 173, in __init__
    _verify_model_fn_args(model_fn, params)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py", line 742, in _verify_model_fn_args
    args = set(_model_fn_args(model_fn))
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py", line 737, in _model_fn_args
    return tuple(tf_inspect.getargspec(fn).args)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/util/tf_inspect.py", line 45, in getargspec
    if d.decorator_argspec is not None), _inspect.getargspec(target))
  File "/usr/lib/python3.5/inspect.py", line 1045, in getargspec
    raise ValueError("Function has keyword-only arguments or annotations"
ValueError: Function has keyword-only arguments or annotations, use getfullargspec() API which can support them

System information

OS Platform and Distribution: Linux Mint 17.2
TensorFlow version: v1.2.0-0-g12f033d 1.2.0
Python version: 3.5