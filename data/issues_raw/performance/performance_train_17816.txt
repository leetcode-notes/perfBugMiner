MKL_DNN is built during non-mkl builds.

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Ubuntu 14.04
TensorFlow installed from (source or binary):
Source
TensorFlow version (use command below):
master after 1.7
Python version:
2.7
Bazel version (if compiling from source):
0.11
GCC/Compiler version (if compiling from source):
does not matter
CUDA/cuDNN version:
n/a
GPU model and memory:
n/a
Exact command to reproduce:

bazel test --test_tag_filters=-no_oss,-oss_serial,-gpu,-benchmark-test -k --copt='-march=skylake-avx512' - //tensorflow/... -//tensorflow/compiler/... -//tensorflow/contrib/...

Describe the problem
I expected to see some test failures, or some other build failures. no MKL code should be compiled with the above command.
Source code / logs
ERROR: /home/kbuilder/.cache/bazel/_bazel_kbuilder/9a46bec5c8e82ceb5b4b229201d44d70/external/mkl_dnn/BUILD:3:1: Couldn't build file external/mkl_dnn/_objs/mkl_dnn/external/mkl_dnn/src/cpu/ref_lrn.pic.o: C++ compilation of rule '@mkl_dnn//:mkl_dnn' failed (Exit 1): clang failed: error executing command 
  (cd /home/kbuilder/.cache/bazel/_bazel_kbuilder/9a46bec5c8e82ceb5b4b229201d44d70/execroot/org_tensorflow && \
  exec env - \
    PATH=/bin:/usr/bin \
    PORTSERVER_ADDRESS=@unittest-portserver \
    PWD=/proc/self/cwd \
    PYTHON_BIN_PATH=/usr/bin/python \
    PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \
    TF_NEED_CUDA=0 \
    TF_NEED_OPENCL_SYCL=0 \
    TF_PYTHON_CONFIG_REPO=@org_tensorflow//third_party/toolchains/cpus/py \
  /usr/local/bin/clang -U_FORTIFY_SOURCE -fstack-protector -Wall -B/usr/local/bin -B/usr/bin -fcolor-diagnostics -fno-omit-frame-pointer -g0 -O2 '-D_FORTIFY_SOURCE=1' -DNDEBUG -ffunction-sections -fdata-sections -DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK '-march=skylake-avx512' '-std=c++0x' -MD -MF bazel-out/k8-opt/bin/external/mkl_dnn/_objs/mkl_dnn/external/mkl_dnn/src/cpu/ref_lrn.pic.d '-frandom-seed=bazel-out/k8-opt/bin/external/mkl_dnn/_objs/mkl_dnn/external/mkl_dnn/src/cpu/ref_lrn.pic.o' -fPIC -iquote external/mkl_dnn -iquote bazel-out/k8-opt/genfiles/external/mkl_dnn -iquote external/bazel_tools -iquote bazel-out/k8-opt/genfiles/external/bazel_tools -isystem external/mkl_dnn/include -isystem bazel-out/k8-opt/genfiles/external/mkl_dnn/include -isystem external/mkl_dnn/src -isystem bazel-out/k8-opt/genfiles/external/mkl_dnn/src -isystem external/mkl_dnn/src/common -isystem bazel-out/k8-opt/genfiles/external/mkl_dnn/src/common -isystem external/mkl_dnn/src/cpu -isystem bazel-out/k8-opt/genfiles/external/mkl_dnn/src/cpu -isystem external/mkl_dnn/src/cpu/xbyak -isystem bazel-out/k8-opt/genfiles/external/mkl_dnn/src/cpu/xbyak -isystem external/bazel_tools/tools/cpp/gcc3 -fexceptions -fopenmp -no-canonical-prefixes -Wno-builtin-macro-redefined '-D__DATE__="redacted"' '-D__TIMESTAMP__="redacted"' '-D__TIME__="redacted"' -c external/mkl_dnn/src/cpu/ref_lrn.cpp -o bazel-out/k8-opt/bin/external/mkl_dnn/_objs/mkl_dnn/external/mkl_dnn/src/cpu/ref_lrn.pic.o)
external/mkl_dnn/src/cpu/ref_lrn.cpp:20:10: fatal error: 'c_types_map.hpp' file not found
#include "c_types_map.hpp"

@tatianashp Could you add our Intel contacts to this issue?