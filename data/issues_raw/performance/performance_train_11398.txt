slow cifar10_multi_gpu_train.py stock example and 'Ignoring device specification /device:GPU' warning

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no, using stock example scripts from cifar10
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04.2 LTS inside singularity container using docker image tensorflow:latest-gpu
TensorFlow installed from (source or binary): docker://tensorflow/tensorflow:latest-gpu (unmodified)
TensorFlow version (use command below):

Singularity tensorflow.img:~> python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
('v1.2.0-5-g435cdfc', '1.2.1')


Python version: Python 2.7.12
Bazel version (if compiling from source):
CUDA/cuDNN version: cuda 8
GPU model and memory: 2 x K80, 12GB each
Exact command to reproduce:

$ python $CIFAR10_DIR/cifar10_multi_gpu_train.py --num_gpus=2 \
                                                 --batch_size=64 \
                                                 --log_device_placement=false \
                                                 --max_steps=10000

As a comparison, this one is faster:
$ python $CIFAR10_DIR/cifar10_train.py --batch_size=128 \
                                       --log_device_placement=false \
                                       --max_steps=10000

Describe the problem
We have multiGPU systems (8 GPUs with P2P capability) and would like to take advantage of this for faster training but using the stock example cifar10, TensorFlow is even slower when using 2 GPUs than when using a single GPU (cifar10_train.py). I tried several batch sizes with no luck. The python process seems CPU bound when using 2 GPUs, so the GPU SMs are far from being busy (~20% usage).
Also, I can see the following warnings:
2017-07-09 18:44:15.097496: I tensorflow/core/common_runtime/simple_placer.cc:675] Ignoring device specification /device:GPU:1 for node 'tower_1/fifo_queue_Dequeue' because the input edge from 'prefetch_queue/fifo_queue' is a reference connection and already has a device field set to /device:CPU:0
2017-07-09 18:44:15.097562: I tensorflow/core/common_runtime/simple_placer.cc:675] Ignoring device specification /device:GPU:0 for node 'tower_0/fifo_queue_Dequeue' because the input edge from 'prefetch_queue/fifo_queue' is a reference connection and already has a device field set to /device:CPU:0

Source code / logs
Trace from run:
2017-07-09 18:44:13.905522: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.
2017-07-09 18:44:13.905565: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.
2017-07-09 18:44:13.905573: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.
2017-07-09 18:44:14.479331: I tensorflow/core/common_runtime/gpu/gpu_device.cc:940] Found device 0 with properties:
name: Tesla K80
major: 3 minor: 7 memoryClockRate (GHz) 0.8235
pciBusID 0000:06:00.0
Total memory: 11.17GiB
Free memory: 11.11GiB
2017-07-09 18:44:14.821091: W tensorflow/stream_executor/cuda/cuda_driver.cc:523] A non-primary context 0x48f93a0 exists before initializing the StreamExecutor. We haven't verified StreamExecutor works with that.
2017-07-09 18:44:14.823728: I tensorflow/core/common_runtime/gpu/gpu_device.cc:940] Found device 1 with properties:
name: Tesla K80
major: 3 minor: 7 memoryClockRate (GHz) 0.8235
pciBusID 0000:07:00.0
Total memory: 11.17GiB
Free memory: 11.11GiB
2017-07-09 18:44:14.827006: I tensorflow/core/common_runtime/gpu/gpu_device.cc:961] DMA: 0 1
2017-07-09 18:44:14.827019: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 0:   Y Y
2017-07-09 18:44:14.827039: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 1:   Y Y
2017-07-09 18:44:14.827053: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:06:00.0)
2017-07-09 18:44:14.827061: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Creating TensorFlow device (/gpu:1) -> (device: 1, name: Tesla K80, pci bus id: 0000:07:00.0)
2017-07-09 18:44:15.097496: I tensorflow/core/common_runtime/simple_placer.cc:675] Ignoring device specification /device:GPU:1 for node 'tower_1/fifo_queue_Dequeue' because the input edge from 'prefetch_queue/fifo_queue' is a reference connection and already has a device field set to /device:CPU:0
2017-07-09 18:44:15.097562: I tensorflow/core/common_runtime/simple_placer.cc:675] Ignoring device specification /device:GPU:0 for node 'tower_0/fifo_queue_Dequeue' because the input edge from 'prefetch_queue/fifo_queue' is a reference connection and already has a device field set to /device:CPU:0
Filling queue with 20000 CIFAR images before starting to train. This will take a few minutes.
2017-07-09 18:44:20.249834: step 0, loss = 4.68 (53.2 examples/sec; 2.407 sec/batch)
2017-07-09 18:44:21.645904: step 10, loss = 4.62 (4843.2 examples/sec; 0.026 sec/batch)
2017-07-09 18:44:22.487916: step 20, loss = 4.49 (2954.3 examples/sec; 0.043 sec/batch)
2017-07-09 18:44:23.351235: step 30, loss = 4.30 (2900.9 examples/sec; 0.044 sec/batch)
2017-07-09 18:44:24.264403: step 40, loss = 4.39 (2565.3 examples/sec; 0.050 sec/batch)