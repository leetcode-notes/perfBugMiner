import_graph_def's input_map doesn't remap control inputs

If a graph g has a node y with a control input like ^x, I would have thought that tf.import_graph_def(g, input_map={"x": z}) would result in a graph having a node y with a control input^z.
Instead I get an error: ValueError: Attempted to map inputs that were not found in graph_def: [x:0].  This is on master.
Complete example:
import tensorflow as tf
g1=tf.Graph()
with g1.as_default():
    x=tf.constant(0.0, name="x")
    with tf.control_dependencies([x]):
        y=tf.constant(1, name="y")
g2=tf.Graph()
with g2.as_default():
    z=tf.constant(1.0, name="z")
    tf.import_graph_def(g1.as_graph_def(), input_map={"x": z})