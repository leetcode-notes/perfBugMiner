Eager: tf.size() does not respect `out_type`

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux, Ubuntu 16.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.7.0
Python version:  2.7.12
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A
Exact command to reproduce:

import tensorflow as tf

tf.enable_eager_execution()

print(tf.size([1, 2, 3]).dtype)
Describe the problem
As per the documentation of tf.size, the dtype of the returned tensor should default to tf.int32 and it can be optionally overridden by providing an out_type argument.
However, in the snippet above, tf.size() returns a tf.int64 tensor, and in a related StackOverflow question: https://stackoverflow.com/questions/49604969/gradient-error-occurred-when-calculate-two-embeddings-on-eager-mode the tf.size() used by _GatherGrad is resulting in a float64 tensor.
Long story short, this is a buggy discrepancy between eager execution and graph construction.
(Likely introduced in commit 47ea851)
CC @alextp