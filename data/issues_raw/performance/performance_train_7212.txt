tf.import_graph_def prepends 'import' to tensor names but graph_util.convert_variables_to_constants can't find the tensors

I am trying to merge two graph and encountering this issue.

# This is graph from session till now
g_current_def = sess.graph.as_graph_def()
with tf.Graph().as_default() as g_2:
    # Add another tensor which will be new input
    prepend_input = tf.placeholder(tf.string, name='prepend_input')
    # pass this new input tensor as input to imported graph
    output_tensor , = tf.import_graph_def(g_default_def, input_map={"input_tensor": prepend_input}, return_elements=['output_tensor']) #This operation prepends 'import' to all tensor names in default graph
    g2_default_def = g_2.as_graph_def()
    # Convert merged graph into graph_def
    output_graph_def = graph_util.convert_variables_to_constants(sess, g2_default_def, ["import/" + FLAGS.final_tensor_name])

This throws error
ValueError: Fetch argument u'import/final_training_ops/weights/final_weights:0' cannot be interpreted 
as a Tensor. ("The name 'import/final_training_ops/weights/final_weights:0' refers to a Tensor which d
oes not exist. The operation, 'import/final_training_ops/weights/final_weights', does not exist in the
 graph.")

whereas tensor 'final_training_ops/weights/final_weights:0' is declared in original graph.