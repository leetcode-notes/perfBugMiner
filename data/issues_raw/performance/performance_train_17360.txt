C++ api: use of op::Attrs methods in gradients

The generated op::Attrs struct returns new instances on its chainable methods, and doesn't change the original object.

  
    
      tensorflow/tensorflow/cc/framework/cc_op_gen.cc
    
    
         Line 701
      in
      d7d7f4e
    
    
    
    

        
          
           strings::StrAppend(&setters, "      Attrs ret = *this;\n"); 
        
    
  


There are a few related issues e.g. 
  
    
      tensorflow/tensorflow/cc/gradients/nn_grad.cc
    
    
         Line 164
      in
      6fdb9ad
    
    
    
    

        
          
           grad_attrs.DataFormat(data_format); 
        
    
  

 where the code assumes the underlying object is being mutated and the parameters don't actually pass through.
I guess there might be a couple of ways forward, depending on how Tensorflow prefers the C++ API:

Decide the Attrs chaining methods mutate the underlying object and fix the code generation.
Decide the Attrs chaining methods return new instances, and fix the uses.

Suggestions?
Fwiw if option 2, it might be nice to add TF_MUST_USE_RESULT to the generated API. (Unfortunately a long-standing bug in gcc means this may be unreliable as an actual error across versions of gcc that contributors may use.)
/cc @suharshs @keveman