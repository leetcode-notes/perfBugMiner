tf.TFRecordReader returns multiples copies of the same data with only 1 epoch

I am using tf.TFRecordReader and tf.train.batch to evaluate one epoch of my dataset (it has only one file). In order to get a better performance I tried to use enqueue_many passing a list of reader calls, because supposedly it launches several reader threads. However its behaviour has not been as I expected. It returns each item duplicated, although I thought it would return the same list of items, but faster. I took the code from @yaroslavvb github: https://github.com/yaroslavvb/stuff/blob/master/ericyue-slowreader/benchmark.py
Is this behaviour right? It seems really strange to me and I don't know if it is a bug or a feature.
Here you can see a snippet of the code:
reader = tf.TFRecordReader()
queue_batch = []
for i in range(enqueue_many_size):
    _, serialized_example = reader.read(filename_queue)
    queue_batch.append(serialized_example)
batch_serialized_example = tf.train.batch(
    [queue_batch],
    batch_size=batch_size,
    num_threads=thread_number,
    capacity=capacity,
    enqueue_many=True)

Environment info
Operating System: Ubuntu 16.04
Nvidia Geforce 1080
Python 3.5
Tensorflow version: 1.0.0
Installed version of CUDA and cuDNN:
/usr/local/cuda-8.0/lib64/libcudadevrt.a       /usr/local/cuda-8.0/lib64/libcudnn.so
/usr/local/cuda-8.0/lib64/libcudart.so         /usr/local/cuda-8.0/lib64/libcudnn.so.5
/usr/local/cuda-8.0/lib64/libcudart.so.8.0     /usr/local/cuda-8.0/lib64/libcudnn.so.5.0.5
/usr/local/cuda-8.0/lib64/libcudart.so.8.0.44  /usr/local/cuda-8.0/lib64/libcudnn.so.5.1.5
/usr/local/cuda-8.0/lib64/libcudart_static.a   /usr/local/cuda-8.0/lib64/libcudnn_static.a
The output for batch size of 4 records, enqueue_many_size=2, and record size of 16 floats, is:
[array([[  0.,   1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,  10.,
     11.,  12.,  13.,  14.,  15.],
   [  0.,   1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,  10.,
     11.,  12.,  13.,  14.,  15.],
   [ 16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,  25.,  26.,
     27.,  28.,  29.,  30.,  31.],
   [ 16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,  25.,  26.,
     27.,  28.,  29.,  30.,  31.]], dtype=float32)]