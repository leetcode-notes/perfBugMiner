tensorflow 1.4 tf.keras gives different result compared with using keras directly

I have tensorflow 1.4, when running the following code, the accuracy is different (78% vs. 34.90%) when I import Sequential, Dense, and model_from_json directly from keras (uncomment first 3 lines) compared with import from tensorflow.python.keras. Why is the big discrepancy?
(the data pima-indians-diabetes.csv is available at http://archive.ics.uci.edu/ml/machine-learning-databases/pima-indians-diabetes/pima-indians-diabetes.data)
#from keras.models import Sequential
#from keras.layers import Dense
#from keras.models import model_from_json
from tensorflow.python.keras.layers import Dense
from tensorflow.python.keras.models import Sequential, model_from_json
import numpy
import os
fix random seed for reproducibility
numpy.random.seed(7)
load pima indians dataset
dataset = numpy.loadtxt("pima-indians-diabetes.csv", delimiter=",")
split into input (X) and output (Y) variables
X = dataset[:,0:8]
Y = dataset[:,8]
create model
model = Sequential()
model.add(Dense(12, input_dim=8, kernel_initializer='uniform', activation='relu'))
model.add(Dense(8, kernel_initializer='uniform', activation='relu'))
model.add(Dense(1, kernel_initializer='uniform', activation='sigmoid'))
Compile model
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
Fit the model
model.fit(X, Y, epochs=150, batch_size=10, verbose=0)
evaluate the model
scores = model.evaluate(X, Y, verbose=0)
print("%s: %.2f%%" % (model.metrics_names[1], scores[1]*100))
serialize model to JSON
model_json = model.to_json()
with open("model.json", "w") as json_file:
json_file.write(model_json)
serialize weights to HDF5
model.save_weights("model.h5")
print("Saved model to disk")