Bug: tf.scan loses shape information when available

Operating System: CentOS 6.7
If installed from sources, provide the commit hash: b4b276e
tf.scan loses shape information when available, which in turn makes it necessary to pass around shape information that could be inferred from the Tensors themselves.
Example where we should see shape [3] (after conversion to list), but where we instead get a shape of <unknown>:
def fn(previous_output, current_input):
    print(current_input.get_shape())
    return current_input

x = tf.constant([[1, 2, 3], [4, 5, 6]])
initializer = tf.constant([0, 0, 0])

y = tf.scan(fn, x, initializer=initializer)

with tf.Session() as sess:
    print(sess.run(y))

# <unknown>
# [[1 2 3]
# [4 5 6]]