tf.sparse_placeholder does not accept fully specified shapes

When I try to construct tf.sparse_placeholder with fully specified shape, like this
tf.sparse_placeholder(tf.float32, shape=(10000, 10000))

I get
ValueError                                Traceback (most recent call last)
<ipython-input-15-977303dad90f> in <module>()
----> 1 tf.sparse_placeholder(tf.float32, shape=(10000, 10000))

/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/ops/array_ops.py in sparse_placeholder(dtype, shape, name)
   1584           dtypes.int64, shape=[None, None],
   1585           name=(name + "/indices") if name is not None else None),
-> 1586       dense_shape=shape)
   1587 # pylint: enable=redefined-outer-name
   1588 

/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/sparse_tensor.py in __init__(self, indices, values, dense_shape)
    134           values, name="values", as_ref=True)
    135       dense_shape = ops.convert_to_tensor(
--> 136           dense_shape, name="dense_shape", dtype=dtypes.int64)
    137     self._indices = indices
    138     self._values = values

/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in convert_to_tensor(value, dtype, name, preferred_dtype)
    649       name=name,
    650       preferred_dtype=preferred_dtype,
--> 651       as_ref=False)
    652 
    653 

/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype)
    714 
    715         if ret is None:
--> 716           ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
    717 
    718         if ret is NotImplemented:

/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in _TensorTensorConversionFunction(t, dtype, name, as_ref)
    587     raise ValueError(
    588         "Tensor conversion requested dtype %s for Tensor with dtype %s: %r"
--> 589         % (dtype.name, t.dtype.name, str(t)))
    590   return t
    591 

ValueError: Tensor conversion requested dtype int64 for Tensor with dtype int32: 'Tensor("Const_5:0", shape=(2,), dtype=int32)'

But when the shape is not fully specified, it is doing OK
In [16]: tf.sparse_placeholder(tf.float32, shape=(10000, None))
Out[16]: <tensorflow.python.framework.sparse_tensor.SparseTensor at 0x112a7ff60>

I don't think that's the desired behaviour here. As a workaround for now I dropped the shape altogether in my code, but this way I cannot ensure runtime correctness of values being fed in feed_dict.
Environment info
Operating System: MacOS Sierra
Installed version of CUDA and cuDNN: none
If installed from binary pip package, provide:

A link to the pip package you installed: pip install tensorflow==1.0.0
The output from python -c "import tensorflow; print(tensorflow.__version__)": 1.0.0