undocumented change in variable scope from tf 1.0.1 to tf 1.1.0

System Information

Custom code, a minimal reproducible example provided below
Linux Fedora 24 and Fedora 25
TensorFlow installed from binary using pip
TensorFlow version 1.0.1 and 1.1.0
CUDA 8.0/cuDNN 5.1
GeForce GTX 1080

Problem
I'm trying to run some code that I wrote for tensorflow 1.0.1 on tensorflow 1.1.0.
It seems like tf.contrib.layers.fully_connected is showing different behaviour for 1.1.0 compared to 1.0.1. See below for a minimal reproducible example showing the difference.
Source code and logs
Tensorflow 1.0.1, Fedora 24:
Python 2.7.13 (default, May 10 2017, 20:04:36) 
[GCC 6.3.1 20161221 (Red Hat 6.3.1-1)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import tensorflow as tf
>>> tf.contrib.layers.fully_connected(inputs=tf.placeholder(shape=[None,3],dtype=tf.float32),num_outputs=3,reuse=True,scope='DNN')
<tf.Tensor 'DNN/Relu:0' shape=(?, 3) dtype=float32>
>>> tf.__version__
'1.0.1'

Tensorflow 1.1.0, Fedora 25:
Python 2.7.13 (default, May 10 2017, 20:04:28) 
[GCC 6.3.1 20161221 (Red Hat 6.3.1-1)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import tensorflow as tf
>>> tf.contrib.layers.fully_connected(inputs=tf.placeholder(shape=[None,3],dtype=tf.float32),num_outputs=3,reuse=True,scope='DNN')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py", line 181, in func_with_args
    return func(*args, **current_args)
  File "/usr/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py", line 1433, in fully_connected
    outputs = layer.apply(inputs)
  File "/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py", line 320, in apply
    return self.__call__(inputs, **kwargs)
  File "/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py", line 286, in __call__
    self.build(input_shapes[0])
  File "/usr/lib/python2.7/site-packages/tensorflow/python/layers/core.py", line 123, in build
    trainable=True)
  File "/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py", line 1049, in get_variable
    use_resource=use_resource, custom_getter=custom_getter)
  File "/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py", line 948, in get_variable
    use_resource=use_resource, custom_getter=custom_getter)
  File "/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py", line 349, in get_variable
    validate_shape=validate_shape, use_resource=use_resource)
  File "/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py", line 1389, in wrapped_custom_getter
    *args, **kwargs)
  File "/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py", line 275, in variable_getter
    variable_getter=functools.partial(getter, **kwargs))
  File "/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py", line 228, in _add_variable
    trainable=trainable and self.trainable)
  File "/usr/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py", line 1334, in layer_variable_getter
    return _model_variable_getter(getter, *args, **kwargs)
  File "/usr/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py", line 1326, in _model_variable_getter
    custom_getter=getter, use_resource=use_resource)
  File "/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py", line 181, in func_with_args
    return func(*args, **current_args)
  File "/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/variables.py", line 262, in model_variable
    use_resource=use_resource)
  File "/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py", line 181, in func_with_args
    return func(*args, **current_args)
  File "/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/variables.py", line 217, in variable
    use_resource=use_resource)
  File "/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py", line 341, in _true_getter
    use_resource=use_resource)
  File "/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py", line 671, in _get_single_variable
    "VarScope?" % name)
ValueError: Variable DNN/weights does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?
>>> tf.__version__
'1.1.0'

Looking at the release notes for Tensorflow 1.1, there is no mention of change in behaviour of variable scope for tf.contrib.layers.fully_connected. But it seems like in 1.1 we have to create variables manually using tf.get_variable() before using tf.contrib.layers.fully_connected. Am I missing something?