Keras model.trainable_weights does not return all trainable weights

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): YES
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS 10.12.6
TensorFlow installed from (source or binary): BINARY
TensorFlow version (use command below): v1.4.0-rc1-11-g130a514 1.4.0
Python version: 3.5.4
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:
Exact command to reproduce:

Describe the problem
When creating a Keras model where two "towers" are merged with help of a Lambda layer, not all trainable weights are added to trainable_weights.
Source code / logs
The code below creates a model with four trainable variables: 2 weights and 2 biases. However, model.trainable_weights returns only one weight and one bias.
def func(x,y):
    return tf.add(x,y)

a= tf.keras.layers.Input(shape= (64,))
b = tf.keras.layers.Dense(5)(a)
c = tf.keras.layers.Dense(5)(a)
d = tf.keras.layers.Lambda(func, arguments={'y':c})(b)
model = tf.keras.models.Model(a, d)
model.trainable_weights

Output:
[<tf.Variable 'dense/kernel:0' shape=(64, 5) dtype=float32_ref>, <tf.Variable 'dense/bias:0' shape=(5,) dtype=float32_ref>]