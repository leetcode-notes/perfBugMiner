conv2d_transpose crashing, "NotFoundError: No algorithm worked!", only with batch size >=2^16

I'm getting a crash running a simple autoencoder network, stack trace below. Interestingly if I trim the batch size of the input (validate_vecs_normed) to 65535, everything is fine. E.g.
validate_vecs_normed.shape (65536, 75) crashes, validate_vecs_normed.shape (65536, 75) does not. The size of input is less than 20 MB so should be plenty of room with a 12GB card.
Traceback (most recent call last):
  [...snip...] 
    recon, batch_cost = sess.run([decoded, cost], feed_dict={x_in_unrav: validate_vecs_normed})
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py", line 895, in run
    run_metadata_ptr)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py", line 1124, in _run
    feed_dict_tensor, options, run_metadata)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py", line 1321, in _do_run
    options, run_metadata)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py", line 1340, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.NotFoundError: No algorithm worked!
	 [[Node: conv2d_transpose = Conv2DBackpropInput[T=DT_FLOAT, data_format="NHWC", padding="VALID", strides=[1, 2, 2, 1], use_cudnn_on_gpu=true, _device="/job:localhost/replica:0/task:0/gpu:0"](stack, W_0/read, enc_output_0)]]
	 [[Node: cost/_25 = _Recv[client_terminated=false, recv_device="/job:localhost/replica:0/task:0/cpu:0", send_device="/job:localhost/replica:0/task:0/gpu:0", send_device_incarnation=1, tensor_name="edge_47_cost", tensor_type=DT_FLOAT, _device="/job:localhost/replica:0/task:0/cpu:0"]()]]

Caused by op u'conv2d_transpose', defined at:
  [...snip...]
    saver = tf.train.import_meta_graph(os.path.join(model_dir, model_meta_format.format(fold_ind)))
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py", line 1698, in import_meta_graph
    **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/meta_graph.py", line 656, in import_scoped_meta_graph
    producer_op_list=producer_op_list)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/importer.py", line 313, in import_graph_def
    op_def=op_def)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py", line 2630, in create_op
    original_op=self._default_original_op, op_def=op_def)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py", line 1204, in __init__
    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access

NotFoundError (see above for traceback): No algorithm worked!
	 [[Node: conv2d_transpose = Conv2DBackpropInput[T=DT_FLOAT, data_format="NHWC", padding="VALID", strides=[1, 2, 2, 1], use_cudnn_on_gpu=true, _device="/job:localhost/replica:0/task:0/gpu:0"](stack, W_0/read, enc_output_0)]]
	 [[Node: cost/_25 = _Recv[client_terminated=false, recv_device="/job:localhost/replica:0/task:0/cpu:0", send_device="/job:localhost/replica:0/task:0/gpu:0", send_device_incarnation=1, tensor_name="edge_47_cost", tensor_type=DT_FLOAT, _device="/job:localhost/replica:0/task:0/cpu:0"]()]]

Possibly related to #11327 or #9576 but not sure. One other thing, when running same code on tensorflow 1.0.1, there was no crash, but the return value "decoded" was all zeros when running a large batch size, and normal with smaller. I'm not sure if it's the same 65535/65536 threshold, I hadn't found it at that point.
Just for fun I ran with TF_USE_CUDNN=0 but that crashes with UnimplementedError (see above for traceback): Conv2D for GPU is not currently supported without cudnn
OS: Ubuntu 16.04.
Running docker image based on tensorflow/tensorflow:1.3.0-devel-gpu (so python 2.7.12, CUDA v8.0, cuDNN v6.0), with nvidia-docker 17.05.0-ce.
Docker image tensorflow/tensorflow:1.0.1-gpu returns all zeros instead of crashing.
GPUs: 2x Titan X (Pascal).