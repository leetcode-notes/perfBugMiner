Bug: tf.dynamic_partition appears to produce bad outputs on GPU (0s appended) (TF 1.5/1.6)

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16
TensorFlow installed from (source or binary): Pip installed 1.5 and 1.6rc0
TensorFlow version (use command below): 1.5 and 1.6rc0
Python version: 3.6
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: 9
GPU model and memory: nvidia k80
Exact command to reproduce:

import tensorflow as tf
import numpy as np
x  = tf.constant(np.random.randn(3072))
inds = [0]*189 + [1]*184 + [2]*184 + [3]*191 + [4]*192 + [5]*195 + [6]*195 + [7]*195 + [8]*188 + [9]*195 + [10]*188 + [11]*202 + [12]*194 + [13]*194 + [14]*194 + [15]*192
assert(len(inds) == 3072)
partitioned = tf.dynamic_partition(x, inds, 16)
sess = tf.InteractiveSession()
res = sess.run(partitioned)
print(res[-1].shape) # This should be (192,) but is (198,)

Describe the problem
There appears to be a bug with tf.dynamic_partition. When I run the above commands, I see that there are some extra 0s appended to the final partitioned value, and its shape is incorrect - I'm not sure why.
I checked that this problem does not appear to occur with Tensorflow 1.4, but does occur with Tensorflow 1.5/1.6rc0 on their GPU versions. It does NOT appear to have any issue in the CPU version of Tensorflow 1.5/1.6rc0. I was able to reproduce the error on two separate computers with GPUs.
This might be related to #16872.
Source code / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.