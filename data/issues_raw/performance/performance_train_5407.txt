tf.contrib.metrics.streaming_precision doesn't accept predictions and labels of dtype tf.bool

According to documentation and comments in code, "tf.contrib.metrics.streaming_precision" should accept predictions and labels of boolean type, but it doesn't seem to be true.
To reproduce, modify testAllCorrect procedure in this file by adding dtype=tf.bool to tf.constant, as below:
  def testAllCorrect(self):
    inputs = np.random.randint(0, 2, size=(100, 1))

    predictions = tf.constant(inputs, dtype=tf.bool)
    labels = tf.constant(inputs, dtype=tf.bool)
    precision, update_op = metrics.streaming_precision(
        predictions, labels)

The test will fail:
tensorflow/contrib/metrics/python/ops % python ./metric_ops_test.py
======================================================================
ERROR: testAllCorrect (__main__.StreamingPrecisionTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "./metric_ops_test.py", line 656, in testAllCorrect
    predictions, labels)
  File "/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/framework/python/framework/deprecation.py", line 218, in new_func
    return func(*args, **kwargs)
  File "/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/metrics/python/ops/metric_ops.py", line 572, in streaming_precision
    updates_collections=None, name=None)
  File "/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/metrics/python/ops/metric_ops.py", line 215, in _streaming_true_positives
    is_true_positive = math_ops.logical_and(math_ops.equal(labels, 1),
  File "/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/gen_math_ops.py", line 726, in equal
    result = _op_def_lib.apply_op("Equal", x=x, y=y, name=name)
  File "/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py", line 490, in apply_op
    preferred_dtype=default_dtype)
  File "/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 657, in convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File "/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py", line 180, in _constant_tensor_conversion_function
    return constant(v, dtype=dtype, name=name)
  File "/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py", line 163, in constant
    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))
  File "/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py", line 353, in make_tensor_proto
    _AssertCompatible(values, dtype)
  File "/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py", line 290, in _AssertCompatible
    (dtype.name, repr(mismatch), type(mismatch).__name__))
TypeError: Expected bool, got 1 of type 'int' instead.

This happens in _streaming_true_positives function in this file, when executing math_ops.equal(labels, 1)
Can be repeated simply as:
import numpy as np
from tensorflow.python.ops import math_ops
import tensorflow as tf

label = tf.constant(np.array([1, 0, 1]), dtype=tf.bool)
math_ops.equal(label, 1)

Environment info
Operating System: Ubuntu 14.04.1
%ls -l /usr/local/cuda/lib64/libcud*  
-rw-r--r-- 1 root root    558720 Oct 20 14:53 /usr/local/cuda/lib64/libcudadevrt.a
lrwxrwxrwx 1 root root        16 Oct 20 14:53 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.8.0
lrwxrwxrwx 1 root root        19 Oct 20 14:53 /usr/local/cuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.44
-rwxr-xr-x 1 root root    415432 Oct 20 14:53 /usr/local/cuda/lib64/libcudart.so.8.0.44
-rw-r--r-- 1 root root    775162 Oct 20 14:53 /usr/local/cuda/lib64/libcudart_static.a
lrwxrwxrwx 1 1000 users       13 Jul 26 22:55 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.5
lrwxrwxrwx 1 1000 users       17 Jul 26 22:55 /usr/local/cuda/lib64/libcudnn.so.5 -> libcudnn.so.5.1.5
-rwxrwxr-x 1 1000 users 79337624 Jul 26 22:53 /usr/local/cuda/lib64/libcudnn.so.5.1.5
-rw-rw-r-- 1 1000 users 69756172 Jul 26 22:53 /usr/local/cuda/lib64/libcudnn_static.a

python -c "import tensorflow; print(tensorflow.__version__)"
Version: 0.11.0rc2