sparse_placeholder failed when specifying shape

When trying to create a sparse placeholder, exception raised if specifying the shape parameter:
features_placeholder = tf.sparse_placeholder(tf.float32, shape=(16, 20424)) # failed
features_placeholder = tf.sparse_placeholder(tf.float32)  # pass

Exception reads like:
  File "tf_learn.py", line 92, in run_training
    features_placeholder = tf.sparse_placeholder(tf.float32, shape=(FLAGS.batch_size, etc.FEATURE_SIZE))
  File "C:\local\Anaconda3-4.1.1-Windows-x86_64\envs\tf-py35\lib\site-packages\tensorflow\python\ops\array_ops.py", line 1653, in sparse_placeholder
    shape=shape
  File "C:\local\Anaconda3-4.1.1-Windows-x86_64\envs\tf-py35\lib\site-packages\tensorflow\python\framework\sparse_tensor.py", line 135, in __init__
    shape = ops.convert_to_tensor(shape, name="shape", dtype=dtypes.int64)
  File "C:\local\Anaconda3-4.1.1-Windows-x86_64\envs\tf-py35\lib\site-packages\tensorflow\python\framework\ops.py", line 669, in convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File "C:\local\Anaconda3-4.1.1-Windows-x86_64\envs\tf-py35\lib\site-packages\tensorflow\python\framework\ops.py", line 583, in _TensorTensorConversionFunction
    % (dtype.name, t.dtype.name, str(t)))
ValueError: Tensor conversion requested dtype int64 for Tensor with dtype int32: 'Tensor("Const:0", shape=(2,), dtype=int32)'


Is this a bug?