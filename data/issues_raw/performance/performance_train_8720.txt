split not working correctly

import tensorflow as tf
import numpy as np

model_input = tf.placeholder(tf.float32, shape=(1, 10))
model_split = tf.split(model_input, [4], axis=1)[0]

input = np.zeros((1, 10))
session = tf.Session()
split = session.run(model_split, feed_dict = { model_input: input })

# the size of the evaluated tensor does not match the size of the tensor
assert split.shape == (1, 10)
assert model_split.get_shape() == (1, 4)

model_b = tf.zeros((1, 4))

# this is okay adding things of the same shape
session.run(model_b+model_b, feed_dict = { model_input: input })

# check that model_b and model_split have the same shape
assert model_b.get_shape() == model_split.get_shape()

# this line crashes because the shape of model_split + model_b are not compatible.
# although the assert just checked that the sized match. This is the error message:
#          InvalidArgumentError (see above for traceback): Incompatible shapes: [1,10] vs. [1,4]
session.run(model_split + model_b, feed_dict = { model_input: input })
NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.
For general support from the community, see StackOverflow.
To make bugs and feature requests more easy to find and organize, we close issues that are deemed
out of scope for GitHub Issues and point people to StackOverflow.
For bugs or installation issues, please provide the following information.
The more information you provide, the more easily we will be able to offer
help and advice.
What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?
Environment info
Operating System: Windows
Installed version of CUDA and cuDNN:
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
See #2 below
If installed from binary pip package, provide:

A link to the pip package you installed:
How do I get this?
The output from python -c "import tensorflow; print(tensorflow.__version__)".

(C:\Users\television2\Anaconda3) C:\cygwin64\home\television2\nn\hierarchy>python -c "import tensorflow; print(tensorflow.version)"
I c:\tf_jenkins\home\workspace\release-win\device\gpu\os\windows\tensorflow\stream_executor\dso_loader.cc:135] successfully opened CUDA library cublas64_80.dll locally
I c:\tf_jenkins\home\workspace\release-win\device\gpu\os\windows\tensorflow\stream_executor\dso_loader.cc:135] successfully opened CUDA library cudnn64_5.dll locally
I c:\tf_jenkins\home\workspace\release-win\device\gpu\os\windows\tensorflow\stream_executor\dso_loader.cc:135] successfully opened CUDA library cufft64_80.dll locally
I c:\tf_jenkins\home\workspace\release-win\device\gpu\os\windows\tensorflow\stream_executor\dso_loader.cc:135] successfully opened CUDA library nvcuda.dll locally
I c:\tf_jenkins\home\workspace\release-win\device\gpu\os\windows\tensorflow\stream_executor\dso_loader.cc:135] successfully opened CUDA library curand64_80.dll locally
1.0.0