Exporting and loading models with crossed_columns gives errors

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
yes, see below
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
ubuntu 16.04
TensorFlow installed from (source or binary):
binary
TensorFlow version (use command below):
1.1.0

Describe the problem
I trained a LinearClassifier that includes a crossed_column. When I export it and then load and run it again I get an error message: "ValueError: No op named SparseFeatureCross in defined operations".
Source code / logs
To train and export the model I used the following python script:
import tensorflow as tf
from tensorflow.contrib.learn.python.learn.utils import input_fn_utils

def input_fn():
    features = {'a': tf.constant([[1],[2]]),
                'b': tf.constant([[3],[4]]) }
    labels = tf.constant([0, 1])
    return features, labels

feature_a = tf.contrib.layers.sparse_column_with_integerized_feature("a", bucket_size=10)
feature_b = tf.contrib.layers.sparse_column_with_integerized_feature("b", bucket_size=10)
feature_c = tf.contrib.layers.crossed_column([feature_a, feature_b], hash_bucket_size=100)
feature_columns = [feature_a, feature_b, feature_c]
model = tf.contrib.learn.LinearClassifier(feature_columns=feature_columns)
model.fit(input_fn=input_fn, steps=10)

feature_spec = tf.contrib.layers.create_feature_spec_for_parsing(feature_columns)
serving_input_fn = input_fn_utils.build_parsing_serving_input_fn(feature_spec)
model.export_savedmodel('simple-cross/export', serving_input_fn)

To load and run the model I used the following python script:
import tensorflow as tf

def _int_feature(value):
  return tf.train.Feature(int64_list=tf.train.Int64List(value=[value]))

with tf.Session() as session:
    model = tf.saved_model.loader.load(session, ['serve'], "simple-cross/export/1494601566/")
    probs = tf.get_default_graph().get_tensor_by_name('linear/binary_logistic_head/predictions/probabilities:0')

    feature_dict = {'a': _int_feature(value=0),
                    'b': _int_feature(value=5)}
    example = tf.train.Example(features=tf.train.Features(feature=feature_dict)).SerializeToString()
    feed_dict = { 'input_example_tensor:0' : [example] }
    print(session.run(probs, feed_dict=feed_dict))

(BTW: is this the best way to import/run a saved model? It feels like plugging in constants like linear/binary_logistic_head/predictions/probabilities:0 isn't the way to go.)
This results in the following error:
ValueError: No op named SparseFeatureCross in defined operations.

Notes
When I add the import
from tensorflow.contrib.learn.python.learn.utils import input_fn_utils

to the load/run script, it magically works.
Unfortunately, I like to run the model from Java as well, and in Java there is no analogous workaround AFAIK (input_fn_utils doesn't exist there).