shuffle_batch gives ZeroDivisionError when computing capacity stat

import tensorflow as tf
raw = tf.ones((2))
tf.train.shuffle_batch([raw], batch_size=2, capacity=4, min_after_dequeue=4, seed=5)


this fails with
ZeroDivisionError                         Traceback (most recent call last)
<ipython-input-11-86e4af7ca1ee> in <module>()
      1 import tensorflow as tf
      2 raw = tf.ones((2))
----> 3 tf.train.shuffle_batch([raw], batch_size=2, capacity=4, min_after_dequeue=4, seed=5)

/Users/yaroslav/anaconda/envs/tim-jan17/lib/python3.5/site-packages/tensorflow/python/training/input.py in shuffle_batch(tensors, batch_size, capacity, min_after_dequeue, num_threads, seed, enqueue_many, shapes, allow_smaller_final_batch, shared_name, name)
   1220       allow_smaller_final_batch=allow_smaller_final_batch,
   1221       shared_name=shared_name,
-> 1222       name=name)
   1223 
   1224 

/Users/yaroslav/anaconda/envs/tim-jan17/lib/python3.5/site-packages/tensorflow/python/training/input.py in _shuffle_batch(tensors, batch_size, capacity, min_after_dequeue, keep_input, num_threads, seed, enqueue_many, shapes, allow_smaller_final_batch, shared_name, name)
    779     full = (math_ops.cast(math_ops.maximum(0, queue.size() - min_after_dequeue),
    780                           dtypes.float32) *
--> 781             (1. / (capacity - min_after_dequeue)))
    782     # Note that name contains a '/' at the end so we intentionally do not place
    783     # a '/' after %s below.


Unlike TF tensors, Python doesn't handle float division by zero. One solution is to wrap "capacity" and "min_after_dequeue" into TF tensors so that you get "inf" as a result instead of RuntimeError