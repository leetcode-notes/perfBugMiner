Multiple runs of Configure with MKL enabled leads to cyclic symlinks

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Centos 7
TensorFlow installed from (source or binary): Compilation from source
TensorFlow version (use command below): v1.2.1 and v1.3.0-r1
Python version: Python 3.5.2
Bazel version (if compiling from source): 0.5.2
CUDA/cuDNN version: N/A
GPU model and memory: N/A
Exact command to reproduce: ./configure [enter] [enter] y y [enter till complete], twice

Describe the problem
Currently the way the configure script is written for the MKL decision branch it does not ensure no cyclic symbolic links are created for libdl.so.2
This becomes a problem if MKL has been downloaded already upon a re-run of the configure script and the first line of the locate output happens to be the symlink located in the third_party/mkl directory. If that occurs then the ln -sf command will create a cyclic symlink.
This can be fixed either by checking that "$loc" is not the same string as "$PWD"/third_party/mkl/libdl.so.2 or by checking for the existence of the symlink before the ln command.
Source code / logs
configure, line 276, 277.
loc=$(locate -e libdl.so.2 | sed -n 1p) <- can end up returning the destination file if it already exists
ln -sf $loc third_party/mkl/libdl.so.2 <- if "$loc" == "$PWD"/third_party/mkl/libdl.so.2, creates cyclic link.