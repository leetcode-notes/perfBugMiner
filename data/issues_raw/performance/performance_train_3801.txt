Unclear documentation on dynamic_rnn vs rnn for efficient dynamic sequence length computation

It looks like from the latest documentation that rnn performs early stopping for dynamic length sequences whereas dynamic_rnn does not? This would seem to be the reverse of the intuition.
So it looks like in commit 855d3b5, the definition of dynamic_rnn was changed from:

The parameter sequence_length is required and dynamic calculation is
automatically performed.

to:

The parameter sequence_length is optional and is used to copy-through state
and zero-out outputs when past a batch element's sequence length. So it's more
for correctness than performance, unlike in rnn().

Whereas the rnn documentation states:

If the sequence_length vector is provided, dynamic calculation is performed.
This method of calculation does not compute the RNN steps past the maximum
sequence length of the minibatch (thus saving computational time),

For me this makes it very unclear. In this context, does rnn do "more dynamic" unrolling than dynamic_rnn because it actually uses sequence_length to stop early. So if I want to do efficient variable length sequences dynamically, I should use rnn instead of dynamic_rnn.
In this case, what does dynamic_rnn actually do (what is "dynamic unrolling" explicitly defined), except for accept input in a different format?