Improve resize_bicubic performance by reorganizing loops

This fix tries to address the issue raised in #13693 where performance of resize_bicubic is subpar compared with opencv.
This fix rearranges the loops so that the logic for num_channel=40 and num_channel=3 are similar.
Before this PR, num_channel=3 is treated specially. It looks like manual unrolling will improve the performance for num_channel=3. So this PR keeps num_channel=3 as a special case.
Pre-fix:
CHANNEL=40
opencv: 145.08ms
tf: 314.26ms

CHANNEL=3
opencv: 11.95ms
tf: 8.95ms

Post-fix (without manual unrolling for num_channel=3):
CHANNEL=40
opencv: 144.25ms
tf: 214.55ms

CHANNEL=3
opencv: 11.78ms
tf: 14.07ms

Post-fix (with manual unrolling for num_channel=3):
CHANNEL=40
opencv: 144.80ms
tf: 212.54ms

CHANNEL=3
opencv: 11.74ms
tf: 9.46ms

This fix fixes #13693.
Signed-off-by: Yong Tang yong.tang.github@outlook.com