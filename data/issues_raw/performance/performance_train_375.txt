CUDA headers not found when implementing GPU kernel for user-op

I am following the tutorial to implement a user-op. I have three files dna_encode_op.cc, dna_encode_op_gpu.cu.cc, and dna_encode_op.h.
I have configured TensorFlow with GPU support using ./configure. However, during compilation of dna_encode_op_gpu.cu.cc, Bazel doesn't find the CUDA headers:
INFO: From Compiling tensorflow/core/user_ops/dna_encode_op_gpu.cu.cc [for host]:
In file included from ./tensorflow/core/framework/tensor_types.h:4:0,
                 from tensorflow/core/user_ops/dna_encode_op_gpu.cu.cc:8:
./third_party/eigen3/unsupported/Eigen/CXX11/Tensor:55:18: fatal error: cuda.h: No such file or directory
 #include <cuda.h>
                  ^
compilation terminated.
ERROR: /home/hannes/git/DNAflow_internal/tensorflow/core/BUILD:339:1: C++ compilation of rule '//tensorflow/core:user_ops_op_lib' failed: crosstool_wrapper_driver_is_not_gcc failed: error executing command third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -Wunused-but-set-parameter -Wno-free-nonheap-object ... (remaining 50 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.

Building the included ops works well, so I'm wondering whether I have to modify BUILD - however, there is no mention of this in the tutorials.