/gpu:0/stream doesn't appear on Timeline

System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Ubuntu 16.04
TensorFlow installed from (source or binary):
source
TensorFlow version (use command below):
('v1.2.0-2479-g88abddb', '1.3.0-rc0')
Python version:
2.7.12
Bazel version (if compiling from source):
bazel release 0.4.5
CUDA/cuDNN version:
CUDA 8.0
cuDNN 5.1.5
GPU driver version
375.66
GPU model and memory:
GeForce GTX 1080
8GB
Exact command to reproduce:
python convolution.py (attached)

The Problem
Making a timeline.Timeline object in my environment, "/gpu:0/stream:xx" rows don't appear.

I found the event collector function BufferCompleted were not called at all during measuring performance.
Though BufferCompleted is registered as a callback function to CUPTI for processing GPU events, CUPTI doesn't call it in my environment. This comes from failing to flush GPU events.
GPU events are flushed by ActivityFlushAll with flag CUPTI_ACTIVITY_FLAG_NONE in tensorflow. But this flag doesn't seem to cover necessary GPU events, so GPU events were not flushed and collected.
I modified gpu_tracer.cc to call ActivityFlushAll with flag CUPTI_ACTIVITY_FLAG_FORCE_INT, then I got "/gpu:0/stream:xx" rows in Timeline.

Is there any reason to use CUPTI_ACTIVITY_FLAG_NONE?
Source code / logs
Attached source code comes from tensorflow/models .
The following modification was added to measure performance.
    from tensorflow.python.client import timeline
    run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)
    run_metadata = tf.RunMetadata()
    l, lr, predictions = sess.run([loss, learning_rate, train_prediction],
                                   feed_dict=feed_dict, options=run_options, run_metadata=run_metadata)

    tl = timeline.Timeline(run_metadata.step_stats)
    ctf = tl.generate_chrome_trace_format(show_memory=True,
                                        show_dataflow=True)
    with open("timeline.json", "w") as f:
      f.write(ctf)

convolutional.py.zip