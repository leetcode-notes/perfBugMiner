Session#run method's feed_dict argument implicitly converts types

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes?
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): OSX 10.12.3
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.1.0
Bazel version (if compiling from source): NA
CUDA/cuDNN version: None
GPU model and memory: None
Exact command to reproduce: (see below)

Describe the problem
Hi TensorFlow humans! Thanks so much for making TensorFlow!
Right now, if you feed a floating point array into a integral placeholder type, it will be converted implicitly. To my knowledge, most python operations will not implicitly convert.
The implicit conversion potentially creates convenience, but of course it also creates the opportunity for a hard-to-see bug. In my case, I lost about 1 day to find this bug and experienced great sadness. That probably says more about me than it does about TF.
Still, my feeling is that it is a more sensible default to require the user to do the conversion explicitly. Alternatively, perhaps it would be logical to log a warning to the user.
Note that, to my knowledge, TF operations like tf.equal require both tensors to have the same type. So users might have a belief that that TF and Session#run require them to be fairly explicit about types.
If it would be likely to be accepted, I am happy to write a patch for TF that warns the user when they feed a tensor of the wrong type.
Thanks for reading this issue!
Source code / logs
import numpy as np
import tensorflow as tf

session = tf.Session()
convert_implicitly = tf.placeholder(tf.int64, [None])
float_input = np.random.uniform(size = 10)
result = session.run(
    convert_implicitly,
    feed_dict = { convert_implicitly: float_input }
)
print(result)

Output
>> python test.py
2017-05-14 18:20:22.524862: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.
2017-05-14 18:20:22.524890: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.
2017-05-14 18:20:22.524906: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine andcould speed up CPU computations.
[0 0 0 0 0 0 0 0 0 0]