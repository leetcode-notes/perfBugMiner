0.11.0rc1 linux 2.7 GPU nightlies ignore CUDA 7.5 installation, wants CUDA 8.0

A couple of days ago the 0.11.0rc1 nightly depended on CUDA 7.5 #269 for example. I've just downloaded today's nightly and it seems to want CUDA 8.0. Is CUDA 8.0 the new pip binary dependency or is this a mistake?
What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?
N/A
Environment info
Operating System: Ubuntu 16.04
Installed version of CUDA and cuDNN: CUDA 7.5 and cuDNN 4.0.7
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
$ ls -l /usr/lib/x86_64-linux-gnu/libcud*
-rw-r--r-- 1 root root   322936 Sep 19  2015 /usr/lib/x86_64-linux-gnu/libcudadevrt.a
lrwxrwxrwx 1 root root       16 Mar 30  2016 /usr/lib/x86_64-linux-gnu/libcudart.so -> libcudart.so.7.5
lrwxrwxrwx 1 root root       19 Mar 30  2016 /usr/lib/x86_64-linux-gnu/libcudart.so.7.5 -> libcudart.so.7.5.18
-rw-r--r-- 1 root root   383336 Sep 19  2015 /usr/lib/x86_64-linux-gnu/libcudart.so.7.5.18
-rw-r--r-- 1 root root   720192 Sep 19  2015 /usr/lib/x86_64-linux-gnu/libcudart_static.a
lrwxrwxrwx 1 root root       12 Jun  5 01:26 /usr/lib/x86_64-linux-gnu/libcuda.so -> libcuda.so.1
lrwxrwxrwx 1 root root       17 Jun  5 01:26 /usr/lib/x86_64-linux-gnu/libcuda.so.1 -> libcuda.so.364.19
-rw-r--r-- 1 root root 16963368 Apr 19  2016 /usr/lib/x86_64-linux-gnu/libcuda.so.364.19
lrwxrwxrwx 1 root root       13 Aug 29 10:59 /usr/lib/x86_64-linux-gnu/libcudnn.so -> libcudnn.so.4
lrwxrwxrwx 1 root root       17 Aug 29 10:59 /usr/lib/x86_64-linux-gnu/libcudnn.so.4 -> libcudnn.so.4.0.7
-rwxr-xr-x 1 root root 61453024 Aug 29 10:59 /usr/lib/x86_64-linux-gnu/libcudnn.so.4.0.7
-rw-r--r-- 1 root root 62025862 Aug 29 10:59 /usr/lib/x86_64-linux-gnu/libcudnn_static.a

If installed from binary pip package, provide:

A link to the pip package you installed:
link
The output from python -c "import tensorflow; print(tensorflow.__version__)".

$ python -c 'import tensorflow'
Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "/home/sperkins/venv/tftest/local/lib/python2.7/site-packages/tensorflow/__init__.py", line 23, in <module>
    from tensorflow.python import *
  File "/home/sperkins/venv/tftest/local/lib/python2.7/site-packages/tensorflow/python/__init__.py", line 60, in <module>
    raise ImportError(msg)
ImportError: Traceback (most recent call last):
  File "/home/sperkins/venv/tftest/local/lib/python2.7/site-packages/tensorflow/python/__init__.py", line 49, in <module>
    from tensorflow.python import pywrap_tensorflow
  File "/home/sperkins/venv/tftest/local/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py", line 28, in <module>
    _pywrap_tensorflow = swig_import_helper()
  File "/home/sperkins/venv/tftest/local/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py", line 24, in swig_import_helper
    _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)
ImportError: libcudart.so.8.0: cannot open shared object file: No such file or directory


Error importing tensorflow.  Unless you are using bazel,
you should not try to import tensorflow from its source directory;
please exit the tensorflow source tree, and relaunch your python interpreter
from there.

If installed from source, provide

The commit hash (git rev-parse HEAD)
The output of bazel version

If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)
What other attempted solutions have you tried?
Logs or other output that would be helpful
(If logs are large, please upload as attachment or provide link).