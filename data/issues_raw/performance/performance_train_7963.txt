Fix TensorFlow compilation errors with KNL optimization flags (-mavx512f)

This fixes the compilation errors (listed below) encountered when building TensorFlow with -mavx512f flag. -mavx512f enables generation of AVX-512 Foundational instructions in TF/Eigen and are needed for optimal performance on Knights Landing (Intel Xeon Phi x200) architecture.
./tensorflow/core/kernels/sparse_matmul_op.h:258:46: error: cannot convert 'const Packet8d {aka const __vector(8) double}' to '__m512 {aka __vector(16) float}' for argument '1' to '__m128 _mm512_extractf32x4_ps(__m512, int)'
./tensorflow/core/kernels/sparse_matmul_op.h:263:61: error: cannot convert 'const Packet8d {aka const __vector(8) double}' to '__m512 {aka __vector(16) float}' for argument '1' to '__m128 _mm512_extractf32x4_ps(__m512, int)'
./tensorflow/core/kernels/sparse_matmul_op.h:420:77: error: cannot convert 'const Packet16f {aka const __vector(16) float}' to '__m512i {aka __vector(8) long long int}' for argument '1' to '__m256i _mm512_castsi512_si256(__m512i)'
./tensorflow/core/kernels/sparse_matmul_op.h:427:59: error: cannot convert 'const Packet16f {aka const __vector(16) float}' to '__m512d {aka __vector(8) double}' for argument '1' to '__m256d _mm512_extractf64x4_pd(__m512d, int)'
./tensorflow/core/kernels/eigen_pooling.h:334:67: error: cannot convert '__m512i {aka __vector(8) long long int}' to '__vector(16) float' in initialization
./tensorflow/core/kernels/eigen_pooling.h:335:57: error: cannot convert '__vector(16) float' to '__m512i {aka __vector(8) long long int}' for argument '1' to '__m512i _mm512_ternarylogic_epi64(__m512i, __m512i, __m512i, int)'
./tensorflow/core/kernels/eigen_pooling.h:335:57: error: cannot convert '__vector(16) float' to '__m512i {aka __vector(8) long long int}' for argument '1' to '__m512i _mm512_ternarylogic_epi64(__m512i, __m512i, __m512i, int)'