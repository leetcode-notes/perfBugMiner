MLP prediction is 3~4x slower than theano/pytorch

(Moving from keras-team/keras#9388)
For a simple 2-hidden-layer MLP, TF is 3~4x slower than pytorch and theano. This is only for prediction, not training, and it is only on CPU. Please see this GitHub gist for timing.
For reproducibility, the test was done on AWS EC2 c5.large. Two different builds were tested and showed similar results. One is the pre-built AWS deep learning AMI (ami-e07e779a). Another is installing conda on a fresh Ubuntu machine and then installing TF with pip.
My questions are:

Is this performance difference expected? I assume that TF shouldn't be that slow.
@fchollet suggested that the TF installation was broken. If so, what's the correct way to install TensorFlow to ensure good performance? I also tried other installation methods on the official docs, as such native Python and pip, but didn't get better performance.

System information

Have I written custom code: Almost all built-in functions
OS Platform and Distribution: Linux Ubuntu 16.04
Test env 1: AWS deep learning AMI Ubuntu Version (ami-e07e779a)
Test env 2: AWS base Ubuntu AMI (ami-66506c1c)
TensorFlow installed from:
Test env 1: TensorFlow/Keras/PyTorch are all provided by that AMI.
Test env 2: Installed from binary, i.e. pip install tensorflow and pip install keras. PyTorch was installed by conda install pytorch.
TensorFlow version: 1.5.0
Python version: 3.6
Bazel version: N/A (from binary)
CUDA/cuDNN version: CPU-only
GPU model and memory: CPU-only
Exact command to reproduce: Please follow this GitHub gist.