`import_meta_graph` appends `_1` to node in GraphDef but doesn't add `_1` to Variable name in Collection

In an example below, second import_meta_graph will create variable nodes [a, a_1], but corresponding global variables collection has variables [a, a]. So now report_uninitialized_variables is empty, even though there's an uninitialized variable a_1 in the graph. Example below crashes with uninitialized error.
import tensorflow as tf

tf.reset_default_graph()
sess = tf.Session()
tf.Variable(tf.ones(()), name='a')
sess.run(tf.global_variables_initializer())
saver = tf.train.Saver()
saver.save(sess, 'dummy')
        
tf.reset_default_graph()
sess = tf.Session()
saver = tf.train.import_meta_graph('dummy.meta')
saver = tf.train.import_meta_graph('dummy.meta')
saver.restore(sess, './dummy')
sess.run(tf.initialize_all_variables())
sess.run(tf.report_uninitialized_variables())  # => prints empty
sess.run("a_1:0")   # => crashes with a_1 not initialized