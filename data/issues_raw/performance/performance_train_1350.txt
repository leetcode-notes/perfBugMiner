nan gradients with low memory gpu

Environment info
Operating System:
3.12.9-201.fc19.x86_64 #1 SMP Wed Jan 29 15:44:35 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux
GPU card info from lspci -v | grep gtx -i
NVIDIA Corporation GK110 [GeForce GTX Titan] (rev a1)

If installed from binary pip package, provide:

pip package installed:
https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.7.1-cp27-none-linux_x86_64.whl
The output from python -c "import tensorflow; print(tensorflow.version)".

I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally                                                                             
I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally                                                                              
I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally                                                                              
I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally                                                                             
I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally                                                                             
0.7.1                                                                        

Steps to reproduce

Increase batch size, so that you see the following warning message
check the gradients, and there are nan values
decrease batch size, and do the same check. Everything is normal if I don't see the following warning message

What have you tried?

reduce batch size

Logs or other output that would be helpful
W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:131] Ran out of memory trying to allocate 1.85GiB. The caller indicates that this is not a failure, but may mean that th
ere could be performance gains if more memory is available.