MKL DNN: fix the TF1.6 speed issue by fixing MKL DNN LRN taking the optimum path

There is a performance regression for TF 1.6 comparing to TF 1.5 for cifar 10. The root cause it cifar 10 uses depth radius = 4, for which MKL DNN takes unoptimized path. Thus we fix this issue by using following strategy:
If the depth_radius of LRN is not 2, then MKL DNN takes unoptimized path. The unoptimized path is slow. Thus we dont rewrite the node  and use default Eigen. But for depth_radius=2, MKL DNN optimized
path is taken, i.e., eigen LRN node is rewritten by MKl DNN LRN node.