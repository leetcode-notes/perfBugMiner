conv3d_backprop_input

I'm using conv3d_backprop_input to implement a 3d version of tf.nn.conv2d_transpose. Unlike conv2d_backprop_input, conv3d_backprop_input requires an input tensor (rather than just input_shape), and this seems a little inconsistent. I don't have the input tensor because it is actually the deconvolution output in this case. My current solution is to create a dummy tensor like the following:
def conv3d_transpose(value, filter, output_shape, strides, padding='SAME', name=None):
  dummy_tensor = tf.zeros(shape=output_shape, dtype=value.dtype)

  deconv = tf.nn.conv3d_backprop_input(input=dummy_tensor, filter=filter,
      out_backprop=value, strides=strides, padding=padding, name=name)

  return deconv
So my question is, in conv3d_backprop_input, do the values of input actually matter or is it only used to infer the shape of the output deconv?