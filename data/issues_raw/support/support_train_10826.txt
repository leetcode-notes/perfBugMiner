ResourceExhaustedError : OOM when allocating tensor with shape

The problem
I try to compute a very costly loss function using FFT2D, rolling of the tensor and neural network with 3 layers.
You can find the Python script here : TestFFT2D_2.py
My loss function is the sum of 448 terms. Each of this term is computed with a rolling of the initial tensor, FFT2D, a multiply of two tensor and a IFFT2D. That is why it is very costly and why it needs a lot of memory.
You can find the end of the error message here :
MemoryError.txt
Do you know why the GPU is not able to deal with a memory demanding code ? Do you know a way to avoid this error message even if we need to pay a computing time cost ?
Do you think I need to do a feature request for a better management of the GPU memory ?
System information

**Have I written custom code **: TestFFT2D.py
OS Platform and Distribution: Linux Ubuntu 16.04
TensorFlow installed from: Source
TensorFlow version: 1.2
CUDA/cuDNN version:
Cuda compilation tools, release 7.5, V7.5.17 and  cuDNN  5 with the GeForce GTX 680
GPU model and memory: Tested on GeForce GTX 680 with 2Go
** Python version**: Python 3.6.1 |Anaconda 4.4.0 (64-bit)|
Exact command to reproduce: python TestFFT2D_2.py