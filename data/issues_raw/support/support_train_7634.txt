Setting import_scope on import_meta_graph causes error for attached metagraph file

Using the attached meta file:
model_fn = './my-model.meta'

graph = tf.Graph()
sess = tf.InteractiveSession(graph=graph)

t_input = tf.placeholder(np.float32, name='images') # define the input tensor
t_preprocessed = tf.expand_dims(t_input, 0)

new_saver = tf.train.import_meta_graph(model_fn, input_map={'images': t_input}, import_scope='import')
new_saver.restore(sess, './')

results in:
KeyError: "The name 'gradients/discriminator/minibatch/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter:0' refers to a Tensor which does not exist. The operation, 'gradients/discriminator/minibatch/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter', does not exist in the graph."

I'm trying to remap the input so I can do image space optimization with a library that assumes the network input is (width, height, channels). Loading doesn't error if I load without the input_map and import_scope keyword arguments; however, this causes problems for the library I'm interacting with. Setting import_scope alone does cause an error.
What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?
Asked on Stack Overflow in case this isn't a bug: http://bit.ly/2lW7lRA
Environment info
Operating System:
Mac


A link to the pip package you installed:
https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-1.0.0-py3-none-any.whl


The output from python -c "import tensorflow; print(tensorflow.__version__)".
1.0.0


my-model.meta.zip