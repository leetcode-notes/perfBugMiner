How to slice a tensor for custom loss?

Trying to implement a custom loss function that works as following in Theano:
        def sparse_sqe(y_true, y_pred):
            ix = y_true.nonzero()
            return (y_pred[ix] - y_true[ix]) ** 2

e.g. y_true = [[0, 0, 0, 0, 5], [9, 0, 0, 0, 0]]
y_pred = [[0.2, 0.1, 0.2, 0, 4.8], [9.5, 0.3, 0.1, 0, 0]]
would return ([4.8, 9.5] - [5, 9]) ** 2 = 0.29
The loss should only be calculated for the y_pred values at the index of the nonzero y_true values.
I tried
z = tf.constant(0, tf.float32)
ix = tf.where(tf.not_equal(y_true, z))
(y_pred[ix] - y_true[ix]) ** 2

but you cannot slice like a numpy array. I also tried tf.gather, but this applies to a collection of tensors, and it will slice the vectors, instead of the elements of those vectors.
Any help would be greatly appreciated.