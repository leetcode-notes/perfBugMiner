tensorflow.python.framework.errors_impl.InvalidArgumentError: Dimension must be 2 but is 3 for 'transpose_1' (op: 'Transpose') with input shapes: [32,256], [3].

I am running the carpedm20/attentive-reader-tensorflow at https://github.com/carpedm20/attentive-reader-tensorflow. This is a Tensorflow implementation of Google DeepMind's Teaching Machines to Read and Comprehend.
When I run the command on my terminal:  python main.py --dataset cnn
I get the following error. Can some one suggest how do I fix it?
{'batch_size': 32,
'checkpoint_dir': 'checkpoint',
'data_dir': 'data',
'dataset': 'cnn',
'decay': 0.95,
'epoch': 25,
'forward_only': False,
'learning_rate': 5e-05,
'model': 'LSTM',
'momentum': 0.9,
'vocab_size': 100000}
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.
[] Building Deep LSTM...
initial state is
Tensor("zeros:0", shape=(32, 768), dtype=float32, device=/device:CPU:0)
[] Loading vocab from data/cnn/cnn.vocab100000 ...
[*] Loading vocab finished.
Printing self.emb
Tensor("emb/read:0", shape=(264560, 256), dtype=float32, device=/device:CPU:0)
printing self.inputs
Tensor("Placeholder:0", shape=(32, 1000), dtype=int32, device=/device:CPU:0)
printing embed_inputs
Tensor("embedding_lookup:0", shape=(1000, 32, 256), dtype=float32, device=/device:CPU:0)
Traceback (most recent call last):
File "/Users/skreddy/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py", line 670, in _call_cpp_shape_fn_impl
status)
File "/Users/skreddy/anaconda/lib/python3.6/contextlib.py", line 89, in exit
next(self.gen)
File "/Users/skreddy/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.InvalidArgumentError: Dimension must be 2 but is 3 for 'transpose_1' (op: 'Transpose') with input shapes: [32,256], [3].
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "main.py", line 53, in 
tf.app.run()
File "/Users/skreddy/anaconda/lib/python3.6/site-packages/tensorflow/python/platform/app.py", line 44, in run
sys.exit(main(sys.argv[:1] + flags_passthrough))
File "main.py", line 48, in main
FLAGS.data_dir, FLAGS.dataset)
File "/Users/skreddy/TensorFlow/PycharmProjects/Teaching_Machines_to_Read and_Comprehend/deep_lstm.py", line 105, in train
self.prepare_model(data_dir, dataset_name, vocab_size)
File "/Users/skreddy/TensorFlow/PycharmProjects/Teaching_Machines_to_Read and_Comprehend/deep_lstm.py", line 76, in prepare_model
initial_state=self.initial_state)
File "/Users/skreddy/anaconda/lib/python3.6/site-packages/tensorflow/python/ops/rnn.py", line 489, in dynamic_rnn
for input in flat_input)
File "/Users/skreddy/anaconda/lib/python3.6/site-packages/tensorflow/python/ops/rnn.py", line 489, in 
for input in flat_input)
File "/Users/skreddy/anaconda/lib/python3.6/site-packages/tensorflow/python/ops/array_ops.py", line 1288, in transpose
ret = gen_array_ops.transpose(a, perm, name=name)
File "/Users/skreddy/anaconda/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py", line 3841, in transpose
result = _op_def_lib.apply_op("Transpose", x=x, perm=perm, name=name)
File "/Users/skreddy/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py", line 763, in apply_op
op_def=op_def)
File "/Users/skreddy/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 2397, in create_op
set_shapes_for_outputs(ret)
File "/Users/skreddy/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1757, in set_shapes_for_outputs
shapes = shape_func(op)
File "/Users/skreddy/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1707, in call_with_requiring
return call_cpp_shape_fn(op, require_shape_fn=True)
File "/Users/skreddy/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py", line 610, in call_cpp_shape_fn
debug_python_shape_fn, require_shape_fn)
File "/Users/skreddy/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py", line 675, in _call_cpp_shape_fn_impl
raise ValueError(err.message)
ValueError: Dimension must be 2 but is 3 for 'transpose_1' (op: 'Transpose') with input shapes: [32,256], [3].