Outer product based Conv filters consume disproportionately high memory

What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?
None
Environment info
Operating System:
Ubuntu 14.04
Installed version of CUDA and cuDNN:
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
None, I'm using the CPU version of TF.
If installed from binary pip package, provide:


A link to the pip package you installed:
https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl


The output from python -c "import tensorflow; print(tensorflow.__version__)".
0.10.0rc0
If installed from source, provide


The commit hash (git rev-parse HEAD)


The output of bazel version


If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)
The minimum reproducible example is in this github gist. The issue is of a disproportionately large memory usage.
I modified the cifar10 example which ships with tensorflow to use outer-product of 3 vectors as the weights of the convolutional layers. This change can be seen in this part of the code.
For simplicity, i have removed all parameter training operations and even loss computations. The current model only computes logits (forward pass) again and again.
The unmodified code (can be setting the use_outerp flag to False) uses approximately 11.4 GB RAM
whereas the modified code (with outer product of vectors used as the convolutional weight tensor) uses a disproportionately high 17 GB RAM.
Any idea why this is the case?
My intuition as to why this might happen is that maybe the outer product operations are being executed every single time that the conv filter is needed  instead of being executed exactly once in every forward pass. Is this really the case? Is there a way to fix this?
Steps to reproduce:


To run the default version of the code (low memory footprint):
python train.py --use_outerp='False'


To run the modified version of the code (high memory footprint):
python train.py --use_outerp='True'


What other attempted solutions have you tried?
I'm not sure what the problem is, so haven't tried anything.
Logs or other output that would be helpful
(If logs are large, please upload as attachment or provide link).