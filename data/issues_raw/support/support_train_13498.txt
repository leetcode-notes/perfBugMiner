Problem with "AddControlInput" in python_api.h

@asimshankar @skye I'm observing an issue with AddControlInput in python_api.h. It seems to not be working for me actually and I'm not sure why. Everything is ok if I add the control dependency during op creation. However, if I add it right after, it's not enforced during execution. A simple example is creating a switch op, creating two constant ops and adding one control dependency for each on each switch output, and then feeding these two constant ops into a mergeop. The result will be whichever constant op was fed first into the merge op (i.e., the control dependencies are not satisfied and both ops are executed). If I add the control dependency during op construction, all is good.
Note that the control input does show up in the GraphDef that I generated after the call. It's simply not enforced during execution.
Do you have any idea why that might be happening? I am aware that this is not part of the public API and thus is not stable, but it is still unexpected behavior. I am using that in my implementation of control flow ops and gradients (I ended up re-implementing it based on the Python version because I depend on it and the C++ functionality is currently very limited -- I'll update on this later on, once I release it).