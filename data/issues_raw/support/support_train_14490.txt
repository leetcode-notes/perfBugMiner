tf.contrib.metrics.streaming_mean

def streaming_mean_weight_test():
    '''
        Average by weight
    '''
    values = tf.constant([[1.0, 2.0], [3.3, 2.5]])
    weights = tf.constant([[0.3, 3.1], [-1.3, 1.2]])
    mean_value, update_op = tf.contrib.metrics.streaming_mean(values, weights=weights)
    tf_weight_mean = tf.truediv(tf.reduce_sum(tf.multiply(values, weights)), tf.reduce_sum(weights))
    with tf.Session() as sess:
        tf.local_variables_initializer().run()
        print(update_op.eval())
        _mean_value = mean_value.eval()
        _tf_weight_mean = tf_weight_mean.eval()
        print(_mean_value)
        print(_tf_weight_mean)
    assert np.all(np.isclose(_mean_value, _tf_weight_mean)), 'streaming_mean_weight_test is wrong!'
It works well. But when I use weights = tf.constant([[0.3, -3.1], [-1.3, 1.2]]) instead of weights above,
It can't work, _mean_value=0.0, what's  wrong?