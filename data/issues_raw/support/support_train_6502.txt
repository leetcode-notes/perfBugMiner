Insert rows ( arrays ) into a tensor at specific index , and index keeps on changing with batch of data

I have function , to which I have to pass a dynamic list of values and dynamic batch size, along with feed dict in Tensorflow. The tf.unstack function accepts an int only. This int here is my batch size and doc_length is list of values. It will change with each batch of data. The idea here, from RNN, i am getting a state matrix and I have to insert zeros at some particular indices.
How to pass these dynamic batch size and list of values with sess.run( _ , feed_dict) for every batch of data ? Hope the question is clear.
### sentence_vec is the output from an RNN 

def sentence_converter(sentence_vec, doc_length , batch_size):
    sentence_tensors = tf.unstack(sentence_vec, batch_size, axis=0)
    max_len = max(doc_length)

    zero_tensor = tf.zeros(self.encoder_units)
    temp = 0
    for elem in doc_length:
        if elem == max_len:
            continue
        diff = max_len - elem
        diff_range = range(1, diff+1)
        for sub_elem in diff_range:
            insert = temp + sub_elem + elem
            sentence_tensors.insert(insert-1, zero_tensor)
        temp = insert
    return tf.stack(sentence_tensors)

X = tf.placeholder(tf.int32, shape=[None, None], name='X_input')
X_len = tf.placeholder(tf.int32, shape=[None], name='X_length')

enc_cell = tf.nn.rnn_cell.GRUCell(self.enco:der_units)#python.ops.rnn_cell.GRUCell
enc_out, enc_state = tf.nn.dynamic_rnn(cell=enc_cell, inputs=X,
                             sequence_length=X_len, dtype=tf.float32)
final_state = sentence_converter(enc_state , batch_size , doc_len)


if __name__ == "__main__":
      sess = tf.Session()
      sess.run(tf.initialize_all_variables())
      output_state = sess.run(final_state , feed_dict(X:np.random.randn(2,11) , X_len:[3,2])



So, here 2 is the batch size . Suppose the doc_len = [5,7] , how will I pass these to get the final_state , each time. These doc_len is dynamically changing list with each batch.