SKCompat gives error when used with DNNClassifier

NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.
For general support from the community, see StackOverflow.
To make bugs and feature requests more easy to find and organize, we close issues that are deemed
out of scope for GitHub Issues and point people to StackOverflow.
For bugs or installation issues, please provide the following information.
The more information you provide, the more easily we will be able to offer
help and advice.
What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?
Was not able to find any that apply.
Environment info
Operating System:
Mac
Installed version of CUDA and cuDNN:
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
If installed from binary pip package, provide:

A link to the pip package you installed:
The output from python -c "import tensorflow; print(tensorflow.__version__)".

Tried on:
0.12.1
0.12.0-rc0
If installed from source, provide

The commit hash (git rev-parse HEAD)
The output of bazel version

If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)
I would like to use SKCompat with a DNN classifier, but it generates an error.  A real easy way to see this is to run:
https://www.tensorflow.org/tutorials/tflearn/#load_the_iris_csv_data_to_tensorflow
If I run the above example, exactly as it is, I get this warning:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
  est = Estimator(...) -> est = SKCompat(Estimator(...))

So I follow the advice, and add this line of code, just after the DNNClassifier is created.
classifier = tf.contrib.learn.SKCompat(classifier)
This results in the following error.  How do I use SKCompat with this example?  I would like to use the standard sklearn interface for this application.
Traceback (most recent call last):
  File "test3.py", line 35, in <module>
    steps=2000)
  File "/Users/jeff/anaconda/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py", line 1126, in fit
    loss = self._estimator._train_model(
AttributeError: 'DNNClassifier' object has no attribute '_train_model'


What other attempted solutions have you tried?
Examined source code for tensorflow.  It appears that SKCompat is trying to call a function () that DNNClassifier does not have.
Logs or other output that would be helpful
(If logs are large, please upload as attachment or provide link).