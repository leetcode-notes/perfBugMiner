tf.contrib.streaming_mean_squared_error returns incorrect result

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Mint 18
TensorFlow installed from (source or binary): Binary (pip)
TensorFlow version (use command below): v1.3.0.0rc0
Bazel version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A
Exact command to reproduce: N/A

Describe the problem
tf.contrib.streaming_mean_squared_error returns wonky results. It returns the current mean square error tensor and an update op. According to the documentation their evaluated values should match. They don't, and the values of the latter tend to get weird. A minimal example should demonstrate.
Source code / logs
Example: mean squared error between two arrays whose difference is an array of ones. The MSE should consistently be 1. It isn't though.
sess = tf.InteractiveSession()
a = tf.constant(np.arange(3,7))
b = tf.constant(np.arange(2,6))
e = tf.contrib.metrics.streaming_mean_squared_error(a,b)
init_op = tf.local_variables_initializer(); sess.run(init_op)
sess.run(e) # (1.0, 1.0)
sess.run(e) # (1.0, 1.0)
sess.run(e) # (1.5, 1.0) !!!
sess.run(e) # (1.0, 1.0)
After having a brief look at the code, I don't see why the returned values don't match. The docs speak of finalizing the value but it just looks like total/count is returned.