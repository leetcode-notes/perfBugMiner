Cannot register 2 metrics with the same name error.

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Swift API for TensorFlow
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
macOS 10.12.6 (16G29), Darwin MacBookPro.local 16.7.0 Darwin Kernel Version 16.7.0
TensorFlow installed from (source or binary):
source
TensorFlow version (use command below):
master branch [d864489]
Python version:
Python 2.7.13
Bazel version (if compiling from source):
bazel release 0.5.4
CUDA/cuDNN version:
no
GPU model and memory:
no
Exact command to reproduce:

Dear TensorFlow contributors,
I am working on swift height-level API for TensorFlow. To provide that, I am using system module to provide access to C and C++ API. C API is clear in swift code, for C++ library I am writing my own wrappers. After update master branch I can't pass tests in my framework. Launch tests leads to error:

Cannot register 2 metrics with the same name: /tensorflow/cc/saved_model/load_attempt_count

My guess is:
After commit [a674130] ''Expose C API symbols on OS X", all C API available on C++ library.
more info
You can see all C interfaces are available at C++ library:
$ nm bazel-bin/tensorflow/libtensorflow_cc.so | grep 'TF_New' 000000000000f5f0 T _TF_NewBuffer 000000000000f610 T _TF_NewBufferFromString 000000000000f6b0 T _TF_NewDeprecatedSession 00000000000176f0 T _TF_NewGraph 0000000000017aa0 T _TF_NewImportGraphDefOptions 0000000000013190 T _TF_NewOperation 000000000001a170 T _TF_NewSession 000000000000f500 T _TF_NewSessionOptions 000000000000ea90 T _TF_NewStatus 000000000000ee80 T _TF_NewTensor 0000000000018a70 T _TF_NewWhile 000000000001cbb0 t __ZZ22TF_NewBufferFromStringEN3$_08__invokeEPvm
So, my question/request is:

Is it well-considered and final decision to provide C API in C++ library?
Will it be default and public configuration to provide C API in C++ library?
Is there any way to configure and build tensorflow library without changing
tools/tf_env_collect.sh file?
Thank you for your work.