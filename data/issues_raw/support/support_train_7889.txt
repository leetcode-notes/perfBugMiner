Bug in code for new TF Layer tutorial "A Guide to TF Layers: Building a Convolutional Neural Network"

The code provided for the new TF Layer API tutorial (see https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/layers/cnn_mnist.py) does not work if any filter size other than 5x5 is specified, or if color images are used. No matter what other filter size is specified, an error is generated indicating a shape mismatch between the specified filter (3x3 in the error message shown below) and another seemingly hard-coded 5x5 filter buried somewhere in the estimator. The tensor referred to below as "rhs" ALWAYS reports as [5,5,1,32] no matter what the actual filter size is set to within the python code OR if a color/3 channel image is used (e.g., lhs reports as 5x5x3x32 while rhs is 5x5x1x32).
Here's a sample code snippet wherein the filter size is set to 3x3 instead of 5x5 for the first convolution layer:
conv1 = tf.layers.conv2d(
inputs=input_layer,
filters=32,
kernel_size=[3, 3],
padding="same",
activation=tf.nn.relu)
and here's the error message:
InvalidArgumentError (see above for traceback): Assign requires shapes of both tensors to match. lhs shape= [3,3,1,32] rhs shape= [5,5,1,32]
[[Node: save/Assign_2 = Assign[T=DT_FLOAT, _class=["loc:"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](conv2d/kernel, save/RestoreV2_2)]]
What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?
None found - this seems to be a new problem related to the new TF Layer API
Environment info
Operating System: Windows 10, Anaconda3, Python 3.5.2, TensorFlow 1.0