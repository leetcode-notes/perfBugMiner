tf.reshape fails for Tensor with valid shape parameter

I don't know if my problem is truly a bug with TensorFlow, but I think it is. My problem is that tf.reshape(x, shape=(sequence_length, 4)) fails even when x is a tensor and the shape provided is valid. Reshape returns the following error: TypeError: List of Tensors when single Tensor expected
Some background: I have a number of CSVs that I converted to SequenceExamples and stored as TFRecords to use to train dynamic RNNs. The length of each sequence can vary. I can successfully read the SequenceExamples using parse_single_sequence_example, which returns a tensor of shape (?,) for each of my four feature tensors and each of my four label tensors. I then stack the four feature tensors to create x with shape (?, 4) and type <class 'tensorflow.python.framework.ops.Tensor'>. I create a similar tensor of labels y with shape (?, 4) and type <class 'tensorflow.python.framework.ops.Tensor'>. Everything is good.
Then, I'd like to create minibatches based on similar length sequences using tf.contrib.training.bucket_by_sequence_length, but if I pass in input_length=x.shape[0], I receive the following error: ValueError: Cannot convert an unknown Dimension to a Tensor: ?. Since I know the sequence length when creating the SequenceExamples, I modified my code to add the sequence length (an integer) as a context feature. Then, when I read my features and labels, I try to reshape them as follows:
        sequence_length = context_parsed['length']
        tf.reshape(x, shape=(sequence_length, 4))

where sequence_length has type <class 'tensorflow.python.framework.ops.Tensor'> and shape (). This raises the following error: TypeError: List of Tensors when single Tensor expected. However, x is a Tensor, not a list of Tensors. This is why I think there may be a bug in TensorFlow's tf.reshape() function.
My TensorFlow version: TensorFlow version: v1.2.0-rc0-24-g94484aa 1.2.0-rc1
If it helps, I could post one of my .tfrecord files and the code necessary to create this error.