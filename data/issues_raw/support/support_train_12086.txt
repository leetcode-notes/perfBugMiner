Cannot learn initial_states with batch_sequences_with_states

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Mint 18
TensorFlow installed from (source or binary): Binary (pip)
TensorFlow version (use command below): v1.3.0.0rc0
Bazel version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A
Exact command to reproduce: N/A

Describe the problem
Using tf.contrib.training.batch_sequences_with_states, it seems impossible to learn the initial_states passed to it. I've tried using Variables with trainable=True with several initializers and while my optimizer picks them up through tf.trainable_variables(), their values do not get learned.
I assume this has something to do with TensorFlow continuing to work with the Tensors, not the Variables? Additionally, the initializer is called each run and in TensorBoard it shows that it does not feed into the optimizer, whereas network weights for example would.
Are my presumptions correct, and if not, how do I fix this? If this is a TensorFlow limitation, how could I work around it?
Source code / logs
            initializers = {
                    'lstm_c': train_init,
                    'lstm_h': train_init,
                    'encode_lstm_c': train_init,
                    'encode_lstm_h': train_init,
                    'last_out': train_init,
                    }

            with tf.variable_scope(tf.get_variable_scope(), reuse=not is_training):

                initial_states = { k: tf.get_variable('initial_{}'.format(k), v.shape,
                        dtype=v.dtype,
                        initializer=initializers[k],
                        trainable=is_training and self.learn_initial_states, \
                        collections=[attend.GraphKeys.INITIAL_STATES]) \
                        for k, v in initial_constants.items() }


                # This makes sure we're not dealing with the reference but learned values
                initial_states = { k: v.initialized_value() for k, v in initial_states.items() }