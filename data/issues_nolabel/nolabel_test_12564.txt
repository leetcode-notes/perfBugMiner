Partially fixes #10838

The following warnings seem to print for compiling many ops using gcc-4.9.
For example, in cuda_solvers_gpu.cu.cc:
INFO: From Compiling tensorflow/core/kernels/cuda_solvers_gpu.cu.cc:
./tensorflow/core/framework/op_kernel.h(313): warning: type qualifier on return type is meaningless

./tensorflow/stream_executor/kernel.h(307): warning: variable "result" is used before its value is set

./tensorflow/stream_executor/device_description.h(85): warning: type qualifier on return type is meaningless

./tensorflow/stream_executor/device_description.h(144): warning: type qualifier on return type is meaningless

./tensorflow/core/framework/op_kernel.h(313): warning: type qualifier on return type is meaningless

./tensorflow/stream_executor/kernel.h(307): warning: variable "result" is used before its value is set

./tensorflow/stream_executor/device_description.h(85): warning: type qualifier on return type is meaningless

./tensorflow/stream_executor/device_description.h(144): warning: type qualifier on return type is meaningless

In beam_search_ops_gpu.cu.cc:
INFO: From Compiling tensorflow/contrib/seq2seq/kernels/beam_search_ops_gpu.cu.cc:
./tensorflow/core/framework/op_kernel.h(313): warning: type qualifier on return type is meaningless

./tensorflow/stream_executor/kernel.h(307): warning: variable "result" is used before its value is set

./tensorflow/stream_executor/device_description.h(85): warning: type qualifier on return type is meaningless

./tensorflow/stream_executor/device_description.h(144): warning: type qualifier on return type is meaningless

./tensorflow/core/framework/op_kernel.h(313): warning: type qualifier on return type is meaningless

./tensorflow/stream_executor/kernel.h(307): warning: variable "result" is used before its value is set

./tensorflow/stream_executor/device_description.h(85): warning: type qualifier on return type is meaningless

./tensorflow/stream_executor/device_description.h(144): warning: type qualifier on return type is meaningless

I believe this fix will address many (but not all) of the warnings during the build.