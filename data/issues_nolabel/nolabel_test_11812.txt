InternalError: Blas GEMM launch failed

System information


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Distributor ID: Ubuntu
Description:    Ubuntu 16.04.2 LTS
Release:        16.04


TensorFlow installed from (source or binary):
pip3 install tensorflow-gpu


TensorFlow version (use command below):
v1.2.0-5-g435cdfc 1.2.1


Python version:
3.5


CUDA/cuDNN version:
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2016 NVIDIA Corporation
Built on Tue_Jan_10_13:22:03_CST_2017
Cuda compilation tools, release 8.0, V8.0.61


GPU model and memory:
description: 3D controller
product: GK210GL [Tesla K80]
vendor: NVIDIA Corporation
physical id: 0
bus info: pci@99ba:00:00.0
version: a1
width: 64 bits
clock: 33MHz
capabilities: bus_master cap_list
configuration: driver=nvidia latency=0
resources: iomemory:100-ff iomemory:140-13f irq:24 memory:21000000-21ffffff
memory:1000000000-13ffffffff memory:1400000000-1401ffffff


Code example:
estimator = KerasRegressor(build_fn=self.create_model_function,
input_dim=self.input_dim, output_dim=self.output_dim,
**self.model_parameters)


param_grid = {'epochs': [5]
,'batch_size': [256]
,'neurons': [[10, 10, 10]]
,'dropout': [[0.0, 0.0]]}
grid = GridSearchCV(estimator=estimator, param_grid=param_grid, n_jobs=-1)
Describe the problem
The InternalError occurred when I fit a sklearn.GridSearchCV object.
The error occurred only if I use GPU and I I use GridSearch object. It works fine on CPU and on single model fitting (using Keras wrapper).
Error log
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/model_selection/_search.py", line 945, in fit
return self._fit(X, y, groups, ParameterGrid(self.param_grid))
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/model_selection/_search.py", line 564, in _fit
for parameters in parameter_iterable
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py", line 728, in call
n_jobs = self._initialize_backend()
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py", line 540, in _initialize_backend
**self._backend_args)
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/_parallel_backends.py", line 311, in configure
self._pool = MemmapingPool(n_jobs, **backend_args)
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 600, in init
super(MemmapingPool, self).init(**poolargs)
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 420, in init
super(PicklingPool, self).init(**poolargs)
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/pool.py", line 168, in init
self._repopulate_pool()
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/pool.py", line 233, in _repopulate_pool
w.start()
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/process.py", line 105, in start
self._popen = self._Popen(self)
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/context.py", line 267, in _Popen
return Popen(process_obj)
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/popen_fork.py", line 20, in init
self._launch(process_obj)
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/popen_fork.py", line 74, in _launch
code = process_obj._bootstrap()
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/process.py", line 249, in _bootstrap
self.run()
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/process.py", line 93, in run
self._target(*self._args, **self._kwargs)
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/pool.py", line 119, in worker
result = (True, func(*args, **kwds))
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/_parallel_backends.py", line 344, in call
return self.func(*args, **kwargs)
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py", line 131, in call
return [func(*args, **kwargs) for func, args, kwargs in self.items]
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py", line 131, in 
return [func(*args, **kwargs) for func, args, kwargs in self.items]
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/model_selection/_validation.py", line 238, in _fit_and_score
estimator.fit(X_train, y_train, **fit_params)
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/wrappers/scikit_learn.py", line 136, in fit
self.model = self.build_fn(**self.filter_sk_params(self.build_fn))
File "/home/aateam/Amplifon/amplifon-adv-planning/src/libs/amplifon_objects.py", line 176, in create_test_model
model.add(Dense(neurons[0], input_dim=input_dim, activation=last_activation))
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/models.py", line 436, in add
layer(x)
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/engine/topology.py", line 596, in call
output = self.call(inputs, **kwargs)
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/layers/core.py", line 838, in call
output = K.dot(inputs, self.kernel)
File "/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/backend/tensorflow_backend.py", line 978, in dot
out = tf.matmul(x, y)
File "/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/ops/math_ops.py", line 1816, in matmul
a, b, transpose_a=transpose_a, transpose_b=transpose_b, name=name)
File "/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/ops/gen_math_ops.py", line 1217, in _mat_mul
transpose_b=transpose_b, name=name)
File "/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py", line 767, in apply_op
op_def=op_def)
File "/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 2506, in create_op
original_op=self._default_original_op, op_def=op_def)
File "/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 1269, in init
self._traceback = _extract_stack()
InternalError (see above for traceback): Blas GEMM launch failed : a.shape=(256, 32), b.shape=(32, 10), m=256, n=10, k=32
[[Node: dense_1/MatMul = MatMul[T=DT_FLOAT, transpose_a=false, transpose_b=false, _device="/job:localhost/replica:0/task:0/gpu:0"](_arg_dense_1_input_0_0/_15, dense_1/kernel/read)]]
[[Node: mul_1/_43 = _Recvclient_terminated=false, recv_device="/job:localhost/replica:0/task:0/cpu:0", send_device="/job:localhost/replica:0/task:0/gpu:0", send_device_incarnation=1, tensor_name="edge_795_mul_1", tensor_type=DT_FLOAT, _device="/job:localhost/replica:0/task:0/cpu:0"]]