Regression error (worked in 0.8): DNNRegressor no longer supports multiple output neurons

NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.
For general support from the community, see StackOverflow.
To make bugs and feature requests more easy to find and organize, we close issues that are deemed
out of scope for GitHub Issues and point people to StackOverflow.
For bugs or installation issues, please provide the following information.
The more information you provide, the more easily we will be able to offer
help and advice.
What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?
http://stackoverflow.com/questions/34224826/skflow-regression-predict-multiple-values
Environment info
Operating System:
Mac
Installed version of CUDA and cuDNN:
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
If installed from binary pip package, provide:


A link to the pip package you installed:


The output from python -c "import tensorflow; print(tensorflow.__version__)".
Tried in both:
0.12.1
1.0.0-rc1
If installed from source, provide


The commit hash (git rev-parse HEAD)


The output of bazel version


If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)
I had implemented code based in TF 0.8 that used multiple output neurons.  I based it on this stack overflow question:
http://stackoverflow.com/questions/34224826/skflow-regression-predict-multiple-values
It looks like this has been broken since at least 0.10 based on comments above.  I accounted for all of the TF breaking changes and upgraded the code provided by @ilblackdragon and came up with:
import numpy as np
import tensorflow.contrib.learn as skflow
import tensorflow as tf
from sklearn.metrics import mean_squared_error

# Create random dataset.
rng = np.random.RandomState(1)
X = np.sort(200 * rng.rand(100, 1) - 100, axis=0)
y = np.array([np.pi * np.sin(X).ravel(), np.pi * np.cos(X).ravel()]).T

# Fit regression DNN model.
feature_columns = [tf.contrib.layers.real_valued_column("", dimension=X.shape[0])]
regressor = skflow.DNNRegressor(hidden_units=[5, 5],feature_columns=feature_columns)
regressor.fit(X, y)
score = mean_squared_error(regressor.predict(X), y)
print("Mean Squared Error: {0:f}".format(score))

But this results in:
ValueError: Shapes (?, 1) and (?, 2) are incompatible
Has the important feature of multiple outputs been removed mistakenly somehow?
Also it looks like the example that @ilblackdragon was removed, the link in GitHub 404's.
What other attempted solutions have you tried?
Upgraded code to account for breaking changes in TF, but still get an error.
Logs or other output that would be helpful
(If logs are large, please upload as attachment or provide link).