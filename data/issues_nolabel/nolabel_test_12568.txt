'module' object has no attribute 'sparse_column_with_vocabulary_file'

Please go to Stack Overflow for help and support:
https://stackoverflow.com/questions/tagged/tensorflow
If you open a GitHub issue, here is our policy:

It must be a bug or a feature request.
The form below must be filled out.
It shouldn't be a TensorBoard issue. Those go here.

Here's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Running on Cloud ML Engine
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): 1.3.0
Python version:  2.7

Describe the problem
I am trying to use tf.contrib.layers.sparse_column_with_vocabulary_file() and I am getting an error that it does not exist. I recognize that it is not showing up when I search for it in the API, but it is showing up in the source code here -- I even specified the r1.3 branch and it was still showing up.  Has this been removed and I am just looking in the wrong place? It seems like this may be a bug and the function should exist in 1.3?
If it was deprecated is it because there are workarounds when trying to generate a feature column from a sparse tensor of words? I can create the hash table with:
table = tf.contrib.lookup.index_table_from_file(vocabulary_file = vocab_file)
table.lookup(word)

but since I am trying to add this in the feature columns, I need something to read in the sparse tensor of words in ie.
words = tf.contrib.layers.??? or words = tf.feature_column.???
Or (Assuming deprecation) is the suggested implementation just to do all of these transformations in the input_fn(): and just pass a sparse_column_with_integerized_feature() directly. Personally this feels awkard to perform half of the transformation in the input function but without sparse_column_with_vocabulary_file it feels like there is no other choice:
With this function it should be easy to go from:
"This is a sentence" --> tf.string_split() yields ["This", "is", "a", "sentence"] (sparse tensor of strings) within the input_fn --> and then tf.contrib.sparse_column_with_vocabulary_file (sparse tensor of ids) --> tf.contrib.layers.embedding_column() which yields the embedding from a sparse tensor of id's.