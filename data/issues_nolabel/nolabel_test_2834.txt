Defining shape of 1-D variable-size placeholder with tuple doesn't enforce the actual shape

I noticed that defining a 1-D batch-sized placeholder with a tuple instead of a list doesn't enforce its shape:
ph = tf.placeholder(tf.int32, (None))
op = 2 * ph
x = np.random.randint(0, 9, (5, 5))
sess.run(op, feed_dict={ph: x})

This outputs:
array([[ 0, 10, 10, 12,  4],
       [12, 12, 16,  2,  2],
       [ 4, 14, 10, 14,  6],
       [ 6,  8,  2, 10, 10],
       [ 4, 14,  6,  6,  4]], dtype=int32)

While with [None]:
ph = tf.placeholder(tf.int32, [None])
op = 2 * ph
sess.run(op, feed_dict={ph: x})

results in ValueError: Cannot feed value of shape (5, 5) for Tensor u'Placeholder_5:0', which has shape '(?,)', as I would expect.
Is the behavior with the tuple intended to work like this? I really don't think it's a good idea (I spent a few hours tracking a bug in my code caused by feeding a 2-D array to a supposedly 1-D placeholder). Anyway, the documentation on placeholders says the following about the argument shape: The shape of the tensor to be fed (optional). If the shape is not specified, you can feed a tensor of any shape.