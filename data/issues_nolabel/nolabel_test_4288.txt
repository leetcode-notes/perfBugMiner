Error while installing tensorflow on Ubuntu 16.04

Operating System: Ubuntu 16.04
Installed version of CUDA and cuDNN:  CUDA 7.5, cuDNN 5
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
-rw-r--r-- 1 root root 189170 Sep  8 09:47 /usr/local/cuda/lib/libcudadevrt.a
lrwxrwxrwx 1 root root     16 Sep  8 09:47 /usr/local/cuda/lib/libcudart.so -> libcudart.so.7.5
lrwxrwxrwx 1 root root     19 Sep  8 09:47 /usr/local/cuda/lib/libcudart.so.7.5 -> libcudart.so.7.5.18
-rwxr-xr-x 1 root root 311596 Sep  8 09:47 /usr/local/cuda/lib/libcudart.so.7.5.18
-rw-r--r-- 1 root root 558020 Sep  8 09:47 /usr/local/cuda/lib/libcudart_static.a

output of ldconfig -p | grep libcudnn:
libcudnn.so.5 (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libcudnn.so.5
libcudnn.so (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libcudnn.so

The output of bazel version :
Build label: 0.3.1
Build target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar
Build time: Fri Jul 29 09:09:52 2016 (1469783392)
Build timestamp: 1469783392
Build timestamp as int: 1469783392

The error I have is:
ERROR: /home/cortana/Downloads/tensorflow/tensorflow/core/kernels/BUILD:1711:1: undeclared inclusion(s) in rule '//tensorflow/core/kernels:scatter_op_gpu':
this rule is missing dependency declarations for the following files included by 'tensorflow/core/kernels/scatter_op_gpu.cu.cc':
  '/usr/local/cuda-7.5/include/cuda_runtime.h'
  '/usr/local/cuda-7.5/include/host_config.h'
  '/usr/local/cuda-7.5/include/builtin_types.h'
  '/usr/local/cuda-7.5/include/device_types.h'
  '/usr/local/cuda-7.5/include/host_defines.h'
  '/usr/local/cuda-7.5/include/driver_types.h'
  '/usr/local/cuda-7.5/include/surface_types.h'
  '/usr/local/cuda-7.5/include/texture_types.h'
  '/usr/local/cuda-7.5/include/vector_types.h'
  '/usr/local/cuda-7.5/include/channel_descriptor.h'
  '/usr/local/cuda-7.5/include/cuda_runtime_api.h'
  '/usr/local/cuda-7.5/include/cuda_device_runtime_api.h'
  '/usr/local/cuda-7.5/include/driver_functions.h'
  '/usr/local/cuda-7.5/include/vector_functions.h'
  '/usr/local/cuda-7.5/include/vector_functions.hpp'
  '/usr/local/cuda-7.5/include/common_functions.h'
  '/usr/local/cuda-7.5/include/math_functions.h'
  '/usr/local/cuda-7.5/include/math_functions.hpp'
  '/usr/local/cuda-7.5/include/math_functions_dbl_ptx3.h'
  '/usr/local/cuda-7.5/include/math_functions_dbl_ptx3.hpp'
  '/usr/local/cuda-7.5/include/cuda_surface_types.h'
  '/usr/local/cuda-7.5/include/cuda_texture_types.h'
  '/usr/local/cuda-7.5/include/device_functions.h'
  '/usr/local/cuda-7.5/include/device_functions.hpp'
  '/usr/local/cuda-7.5/include/device_atomic_functions.h'
  '/usr/local/cuda-7.5/include/device_atomic_functions.hpp'
  '/usr/local/cuda-7.5/include/device_double_functions.h'
  '/usr/local/cuda-7.5/include/device_double_functions.hpp'
  '/usr/local/cuda-7.5/include/sm_20_atomic_functions.h'
  '/usr/local/cuda-7.5/include/sm_20_atomic_functions.hpp'
  '/usr/local/cuda-7.5/include/sm_32_atomic_functions.h'
  '/usr/local/cuda-7.5/include/sm_32_atomic_functions.hpp'
  '/usr/local/cuda-7.5/include/sm_35_atomic_functions.h'
  '/usr/local/cuda-7.5/include/sm_20_intrinsics.h'
  '/usr/local/cuda-7.5/include/sm_20_intrinsics.hpp'
  '/usr/local/cuda-7.5/include/sm_30_intrinsics.h'
  '/usr/local/cuda-7.5/include/sm_30_intrinsics.hpp'
  '/usr/local/cuda-7.5/include/sm_32_intrinsics.h'
  '/usr/local/cuda-7.5/include/sm_32_intrinsics.hpp'
  '/usr/local/cuda-7.5/include/sm_35_intrinsics.h'
  '/usr/local/cuda-7.5/include/surface_functions.h'
  '/usr/local/cuda-7.5/include/surface_functions.hpp'
  '/usr/local/cuda-7.5/include/texture_fetch_functions.h'
  '/usr/local/cuda-7.5/include/texture_fetch_functions.hpp'
  '/usr/local/cuda-7.5/include/texture_indirect_functions.h'
  '/usr/local/cuda-7.5/include/texture_indirect_functions.hpp'
  '/usr/local/cuda-7.5/include/surface_indirect_functions.h'
  '/usr/local/cuda-7.5/include/surface_indirect_functions.hpp'
  '/usr/local/cuda-7.5/include/device_launch_parameters.h'
  '/usr/local/cuda-7.5/include/cuda_fp16.h'
  '/usr/local/cuda-7.5/include/math_constants.h'
  '/usr/local/cuda-7.5/include/curand_kernel.h'
  '/usr/local/cuda-7.5/include/curand.h'
  '/usr/local/cuda-7.5/include/curand_discrete.h'
  '/usr/local/cuda-7.5/include/curand_precalc.h'
  '/usr/local/cuda-7.5/include/curand_mrg32k3a.h'
  '/usr/local/cuda-7.5/include/curand_mtgp32_kernel.h'
  '/usr/local/cuda-7.5/include/cuda.h'
  '/usr/local/cuda-7.5/include/curand_mtgp32.h'
  '/usr/local/cuda-7.5/include/curand_philox4x32_x.h'
  '/usr/local/cuda-7.5/include/curand_globals.h'
  '/usr/local/cuda-7.5/include/curand_uniform.h'
  '/usr/local/cuda-7.5/include/curand_normal.h'
  '/usr/local/cuda-7.5/include/curand_normal_static.h'
  '/usr/local/cuda-7.5/include/curand_lognormal.h'
  '/usr/local/cuda-7.5/include/curand_poisson.h'
  '/usr/local/cuda-7.5/include/curand_discrete2.h'.
nvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.
nvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.
/usr/include/string.h: In function 'void* __mempcpy_inline(void*, const void*, size_t)':
/usr/include/string.h:652:42: error: 'memcpy' was not declared in this scope
   return (char *) memcpy (__dest, __src, __n) + __n;
                                          ^
Target //tensorflow/cc:tutorials_example_trainer failed to build
Use --verbose_failures to see the command lines of failed build steps.
INFO: Elapsed time: 46.586s, Critical Path: 44.80s