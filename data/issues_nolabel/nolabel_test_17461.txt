Operators not supported: ExpandDims, Prod, Slice.

System information
OS Platform and Distribution (Linux Ubuntu 14.04):
TensorFlow installed from (build from source):
TensorFlow version (1.5):
Bazel version(0.8.1)
CPU mode
Describe the problem
i use an concat operator when i am training my own model, but when i convert it to .tflite by using toco tools, i got this error:
F tensorflow/contrib/lite/toco/tflite/export.cc:303] Some of the operators in the model are not supported by the standard TensorFlow Lite runtime. If you have a custom implementation for them you can disable this error with --allow_custom_ops. Here is a list of operators for which you will need custom implementations: ExpandDims, Prod, Slice.
Aborted (core dumped)
i do not use the operators it lists.
models.zip
there are three models definition in the zip file, the model2 adn model3 works, but model1 does not. The only difference between them is model1 use:
feature = tf.concat([flat1,flat2], 1)

to make it more clear, i quote the code block:
with tf.variable_scope(scope, 'lite_v1', [images, num_classes]):

    images_input = tf.placeholder_with_default(images, shape=[None, 35, 35, 1], name='InputPlaceholder')

    net = slim.conv2d(images_input, 12, [4, 4], padding='VALID', scope='conv1')
    end_points['conv1'] = net

    net = slim.max_pool2d(net, [2, 2], 2, scope='pool4')
    end_points['pool4'] = net
    
    flat2 = slim.flatten(net)

    net = slim.conv2d(net, 64, [2, 2], padding='VALID', scope='conv5')
    end_points['conv5'] = net
    print("conv5")
    print(net)
    flat1 = slim.flatten(net)

    feature = flat2
    # feature = tf.concat([flat1,flat2], 1)

    with tf.variable_scope('Logits'):

      net = slim.fully_connected(feature, 100, scope='fc3')
      
      logits = slim.fully_connected(net, num_classes,
                                  biases_initializer=tf.zeros_initializer(),
                                  weights_regularizer=None,
                                  activation_fn=None,
                                  scope='logits')
      end_points['Logits'] = logits
    output = tf.multiply(logits, 1, name="Output")
    end_points['Output'] = output

  return logits, end_points
lite_v1.default_image_size = 35