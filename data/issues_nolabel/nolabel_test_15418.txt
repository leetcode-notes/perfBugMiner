Eager:  `gradients_function` can't compute the gradient for simple functions

Please go to Stack Overflow for help and support:
https://stackoverflow.com/questions/tagged/tensorflow
If you open a GitHub issue, here is our policy:

It must be a bug or a feature request.
The form below must be filled out.
It shouldn't be a TensorBoard issue. Those go here.

Here's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 64-bit
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.5.0-dev20171215
Python version: 3.6.3 |Anaconda, Inc.| (default, Nov  8 2017, 15:10:56) [MSC v.1900 64 bit (AMD64)]
Bazel version (if compiling from source): NA
GCC/Compiler version (if compiling from source): NA
CUDA/cuDNN version: NA
GPU model and memory: NA
Exact command to reproduce: See description

You can collect some of this information using our environment capture script:
https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh
You can obtain the TensorFlow version with
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
Describe the problem
First, define a loss function:
import tensorflow as tf
import tensorflow.contrib.eager as tfe
tfe.enable_eager_execution()

def loss(w):
    prediction = 2 * w + 1
    true_value = 11
    return tf.cast((true_value - prediction)**2, tf.float32)

Then, compute the gradient when w=0.1:
tfe.gradients_function(loss)(0.1)
The output is as expected. Next, compute the gradient when w=50:
tfe.gradients_function(loss)(50)
The output is:
[None]
I expected the output to be 360 because the gradient is -40 + 8 w.