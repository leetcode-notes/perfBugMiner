Failure to build from source with GPU support on macOS

I am trying to follow the installation instructions for Mac with GPU support.  I have CUDA 7.5 and cuDNN installed (and Theano currently works with GPU support on this system).
The contents of my /usr/local/cuda/lib include the following:
(py35)Dans-iMac:tensorflow dan$ ls -l /usr/local/cuda/lib/libcud*
-rwxr-xr-x  1 root  wheel  8280 Apr 13 00:02 /usr/local/cuda/lib/libcuda.dylib
lrwxr-xr-x  1 root  wheel    45 Apr 13 00:03 /usr/local/cuda/lib/libcudadevrt.a -> /Developer/NVIDIA/CUDA-7.5/lib/libcudadevrt.a
lrwxr-xr-x  1 root  wheel    50 Apr 13 00:03 /usr/local/cuda/lib/libcudart.7.5.dylib -> /Developer/NVIDIA/CUDA-7.5/lib/libcudart.7.5.dylib
lrwxr-xr-x  1 root  wheel    46 Apr 13 00:03 /usr/local/cuda/lib/libcudart.dylib -> /Developer/NVIDIA/CUDA-7.5/lib/libcudart.dylib
lrwxr-xr-x  1 root  wheel    49 Apr 13 00:03 /usr/local/cuda/lib/libcudart_static.a -> /Developer/NVIDIA/CUDA-7.5/lib/libcudart_static.a

My configure step doesn't provide any errors, as shown in the following:
(py35)Dans-iMac:tensorflow dan$ ./configure
Please specify the location of python. [Default is /Users/dan/anaconda/envs/py35/bin/python]:
Do you wish to build TensorFlow with Google Cloud Platform support? [y/N]
No Google Cloud Platform support will be enabled for TensorFlow
Do you wish to build TensorFlow with GPU support? [y/N] y
GPU support will be enabled for TensorFlow
Please specify which gcc nvcc should use as the host compiler. [Default is /usr/bin/gcc]:
Please specify the Cuda SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 7.5
Please specify the location where CUDA 7.5 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:
Please specify the Cudnn version you want to use. [Leave empty to use system default]:
Please specify the location where cuDNN  library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:
Please specify a list of comma-separated Cuda compute capabilities you want to build with.
You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.
Please note that each additional compute capability significantly increases your build time and binary size.
[Default is: "3.5,5.2"]: 3.0
Setting up Cuda include
Setting up Cuda lib
Setting up Cuda bin
Setting up Cuda nvvm
Setting up CUPTI include
Setting up CUPTI lib64
Configuration finished

However the first bazel build step results in the following error:
(py35)Dans-iMac:tensorflow dan$ bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package
ERROR: /Users/dan/tensorflow/tensorflow/contrib/session_bundle/BUILD:160:1: //tensorflow/contrib/session_bundle:manifest_proto_py: no such attribute 'imports' in 'py_library' rule.
ERROR: /Users/dan/tensorflow/tensorflow/tools/pip_package/BUILD:23:1: Target '//tensorflow/contrib/session_bundle:all_files' contains an error and its package is in error and referenced by '//tensorflow/tools/pip_package:build_pip_package'.
ERROR: Loading failed; build aborted.
INFO: Elapsed time: 0.092s

I tried looking at build files, but don't know bazel well enough to independently trace this further back.
All of this is using commit 19bda20635c91060996fe44fe201875b3b9ae7a2