bazel build command failed for tensorflow serving

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):Ubuntu 16.04 docker container
TensorFlow installed from (source or binary):
TensorFlow version (use command below):1.3.0
Python version: 3.5.2
Bazel version (if compiling from source):0.5.4
GCC/Compiler version (if compiling from source):5.4.0
CUDA/cuDNN version:NA
GPU model and memory:NA
Exact command to reproduce:
bazel build -c opt --jobs 1 --local_resources 5,2.0,2.0 --verbose_failures  tensorflow_serving/...

== cat /etc/issue ===============================================
Linux 25b038d948eb 4.9.49-moby #1 SMP Wed Sep 27 23:17:17 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
VERSION="16.04.3 LTS (Xenial Xerus)"
VERSION_ID="16.04"
VERSION_CODENAME=xenial
== are we in docker =============================================
Yes
== compiler =====================================================
c++ (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
== uname -a =====================================================
Linux 25b038d948eb 4.9.49-moby #1 SMP Wed Sep 27 23:17:17 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
== check pips ===================================================
numpy (1.13.3)
protobuf (3.4.0)
tensorflow (1.3.0)
tensorflow-tensorboard (0.1.8)
== check for virtualenv =========================================
False
== tensorflow import ============================================
tf.VERSION = 1.3.0
tf.GIT_VERSION = v1.3.0-rc2-20-g0787eee
tf.COMPILER_VERSION = v1.3.0-rc2-20-g0787eee
Sanity check: array([1], dtype=int32)
== env ==========================================================
LD_LIBRARY_PATH is unset
DYLD_LIBRARY_PATH is unset
== nvidia-smi ===================================================
env_collect.sh: line 105: nvidia-smi: command not found
== cuda libs  ===================================================
== cat /etc/issue ===============================================
Linux 25b038d948eb 4.9.49-moby #1 SMP Wed Sep 27 23:17:17 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
VERSION="16.04.3 LTS (Xenial Xerus)"
VERSION_ID="16.04"
VERSION_CODENAME=xenial
== are we in docker =============================================
Yes
== compiler =====================================================
c++ (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
== uname -a =====================================================
Linux 25b038d948eb 4.9.49-moby #1 SMP Wed Sep 27 23:17:17 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
== check pips ===================================================
numpy (1.13.3)
protobuf (3.4.0)
tensorflow (1.3.0)
tensorflow-tensorboard (0.1.8)
== check for virtualenv =========================================
False
== tensorflow import ============================================
tf.VERSION = 1.3.0
tf.GIT_VERSION = v1.3.0-rc2-20-g0787eee
tf.COMPILER_VERSION = v1.3.0-rc2-20-g0787eee
Sanity check: array([1], dtype=int32)
== env ==========================================================
LD_LIBRARY_PATH is unset
DYLD_LIBRARY_PATH is unset
== nvidia-smi ===================================================
bash: nvidia-smi: command not found
== cuda libs  ===================================================
Describe the problem
Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.
I am facing issues while running bazel build command in order to install tensorflow serving in the docker container.
COMMAND RAN:-
bazel build -c opt --jobs 1 --local_resources 5,2.0,2.0 --verbose_failures  tensorflow_serving/...
ERROR:-
/root/.cache/bazel/_bazel_root/f8d1071c69ea316497c31e40fe01608c/external/inception_model/inception/slim/BUILD:55:1: Converting to Python 3: external/inception_model/inception/slim/ops.py failed (Exit 1): 2to3 failed: error executing command
(cd /root/.cache/bazel/_bazel_root/f8d1071c69ea316497c31e40fe01608c/execroot/tf_serving && 
exec env - 
bazel-out/host/bin/external/bazel_tools/tools/python/2to3 --no-diffs --nobackups --write --output-dir bazel-out/local-py3-opt/genfiles/python3/external/inception_model/inception/slim --write-unchanged-files external/inception_model/inception/slim/ops.py).
I am trying to create a tensorflow serving container with python3 and tensorflow 1.3. I have successfully create tensorflow serving with python2 and tested mnist and inception models.