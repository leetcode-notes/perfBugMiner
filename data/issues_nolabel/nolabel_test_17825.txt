fft wrong results with non-power of 2 input sizes

I have encounter problems with the tensorflow fft implementation when the input is not a power of two. If the input is real, the first entry of the output is the sum of the input and should therefore also be real.
But tf.fft output a non-zero imaginary part. An example is given below:
import tensorflow as tf
import numpy as np

data = np.random.random(100)
sess = tf.Session()
fft_tf = sess.run(tf.fft(data))
print(fft_tf[0])
np.sum(data.astype(np.float32))

works as intended for inputs as power of two's including smaller errors:
data = np.random.random(128)
sess = tf.Session()
fft_tf = sess.run(tf.fft(data))
print(fft_tf[0])
np.sum(data.astype(np.float32))

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Windows 10
TensorFlow installed from (source or binary):
Installed from Source
TensorFlow version (use command below):
Version 1.4
Python version:
Python 3.6.2
Bazel version (if compiling from source):
N/A
GCC/Compiler version (if compiling from source):
N/A
CUDA/cuDNN version:
CUDA Version 8.0, cuDNN64_6
GPU model and memory:
nvidia GTX 1050 mobile
Exact command to reproduce:
See above.