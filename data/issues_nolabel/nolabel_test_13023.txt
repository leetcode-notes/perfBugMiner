Invalid argument: shape must be a vector of {int32,int64}, got shape []

I try to use the interface of RandomUniform as follows:
func TestRandomUniform(t *testing.T) {
	root := op.NewScope()

	T := op.Placeholder(root.SubScope("input"), tf.Int64)

	seed := op.RandomUniformSeed(-1.0)
	seed2 := op.RandomUniformSeed2(1.0)
	product := op.RandomUniform(root,T,tf.Float,seed,seed2)


	graph, err := root.Finalize()
	if err != nil {
		panic(err.Error())
	}

	var sess *tf.Session
	sess, err = tf.NewSession(graph, &tf.SessionOptions{})
	if err != nil {
		panic(err.Error())
	}

	var A *tf.Tensor

	if A, err = tf.NewTensor(int64(1)); err != nil {
		panic(err.Error())
	}

	var results []*tf.Tensor
	if results, err = sess.Run(
		map[tf.Output]*tf.Tensor{
			T: A,
		},
		[]tf.Output{product}, nil); err != nil {
			panic(err.Error())
	}
	for _, result := range results {
		fmt.Println(result.Value().([]int64))
	}

}

Invalid argument: shape must be a vector of {int32,int64}, got shape []
panic: shape must be a vector of {int32,int64}, got shape []
	 [[Node: RandomUniform = RandomUniform[T=DT_INT64, _class=[], dtype=DT_FLOAT, seed=-1, seed2=1, _device="/job:localhost/replica:0/task:0/cpu:0"](_arg_input/Placeholder_0_0)]] [recovered]
	panic: shape must be a vector of {int32,int64}, got shape []
	 [[Node: RandomUniform = RandomUniform[T=DT_INT64, _class=[], dtype=DT_FLOAT, seed=-1, seed2=1, _device="/job:localhost/replica:0/task:0/cpu:0"](_arg_input/Placeholder_0_0)]]

goroutine 5 [running]

But it  prints the error for me. What's it means?I am not good at c.And where are the demo i can find?