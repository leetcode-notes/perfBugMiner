memory mapped file

This uses a FileChannel to map the model file for slightly faster IO. Because of the difficulty with assets in android, the files must be copied outside of the apk first and then read in.  I did not include that part, deciding it would be the onus of the parent application.   ctx.getFileStreamPath(model) is called in a static factory alongside what is already there for backward compatibility.  This means files must have been copied to the internal storage per ctx.getFilesDir().   Also it passed in the Application for context, taking care to recreate it as needed for reclaimed memory.
This is a preliminary example of what could be changed.  I am disappointed that the mmap implementation in Java is very limited.  The byte[] of array() is not written to work with
MappedByteBuffer oddly, and asking for loaded state with load()  can kick off additional IO calls.
It is working in my library but I will also continue to improve on it. I  also plan to add a native jni version as well which makes use of the mmap util to see which runs faster.
I backed out my static changes and will see if that works in another PR.