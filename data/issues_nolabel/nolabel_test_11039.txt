coerce dict keys to strings when sorting for python3 compat

When tensor dicts have heterogeneous key types python 3 blows up due to the way sorted is being used.
In python 2 you can sort dicts with heterogeneous types:
   In [1]: d = {"z": 1, 1: 42, ("a", "b"): 100}
   In [2]: sorted(d)
   Out[2]: [1, 'z', ('a', 'b')]
In python 3 you get an error:
   In [1]: d = {"z": 1, 1: 42, ("a", "b"): 100}
   In [2]: sorted(d)
   ---------------------------------------------------------------------------
   TypeError                                 Traceback (most recent call last)
   <ipython-input-5-01813638448d> in <module>()
   ----> 1 sorted(d)
BTW, I ran into this issue when using the train script in the new object detection model/API: https://github.com/tensorflow/models/blob/master/object_detection/g3doc/running_locally.md