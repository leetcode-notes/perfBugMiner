DataFeeder fails on default random_state

Fixes len() of unsized object error in DataFeeder due to incorrect object type.
Tested with Python 3.5 and latest Tensorflow (1.1.0). Failed on
import tensorflow as tf
from tensorflow.contrib.learn import KMeansClustering
from tensorflow.contrib.learn import SKCompat

def my_input_fn(df):
    return {k: tf.constant(df[k].values) for k in df.columns}

def train_input_fn():
    return my_input_fn(pd.DataFrame(train_data)) # train_data is anything that can be passed to pd.DataFrame()

model = SKCompat(KMeansClustering(num_clusters=k))
model.fit(x = train_input_fn(), y = None)

Resulted in:
tensorflow/contrib/learn/python/learn/learn_io/data_feeder.py in __init__(self, x, y, n_classes, batch_size, shuffle, random_state, epochs)
    365         0] if x_is_dict else self._x.shape[0]
    366     if self._shuffle:
--> 367       self.indices = self.random_state.permutation(num_samples)
    368     else:
    369       self.indices = np.array(range(num_samples))

mtrand.pyx in mtrand.RandomState.permutation (numpy/random/mtrand/mtrand.c:39959)()

mtrand.pyx in mtrand.RandomState.shuffle (numpy/random/mtrand/mtrand.c:38843)()

TypeError: len() of unsized object

Couldn't find any myself, but is there any workaround for this?