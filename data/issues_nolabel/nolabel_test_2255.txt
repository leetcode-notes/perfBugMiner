Calculating Gradients Through tf.complex64 Numbers

Hey TF,
Its very nice that you support so many complex number calculations like tf.complex_abs and fft. I am trying replicate this Associative LSTM paper where complex numbers are needed.
However, when I try to calculate the gradient using tf.gradient, I get the traceback below. Is it not possible to calculate the gradient if complex numbers are used with type tf.complex64? If not, this would be an incredibly useful feature as there are several new RNN papers that require complex numbers to be used.
I am initializing a tf.complex64 dtype weight matrix as follows:
      if complex_weights: 
        a = tf.truncated_normal([total_arg_size, output_size], stddev=0.1)
        weight_matrix = tf.Variable(tf.complex(a,a), name="Complex_Weight")
Perhaps I'm missing something or not writing the code properly. I have TF 0.8 installed.
    gradients = tf.gradients(self.average_mean_loss, params)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gradients.py", line 481, in gradients
    in_grads = _AsList(grad_fn(op, *out_grads))
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/math_grad.py", line 414, in _DivGrad
    return (array_ops.reshape(math_ops.reduce_sum(grad / y, rx), sx),
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/math_ops.py", line 526, in r_binary_op_wrapper
    x = ops.convert_to_tensor(x, dtype=y.dtype.base_dtype, name="x")
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py", line 566, in convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gradients.py", line 94, in _IndexedSlicesToTensor
    name=name)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_math_ops.py", line 1759, in unsorted_segment_sum
    num_segments=num_segments, name=name)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/op_def_library.py", line 486, in apply_op
    _Attr(op_def, input_arg.type_attr))
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/op_def_library.py", line 59, in _SatisfiesTypeConstraint
    ", ".join(dtypes.as_dtype(x).name for x in allowed_list)))
TypeError: DataType complex64 for attr 'T' not in list of allowed values: float32, float64, int32, int64, uint8, int16, int8, uint16```