tf.pow(x,y) doesn't work for non-integer values of y

Operating System: Debian 4.8.15-2
Installed version of CUDA: 8.0
Installed version of cuDNN: 5.1.5
The output of ls -l /path/to/cuda/lib/libcud*:

myuser@mymachine:/mypath$ ls -l /usr/local/cuda-8.0/lib64/libcud*
-rw-r--r-- 1 root root 558720 sept. 15 01:02 /usr/local/cuda-8.0/lib64/libcudadevrt.a
lrwxrwxrwx 1 root root     16 sept. 15 01:05 /usr/local/cuda-8.0/lib64/libcudart.so -> libcudart.so.8.0
lrwxrwxrwx 1 root root     19 sept. 15 01:05 /usr/local/cuda-8.0/lib64/libcudart.so.8.0 -> libcudart.so.8.0.44
-rw-r--r-- 1 root root 415432 sept. 15 01:02 /usr/local/cuda-8.0/lib64/libcudart.so.8.0.44
-rw-r--r-- 1 root root 775162 sept. 15 01:02 /usr/local/cuda-8.0/lib64/libcudart_static.a

A link to the pip package you installed: Lost in history. I don't think this is the problem, so I'm going to skip it.
The output from python -c "import tensorflow; print(tensorflow.__version__)":

myuser@mymachine:/mypath$ python -c "import tensorflow; print(tensorflow.version)"
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
0.12.1

Minimal reproducible example: (using python3)
import tensorflow as tf
session = tf.InteractiveSession()
tf.pow(2,1.5).eval()

Logs or other output that would be helpful:

Traceback (most recent call last):
File "/mypath/.local/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py", line 490, in apply_op
preferred_dtype=default_dtype)
File "/mypath/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 669, in convert_to_tensor
ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
File "/mypath/.local/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py", line 176, in _constant_tensor_conversion_function
return constant(v, dtype=dtype, name=name)
File "/mypath/.local/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py", line 165, in constant
tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))
File "/mypath/.local/lib/python3.5/site-packages/tensorflow/python/framework/tensor_util.py", line 367, in make_tensor_proto
_AssertCompatible(values, dtype)
File "/mypath/.local/lib/python3.5/site-packages/tensorflow/python/framework/tensor_util.py", line 302, in _AssertCompatible
(dtype.name, repr(mismatch), type(mismatch).name))
TypeError: Expected int32, got 1.5 of type 'float' instead.
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "", line 1, in 
File "/mypath/.local/lib/python3.5/site-packages/tensorflow/python/ops/math_ops.py", line 507, in pow
return gen_math_ops._pow(x, y, name=name)
File "/mypath/.local/lib/python3.5/site-packages/tensorflow/python/ops/gen_math_ops.py", line 1705, in _pow
result = _op_def_lib.apply_op("Pow", x=x, y=y, name=name)
File "/mypath/.local/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py", line 499, in apply_op
repr(values), type(values).name))
TypeError: Expected int32 passed to parameter 'y' of op 'Pow', got 1.5 of type 'float' instead.