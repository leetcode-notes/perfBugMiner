Fix random crashes in SessionRun()

This patch fixes #13129
The problem was with usage of runtime.SetFinalizer() in golang bindings. When a variable become unreferenced GC can harvest it any moment after. According to this https://tip.golang.org/pkg/runtime/#SetFinalizer:

For example, if p points to a struct that contains a file descriptor d, and p has a finalizer that closes that file descriptor, and if the last use of p in a function is a call to syscall.Write(p.d, buf, size), then p may be unreachable as soon as the program enters syscall.Write. The finalizer may run at that moment, closing p.d, causing syscall.Write to fail because it is writing to a closed file descriptor (or, worse, to an entirely different file descriptor opened by a different goroutine). To avoid this problem, call runtime.KeepAlive(p) after the call to syscall.Write.

In our case unreferenced variable was "feeds", i.e. input tensors. After investigations I have found out that func (t *Tensor) finalize() { C.TF_DeleteTensor(t.c) } was called a way before SessionRun() was finished and that was the cause of crash in my case.