tf.where outputs the wrong tensor dtype

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution: Ubuntu 14.04
TensorFlow installed from: Source
TensorFlow version: ('v1.2.0-5-g435cdfc', '1.2.1')
Python version: 2.7.13
Bazel version: N/A
CUDA/cuDNN version: Cuda 8.0
GPU model and memory: N/A
Exact command to reproduce:

x = tf.Variable([2, 1], dtype=tf.float32)
y = tf.Variable(2, dtype=tf.float32)
z = tf.where(tf.equal(x, y))
print z

>> Tensor("Where_1:0", shape=(?, 1), dtype=int64)

Describe the problem
In the documentation for tf.where.py, it states that it returns A Tensor with the same type and shape as x, y if they are non-None. In the example above, we see that x and y are both dtype tf.float32. Yet, the output is tf.int64. Was this intended or a bug?
This bug is a bit problematic for me as I use tf.where in my loss function so I need to ensure that all my tensors are tf.float32 since tf.cast is not a differentiable ops.