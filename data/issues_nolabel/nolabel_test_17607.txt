Fix inconsistency of eq for TensorShape

This fix tries to address the inconsistency of eq for TensorShape.
For TensorShape, the dimension of Dimension(None) should be considered not equal to Dimension(None). However, if the same Dimension(None) is reused, the behavior changes. For example,
$ python
Python 2.7.12 (default, Dec  4 2017, 14:50:18)
[GCC 5.4.0 20160609] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import tensorflow as tf
>>> tf.TensorShape([None]) == tf.TensorShape([None])
False
>>> tf.TensorShape([tf.Dimension(None)]) == tf.TensorShape([tf.Dimension(None)])
False
>>> dim = tf.Dimension(None)
>>> tf.TensorShape([dim]) == tf.TensorShape([dim])
True
>>>

The issue was that when dims is passed to the constructor of TensorShape through as_dimension, the dimension is directly assigned. This fix changes the implementaion of as_dimension so that a copy is always performs. In this way, Dimensions in TensorShape will always have the differnet id so an __eq__ op will always be performed.
This fix fixes #17593.
Signed-off-by: Yong Tang yong.tang.github@outlook.com