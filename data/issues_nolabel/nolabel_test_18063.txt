Can't `import tensorflow` when `PYTHONOPTIMIZE=2`

Issue
The Python runtime admits an environment variable called PYTHONOPTIMIZE. When PYTHONOPTIMIZE is set to 2 (eg. export PYTHONOPTIMIZE=2), Python can't import tensorflow, and I think the reason is that PYTHONOPTIMIZE=2 strips away .__doc__ strings.
Logs
Python 3.6.4 (default, Feb 19 2018, 12:57:53) 
[GCC 5.4.0 20160609] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import tensorflow
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/da/git/py36/lib/python3.6/site-packages/tensorflow/__init__.py", line 24, in <module>
    from tensorflow.python import *  # pylint: disable=redefined-builtin
  File "/home/da/git/py36/lib/python3.6/site-packages/tensorflow/python/__init__.py", line 63, in <module>
    from tensorflow.python.framework.framework_lib import *  # pylint: disable=redefined-builtin
  File "/home/da/git/py36/lib/python3.6/site-packages/tensorflow/python/framework/framework_lib.py", line 77, in <module>
    from tensorflow.python.framework.ops import Graph
  File "/home/da/git/py36/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 41, in <module>
    from tensorflow.python.eager import context
  File "/home/da/git/py36/lib/python3.6/site-packages/tensorflow/python/eager/context.py", line 29, in <module>
    from tensorflow.python.framework import c_api_util
  File "/home/da/git/py36/lib/python3.6/site-packages/tensorflow/python/framework/c_api_util.py", line 23, in <module>
    from tensorflow.python.util import compat
  File "/home/da/git/py36/lib/python3.6/site-packages/tensorflow/python/util/compat.py", line 153, in <module>
    remove_undocumented(__name__, _allowed_symbols)
  File "/home/da/git/py36/lib/python3.6/site-packages/tensorflow/python/util/all_util.py", line 103, in remove_undocumented
    should_have = make_all(module_name, doc_string_modules)
  File "/home/da/git/py36/lib/python3.6/site-packages/tensorflow/python/util/all_util.py", line 55, in make_all
    for m in _reference_pattern.finditer(doc_module.__doc__)
TypeError: expected string or bytes-like object

Workaround
Set PYTHONOPTIMIZE to 0 or 1 (eg. export PYTHONOPTIMIZE=0 or export PYTHONOPTIMIZE=1).

Have I written custom code. No
OS Platform and Distribution. Linux 4.15 Ubuntu 16.04
TensorFlow installed from. Source
TensorFlow version. 1.7.0-rc1
Bazel version. N/A
CUDA/cuDNN version. CUDA 9.1 / cuDNN 7.0.5
GPU model and memory. NVIDIA Titan V 12GB
Exact command to reproduce. $ export PYTHONOPTIMIZE=2 && python -c "import tensorflow"