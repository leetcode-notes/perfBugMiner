can't read my own tfrecords and face FailedPreconditionError

Please go to Stack Overflow for help and support:
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 1604
TensorFlow installed from (source or binary): conda tensorflow
TensorFlow version (use command below): 1.3.0
Python version: 2.7
**Bazel version: N/A
**CUDA/cuDNN version: N/A
**GPU model and memory: N/A

Describe the problem
I'm tryting to read my own datasets. And there exists FailedPreconditionError.
But my test.records are in the right directory, I don't know why it ocurred.
Source code / logs
these are the console error.
INFO:tensorflow:Error reported to Coordinator: <class 'tensorflow.python.framework.errors_impl.FailedPreconditionError'>, /home/tju/0_lvjc/deepnet348/data/tfrecords
	 [[Node: ReaderReadV2 = ReaderReadV2[_device="/job:localhost/replica:0/task:0/cpu:0"](TFRecordReaderV2, input_producer)]]
Traceback (most recent call last):
  File "/home/tju/Downloads/pycharm-community-2017.2.4/helpers/pydev/pydev_run_in_console.py", line 37, in run_file
    pydev_imports.execfile(file, globals, locals)  # execute the script
  File "/home/tju/0_lvjc/deepnet348/data_input.py", line 199, in <module>
    coord.join(threads)
  File "/home/tju/anaconda2/lib/python2.7/site-packages/tensorflow/python/training/coordinator.py", line 389, in join
    six.reraise(*self._exc_info_to_raise)
  File "/home/tju/anaconda2/lib/python2.7/site-packages/tensorflow/python/training/queue_runner_impl.py", line 238, in _run
    enqueue_callable()
  File "/home/tju/anaconda2/lib/python2.7/site-packages/tensorflow/python/client/session.py", line 1235, in _single_operation_run
    target_list_as_strings, status, None)
  File "/home/tju/anaconda2/lib/python2.7/contextlib.py", line 24, in __exit__
    self.gen.next()
  File "/home/tju/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/errors_impl.py", line 466, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))

these are my codes.
#%% Convert data to TFRecord

file_dir='/home/tju/0_lvjc/datasets/SALICON/train_images/*.jpg'
label_dir='/home/tju/0_lvjc/datasets/SALICON/salicon17_maps/train/*.png'

tfrecords_file = '/home/tju/0_lvjc/deepnet348/data/tfrecords'
BATCH_SIZE = 5


#Convert test data: you just need to run it ONCE !
name_test = 'test'
images, labels = get_file(file_dir, label_dir)
convert_to_tfrecord(images, labels, save_dir=tfrecords_file, name=name_test)


#%% TO test train.tfrecord file

def plot_images(images, labels):
    '''plot one batch size
    '''
    for i in np.arange(0, BATCH_SIZE):
        plt.subplot(5, 5, i + 1)
        plt.axis('off')
        plt.title(chr(ord('A') + labels[i] - 1), fontsize = 14)
        plt.subplots_adjust(top=1.5)
        plt.imshow(images[i])
    plt.show()



image_batch, label_batch = read_and_decode(tfrecords_file, batch_size=BATCH_SIZE)

with tf.Session()  as sess:
    
    i = 0
    coord = tf.train.Coordinator()
    threads = tf.train.start_queue_runners(coord=coord)
    
    try:
        while not coord.should_stop() and i<1:
            # just plot one batch size
            image, label = sess.run([image_batch, label_batch])
            plot_images(image, label)
            i+=1
            
    except tf.errors.OutOfRangeError:
        print('done!')
    finally:
        coord.request_stop()
    coord.join(threads)