Test case for session_partial_run_test.py is getting failed

I tried running file session_partial_run_test.py, It throws an error with following two failed exception.
======================================================================
FAIL: testRunAndPartialRunDist (__main__.PartialRunTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "g:/tensorflow/tensorflow/python/client/session_partial_run_test.py", line 258, in testRunAndPartialRunDist
    self.RunTestRunAndPartialRun(session.Session(server.target))
  File "g:/tensorflow/tensorflow/python/client/session_partial_run_test.py", line 123, in RunTestRunAndPartialRun
    self.assertEqual(r1, r2)
AssertionError: Lists differ: [4.0, 12.0] != [array([], dtype=float32), 12.0]

- [4.0, 12.0]
+ [array([], dtype=float32), 12.0]

======================================================================
FAIL: testRunAndPartialRunDist (__main__.PartialRunWithCApiTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "g:/tensorflow/tensorflow/python/client/session_partial_run_test.py", line 258, in testRunAndPartialRunDist
    self.RunTestRunAndPartialRun(session.Session(server.target))
  File "g:/tensorflow/tensorflow/python/client/session_partial_run_test.py", line 123, in RunTestRunAndPartialRun
    self.assertEqual(r1, r2)
AssertionError: Lists differ: [4.0, 12.0] != [array([], dtype=float32), 12.0]

- [4.0, 12.0]
+ [array([], dtype=float32), 12.0]

----------------------------------------------------------------------
Ran 50 tests in 2.933s

FAILED (failures=2)

However, I tried debugging the code and found some scenarios in below function:
def RunTestRunAndPartialRun(self, sess):
    a = constant_op.constant(2.0, dtypes.float32)
    b = a * 2
    c = b * 3
    r1 = sess.run([b, c])
    h = sess.partial_run_setup([b, c], [])
    r2 = sess.partial_run(h, [b, c])
    self.assertEqual(r1, r2)

In 1st scenario, when testRunAndPartialRunDirect() is executed, the test gets succeed with h value:
h = '->mul:0,mul_1:0//1/;0'
In 2nd scenario, when testRunAndPartialRunDist() is executed, the test gets failed with h value:
h = '0'
and below following list are different since assertEqual is throwing an exception:
Lists differ: [4.0, 12.0] != [array([], dtype=float32), 12.0]

- [4.0, 12.0]
+ [array([], dtype=float32), 12.0] 

Looks like due to zero handle value, it started throwing an exception. Just need your suggestion if you are facing the same issue. Can I fix it by myself (I'd be happy to contribute)?
Guidance will be appreciated.