Native TF, Keras (Backend TF) and Lasagne(Theano) performance comparison

Hey everyone,
I created the exact same network with native tensorflow, keras(tensorflow) and lasagne(theano) but after many hours of testing using number of different parameters, still couldn't figure out why keras and lasagne outperforms the native tensorflow, do better convergences and produce better(slightly but better) results.
The score difference is always like
Keras with Tensorflow: ~0.9830 - 0.9885
Lasagne with Theano: ~0.9833 - 0.9885
Tensorflow Native ~0.9765 - 0.9830
If anyone feels like digging in, my environment is:

Python 3.5.2 -Anaconda / Windows 10
CUDA: 8.0 with cuDNN 5.1
Keras 1.2.1
Tensorflow 0.12.1
Nvidia Geforce GTX 860M

and keras.json file:
{
    "image_dim_ordering": "tf", 
    "epsilon": 1e-07, 
    "floatx": "float32", 
    "backend": "tensorflow"
}

And you can copy and execute following files in my repo:
Keras code
Native Tensorflow code
Mnist