`export_meta_graph` fails if graph has no variables

Please go to Stack Overflow for help and support:
https://stackoverflow.com/questions/tagged/tensorflow
If you open a GitHub issue, here is our policy:

It must be a bug or a feature request.
The form below must be filled out.
It shouldn't be a TensorBoard issue. Those go here.

Here's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Linux Ubuntu 16.04
TensorFlow installed from (source or binary):
Binary
TensorFlow version (use command below):
1.3
Python version:
3.5
Bazel version (if compiling from source):
CUDA/cuDNN version:
8
GPU model and memory:
1060
Exact command to reproduce:

import tensorflow as tf

x = tf.placeholder("float32")
y = x + x
tf.train.export_meta_graph("test.meta")
tf.reset_default_graph()
g = tf.train.import_meta_graph("test.meta")

yields
INFO:tensorflow:Saver not created because there are no variables in the graph to restore
You can collect some of this information using our environment capture script:
https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh
You can obtain the TensorFlow version with
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
Describe the problem
Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.
The export and import meta_graph features fail if a graph has no variables.
Source code / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.
import tensorflow as tf

x = tf.placeholder("float32")
y = x + x
tf.train.export_meta_graph("test.meta")
tf.reset_default_graph()
g = tf.train.import_meta_graph("test.meta")