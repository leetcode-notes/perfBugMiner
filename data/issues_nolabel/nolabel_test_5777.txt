GPU becomes unavailable after computer wakes up

I noticed many have issues with GPU being unavailable with message (e.g., issue 394)
E tensorflow/stream_executor/cuda/cuda_driver.cc:491] failed call to cuInit: CUDA_ERROR_UNKNOWN
some suggested sudo apt-get install nvidia-modprobe  but it does not work for all including me. my GPU works until i put the computer to sleep/suspense, but after waking up the computer i always get the message above and the GPU (gtx 1070) is no longer available in execution of the code (only CPU is used) in nvidia docker.  I also noticed if prior to suspending the computer i exit the docker and then restart it when i wake the computer the GPU is still available in docker. So, the problem happens if i suspend the computer while the ipython-notebook session is up and running.
I am using nvidia-docker
nvidia-docker run -it -p 8888:8888 -v /*..../Data/docker:/docker --name TensorFlow gcr.io/tensorflow/tensorflow:latest-gpu /bin/bash
Nvidia-smi and nvidia-debugdump -l both show the GPU is installed and driver is up to date within docker and in the host.
when i run nvidia-smi in docker the output is
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 367.57                 Driver Version: 367.57                    |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  GeForce GTX 1070    Off  | 0000:01:00.0      On |                  N/A |
|  0%   41C    P0    39W / 180W |    450MiB /  8105MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID  Type  Process name                               Usage      |
|=============================================================================|
+-----------------------------------------------------------------------------+
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally
E tensorflow/stream_executor/cuda/cuda_driver.cc:491] failed call to cuInit: CUDA_ERROR_UNKNOWN
I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:153] retrieving CUDA diagnostic information for host: ca234sff235
I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:160] hostname: ca234sff235
I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:185] libcuda reported version is: 367.57.0
I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:356] driver version file contents: """NVRM version: NVIDIA UNIX x86_64 Kernel Module  367.57  Mon Oct  3 20:37:01 PDT 2016
GCC version:  gcc version 4.9.3 (Ubuntu 4.9.3-13ubuntu2) 
"""
I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] kernel reported version is: 367.57.0
I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:293] kernel version seems to match DSO: 367.57.0

Software specs:
OS: Ubuntu 16.04 LTS - 64 bit
GPU driver: nvidia 367.57
Cuda : 7.5