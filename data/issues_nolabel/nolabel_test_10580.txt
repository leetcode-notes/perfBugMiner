contrib.keras TypeError with HDF5Matrix and validation_split

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): v1.2.0-rc2
Bazel version (if compiling from source): N/A
CUDA/cuDNN version: v8.0/v5.1
GPU model and memory: NVIDIA M4000, 8GB
Exact command to reproduce: https://gist.github.com/droidicus/4a55c83e522d90b103b81bf5fb63e610

Describe the problem
When using tf.contrib.keras.HDF5Matrix as an input to model.fit, a TypeError is thrown if validation_split is used. If no validation_split is used then the model.fit command proceeds as expected.
Source code / logs
A gist of a minimal example is available here: https://gist.github.com/droidicus/4a55c83e522d90b103b81bf5fb63e610
The trace of the error is as follows:
TypeError                                 Traceback (most recent call last)
<ipython-input-2-bdaf6d0caaa7> in <module>()
     13 # This call to fit uses a validation_split, and causes:
     14 # TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'
---> 15 model.fit(X_train, y_train, validation_split=0.1, shuffle='batch')
 
C:\Program Files\Anaconda3\envs\tensorflow_rc\lib\site-packages\tensorflow\contrib\keras\python\keras\models.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch)
    842         class_weight=class_weight,
    843         sample_weight=sample_weight,
--> 844         initial_epoch=initial_epoch)
    845
    846   def evaluate(self, x, y, batch_size=32, verbose=1, sample_weight=None):
 
C:\Program Files\Anaconda3\envs\tensorflow_rc\lib\site-packages\tensorflow\contrib\keras\python\keras\engine\training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch)
   1436       do_validation = True
   1437       split_at = int(len(x[0]) * (1. - validation_split))
-> 1438       x, val_x = (_slice_arrays(x, 0, split_at), _slice_arrays(x, split_at))
   1439       y, val_y = (_slice_arrays(y, 0, split_at), _slice_arrays(y, split_at))
   1440       sample_weights, val_sample_weights = (_slice_arrays(
 
C:\Program Files\Anaconda3\envs\tensorflow_rc\lib\site-packages\tensorflow\contrib\keras\python\keras\engine\training.py in _slice_arrays(arrays, start, stop)
    395       return [x[start] for x in arrays]
    396     else:
--> 397       return [x[start:stop] for x in arrays]
    398   else:
    399     if hasattr(start, '__len__'):
 
C:\Program Files\Anaconda3\envs\tensorflow_rc\lib\site-packages\tensorflow\contrib\keras\python\keras\engine\training.py in <listcomp>(.0)
    395       return [x[start] for x in arrays]
    396     else:
--> 397       return [x[start:stop] for x in arrays]
    398   else:
    399     if hasattr(start, '__len__'):
 
C:\Program Files\Anaconda3\envs\tensorflow_rc\lib\site-packages\tensorflow\contrib\keras\python\keras\utils\io_utils.py in __getitem__(self, key)
     81   def __getitem__(self, key):
     82     if isinstance(key, slice):
---> 83       if key.stop + self.start <= self.end:
     84         idx = slice(key.start + self.start, key.stop + self.start)
     85       else:
 
TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'