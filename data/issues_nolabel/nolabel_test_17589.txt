Device mapping: no known devices. 2018-03-09 15:46:04.512611: I tensorflow/core/common_runtime/direct_session.cc:299] Device mapping:

Hi folks,
I am sure this question has been asked many many times everywhere but I couldn't get my problem resolved!
here is the error message after I execute:
sess = tf.Session(config=tf.ConfigProto(log_device_placement=True))
the error:
2018-03-09 15:45:58.393237: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA
2018-03-09 15:45:58.929878: E tensorflow/core/common_runtime/direct_session.cc:170] Internal: failed initializing StreamExecutor for CUDA device ordinal 0: Internal: failed call to cuDevicePrimaryCtxRetain: CUDA_ERROR_OUT_OF_MEMORY; total memory reported: 11719016448
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/ist/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1482, in __init__
    super(Session, self).__init__(target, graph, config=config)
  File "/home/ist/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 622, in __init__
    self._session = tf_session.TF_NewDeprecatedSession(opts, status)
  File "/home/ist/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py", line 473, in __exit__
    c_api.TF_GetCode(self.status.status))
tensorflow.python.framework.errors_impl.InternalError: Failed to create session.

and when I try again I receive this message:
Device mapping: no known devices.
2018-03-09 15:46:04.512611: I tensorflow/core/common_runtime/direct_session.cc:299] Device mapping:


I am working on a Ubuntu remote server which I access  from a Windows 10 Remote Desktop.
The info of Ubuntu as follows:
lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 16.04.3 LTS
Release:        16.04
Codename:       xenial
when I execute nvidia-smi
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 390.25     Driver Version: 390.25                                           |
|-------------------------------+----------------------+----------------------+
| GPU  Name: Persistence-M| Bus-Id   Disp.A | Volatile Uncorr. ECC           |
| Fan  Temp  Perf  Pwr:Usage/Cap | Memory-Usage | GPU-Util  Compute M. |
|==============================================|
|   0  GeForce GTX 108...  Off  | 00000000:01:00.0  On |  N/A                      |
| 47%   66C    P2   244W / 250W |  11146MiB / 11176MiB |  83% Default  |
+-------------------------------+----------------------+----------------------+
+------------------------------------------------------------------------------------+
| Processes:                                                                                     GPU Memory |
|  GPU       PID   Type   Process name                                                    Usage      |
|==================================================|
|    0      1168      G   /usr/lib/xorg/Xorg                                                     89MiB |
|    0      1957      G   compiz                                                                       90MiB |
|    0      2847      C   python                                                                  10937MiB |
+-----------------------------------------------------------------------------+
and  nvcc --version:
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2016 NVIDIA Corporation
Built on Tue_Jan_10_13:22:03_CST_2017
Cuda compilation tools, release 8.0, V8.0.61
Python 3.6.4
Tensorflow-gpu 1.4.1
Have I written custom code?
I just run a small piece of code to make sure if the GPU is utilized and the is mentioned above!
OS Platform and Distribution
also mentioned this above
TensorFlow installed from sudo pip3 install tensorflow-gpu==1.4.1
TensorFlow version 1.4.1
Bazel version didn't install it!
CUDA/cuDNN version 8.0.x / 6
GPU model and memory
sudo lshw -C "display" *-display description: VGA compatible controller product: NVIDIA Corporation vendor: NVIDIA Corporation physical id: 0 bus info: pci@0000:01:00.0 version: a1 width: 64 bits clock: 33MHz capabilities: pm msi pciexpress vga_controller bus_master cap_list rom configuration: driver=nvidia latency=0 resources: irq:148 memory:de000000-deffffff memory:c0000000-cfffffff memory:d0000000-d1ffffff ioport:e000(size=128) memory:c0000-dffff *-display UNCLAIMED description: Display controller product: Intel Corporation vendor: Intel Corporation physical id: 2 bus info: pci@0000:00:02.0 version: 00 width: 64 bits clock: 33MHz capabilities: pciexpress msi pm cap_list configuration: latency=0 resources: memory:dd000000-ddffffff memory:b0000000-bfffffff ioport:f000(size=64)
Exact command to reproduce
import tensorflow as tf
sess = tf.Session(config=tf.ConfigProto(log_device_placement=True))


what should I do!