tf.contrib.rnn.LSTMCell()  dtype not defined. Error when creating initializer for bias variable.

OS Platform and Distribution: Mac OSX 10.10.5


TensorFlow installed from: binary


TensorFlow version: 1.5.0rc


Python version:   3.6


Have I written custom code: NA


Bazel version: NA


CUDA/cuDNN version: NA


GPU model and memory:NA


Exact command to reproduce:


import tensorflow as tf
lstm = tf.contrib.rnn.LSTMCell(10)
input_tensor = tf.ones([10,50])
lstm.build(input_tensor.get_shape())
Traceback (most recent call last):
File "/Applications/PyCharm CE.app/Contents/helpers/pydev/_pydevd_bundle/pydevd_exec2.py", line 3, in Exec
exec(exp, global_vars, local_vars)
File "", line 1, in 
File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/ops/rnn_cell_impl.py", line 719, in build
initializer=init_ops.zeros_initializer(dtype=self.dtype))
File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/ops/init_ops.py", line 88, in init
self.dtype = dtypes.as_dtype(dtype)
File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py", line 627, in as_dtype
"Cannot convert value %r to a TensorFlow DType." % type_value)
TypeError: Cannot convert value None to a TensorFlow DType.
Describe the problem
It seems that LSTMCell does get the dtype in init and does not pass to parent object. Then lstm._dtype is always None.
A workearound is to add:
lstm._dtype = 'float32'
before:
lstm.build(input_tensor.get_shape())