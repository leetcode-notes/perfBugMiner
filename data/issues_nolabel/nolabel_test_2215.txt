How to classify an image with the trained cifar10 model?

After trained a cifar10 model, I want to test the model with a image. There are some other people trying to make it, but it's still a confusing question. My test code is presented, as follows:
from datetime import datetime
import math
import time

import numpy as np
import tensorflow as tf
import cifar10

FLAGS = tf.app.flags.FLAGS

tf.app.flags.DEFINE_string('checkpoint_dir', 'cifar10_train/',
                           """Directory where to read model checkpoints.""")


def  evaluate_images(images):
  logit = cifar10.inference(images)
  load_trained_model(logit)

def load_trained_model(logits):
  with tf.Session() as sess:
    sess.run(tf.initialize_all_variables())
    ckpt = tf.train.get_checkpoint_state(FLAGS.checkpoint_dir)
    if ckpt and ckpt.model_checkpoint_path:
      # Restores from checkpoint
      saver.restore(sess, ckpt.model_checkpoint_path)
    else:
      print('No checkpoint file found')
      return

    predict = tf.argmax(logits,1)
    print(predict.eval(), '\n')

def img_read(filename):
  if not tf.gfile.Exists(filename):
    tf.logging.fatal('File does not exists %s', filename)
  image_data = tf.gfile.FastGFile(filename, 'rb').read()
  image = tf.cast(image_data, tf.float32)
  return image

filename = '1.png'
images = img_read(filename)
evaluate_images(images)

But it occurs the bug:
File "/home/swoda/tensorflow/tensorflow/models/image/cifar10/cifar10.py", line 192, in inference
    conv = tf.nn.conv2d(images, kernel, [1, 1, 1, 1], padding='SAME')
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_nn_ops.py", line 295, in conv2d
    data_format=data_format, name=name)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/op_def_library.py", line 655, in apply_op
    op_def=op_def)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py", line 2156, in create_op
    set_shapes_for_outputs(ret)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py", line 1612, in set_shapes_for_outputs
    shapes = shape_func(op)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/common_shapes.py", line 202, in conv2d_shape
    input_shape = op.inputs[0].get_shape().with_rank(4)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/tensor_shape.py", line 625, in with_rank
    raise ValueError("Shape %s must have rank %d" % (self, rank))
ValueError: Shape () must have rank 4

If you know how to fix this problem, please tell me. Thank you very much!