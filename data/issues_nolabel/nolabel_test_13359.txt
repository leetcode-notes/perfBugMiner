Sess.list_devices() get  swig/python detected a memory leak error.

Look at the code:
def different_graph_session_test():
	'''
		a_0 is in graph g_0, a_1 is in graph g_1,a_2 is in default graph,
		so a_0 can only run on session of g_0, a_1 can only run on session of g_1,
		a_2 can only run on session of tf.get_default_graph()
	'''
	g_0 = tf.Graph()
	g_1 = tf.Graph()
	with g_0.as_default():
		a_0 = tf.constant(1)
	with g_1.as_default():
		a_1 = tf.constant(1)
	a_2 = tf.constant(1)

	assert not a_0.graph is a_1.graph, 'different_graph_session_test wrong!'
	assert a_2.graph is tf.get_default_graph(), 'different_graph_session_test wrong!'
	
	with tf.Session(graph=g_0) as sess:
		sess.run(a_0)
		devices = sess.list_devices()
		for d in devices:
			print(d.name)
	with tf.Session(graph=g_1) as sess:
		sess.run(a_1)
		devices = sess.list_devices()
		for d in devices:
			print(d.name)
	with tf.Session() as sess:
		sess.run(a_2)
		devices = sess.list_devices()
		for d in devices:
			print(d.name)
It will print
swig/python detected a memory leak of type 'int64_t *', no destructor found.
swig/python detected a memory leak of type 'int64_t *', no destructor found.
/job:localhost/replica:0/task:0/device:CPU:0
/job:localhost/replica:0/task:0/device:GPU:0
swig/python detected a memory leak of type 'int64_t *', no destructor found.
swig/python detected a memory leak of type 'int64_t *', no destructor found.

Is it a bug or something wrong?