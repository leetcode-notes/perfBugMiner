I think 'class EmbeddingWrapper' has problem

I found that there are some differences between r0.7 and r0.9 which is that : class EmbeddingWrapper in rnn_cell.py in r0.9 doens't has some @property values, just like def input_size , def output_size . and when i run rnn.rnn with embeded cell, it causes an NotImplementedError which is from RNNCell 's function
def __call__(self, inputs, state, scope=None):
    """Run this RNN cell on inputs, starting from the given state.

    Args:
      inputs: `2-D` tensor with shape `[batch_size x input_size]`.
      state: if `self.state_size` is an integer, this should be a `2-D Tensor`
        with shape `[batch_size x self.state_size]`.  Otherwise, if
        `self.state_size` is a tuple of integers, this should be a tuple
        with shapes `[batch_size x s] for s in self.state_size`.
      scope: VariableScope for the created subgraph; defaults to class name.

    Returns:
      A pair containing:
      - Output: A `2-D` tensor with shape `[batch_size x self.output_size]`.
      - New state: Either a single `2-D` tensor, or a tuple of tensors matching
        the arity and shapes of `state`.
    """
    raise NotImplementedError("Abstract method")
Did i do something wrong?