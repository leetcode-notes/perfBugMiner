Dequeue op loses TensorShape

I am not able to find related issues online.
Operating System:
Ubuntu, Mac OSX
Installed version of CUDA and cuDNN:
CUDA 7.5, cuDNN v5.1
If installed from binary pip package, provide:

A link to the pip package you installed:
TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0rc0-cp27-none-linux_x86_64.whl
The output from python -c "import tensorflow; print(tensorflow.__version__)".
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally
0.11.0rc0

To reproduce the problem:
a = tf.placeholder(dtype=tf.int32, shape=[None, 10])
print a.get_shape()
queue = tf.FIFOQueue(20, dtypes=[tf.int32])
queue.enqueue([a])
b = queue.dequeue()
print b.get_shape()
The first print output <?, 10>, which is OK, and there is a TensorShape for a.
But the second print output is , and there is no TensorShape for b.
TensorShape information is lost after dequeue operation.
And this TensorShape is required in LSTM cell class.
Can we add this TensorShape information back to the dequeued tensors?
Thanks.