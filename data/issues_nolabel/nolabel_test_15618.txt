Tensorflow does not build in a python3 only environment

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Fedora 27
TensorFlow installed from (source or binary):
Source
TensorFlow version (use command below):
1.4.1
Python version:
3.6.3
Bazel version (if compiling from source):
0.8.1
GCC/Compiler version (if compiling from source):
Using built-in specs.
COLLECT_GCC=/usr/bin/gcc
COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/7/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-redhat-linux
Configured with: ../configure --enable-bootstrap --enable-languages=c,c++,objc,obj-c++,fortran,ada,go,lto --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-shared --enable-threads=posix --enable-checking=release --enable-multilib --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-gcc-major-version-only --with-linker-hash-style=gnu --enable-plugin --enable-initfini-array --with-isl --enable-libmpx --enable-offload-targets=nvptx-none --without-cuda-driver --enable-gnu-indirect-function --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux
Thread model: posix
gcc version 7.2.1 20170915 (Red Hat 7.2.1-2) (GCC)
CUDA/cuDNN version:
N/A
GPU model and memory:
N/A
Exact command to reproduce:

export LANG="en_US.UTF-8"
export PYTHON_BIN_PATH="/usr/bin/python3"
export PYTHON_LIB_PATH="/usr/lib64/python3.6/site-packages"
export TF_NEED_JEMALLOC="1"
export TF_NEED_S3="0"
export TF_NEED_GCP="0"
export TF_NEED_OPENCL="0"
export TF_ENABLE_XLA="0"
export TF_NEED_GDR="0"
export TF_NEED_VERBS="0"
export TF_NEED_MPI="0"
export TF_NEED_CUDA="0"
export TF_NEED_HDFS="0"
export CC_OPT_FLAGS="-march=native"
./configure
bazel build --action_env PATH="$PATH" --verbose_failures //tensorflow/tools/pip_package:build_pip_package
Describe the problem
Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.
When building tensorflow in an environment with only python3 (e.g. no /usr/bin/python but instead /usr/bin/python3) build fails.  As this is likely to become increasingly the case as other distributions drop python2.7 from default installs (and, eventually drop it altogether), this ought to be addressed.
Source code / logs
ERROR: /builddir/build/BUILD/tensorflow-1.4.1/tensorflow/python/BUILD:4363:1: Executing genrule //tensorflow/python:framework_fast_tensor_util_cython_translation failed (Exit 127): bash failed: error executing command
(cd /builddir/.cache/bazel/_bazel_mockbuild/88de5ec7248fb8215eb84aeff796b606/execroot/org_tensorflow && 
exec env - 
PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:/builddir/.local/bin:/builddir/bin 
PYTHON_BIN_PATH=/usr/bin/python3 
PYTHON_LIB_PATH=/usr/lib64/python3.6/site-packages 
TF_NEED_CUDA=0 
TF_NEED_OPENCL=0 
/bin/bash -c 'source external/bazel_tools/tools/genrule/genrule-setup.sh; PYTHONHASHSEED=0 bazel-out/host/bin/external/cython/cython_binary --cplus tensorflow/python/framework/fast_tensor_util.pyx && python -c '''import shutil, sys; n = len(sys.argv); [shutil.copyfile(src.split(".")[0] + ".cpp", dst) for src, dst in zip(sys.argv[1:], sys.argv[1+n//2:])]''' tensorflow/python/framework/fast_tensor_util.pyx bazel-out/k8-py3-opt/genfiles/tensorflow/python/framework/fast_tensor_util.cpp')
/usr/bin/env: 'python': No such file or directory
Target //tensorflow/tools/pip_package:build_pip_package failed to build
INFO: Elapsed time: 575.085s, Critical Path: 26.26s
FAILED: Build did NOT complete successfully