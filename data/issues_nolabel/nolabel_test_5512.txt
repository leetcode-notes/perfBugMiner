Re-entering an existing scope with variable_scope produces inconsistent results

Consider the following example:
with tf.variable_scope(name_or_scope='alpha'):
    with tf.variable_scope(name_or_scope='beta'):
        with tf.variable_scope(name_or_scope=tf.get_variable_scope()):
            a_var = tf.get_variable(shape=(42,), name='my_var') # An arbitrary var
            an_op = tf.reduce_sum(tf.zeros((42,)), name='my_op') # An arbitrary op

print('a_var is named {}'.format(a_var.name))
print('an_op is named {}'.format(an_op.name))
This produces the following output:
a_var is named alpha/beta/my_var:0
an_op is named alpha/beta/beta/my_op:0

Note that re-entering the existing scope appears to correctly name the variable, but introduces a redundant prefix for ops. Is this expected behavior, or a bug?
Tested on 0.11.0rc1