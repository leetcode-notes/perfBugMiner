GPU-enabled Mac build of TensorFlow version 0.10.0rc0-py2 was compiled against cuDNN v5

Environment info
Operating System: OS X 'El Capitan' Version 10.11.6 (15G31)
Installed version of CUDA and cuDNN: cuda_7.5.27_mac, cudnn-7.5-osx-x64-v5.0-ga (I explain why I am using cuDNN v5 rather than cuDNN v4 below.)
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
lrwxr-xr-x@ 1 root  wheel    50 Apr 13 02:03 libcublas.7.5.dylib -> /Developer/NVIDIA/CUDA-7.5/lib/libcublas.7.5.dylib
lrwxr-xr-x@ 1 root  wheel    46 Apr 13 02:03 libcublas.dylib -> /Developer/NVIDIA/CUDA-7.5/lib/libcublas.dylib
lrwxr-xr-x@ 1 root  wheel    49 Apr 13 02:03 libcublas_device.a -> /Developer/NVIDIA/CUDA-7.5/lib/libcublas_device.a
lrwxr-xr-x@ 1 root  wheel    49 Apr 13 02:03 libcublas_static.a -> /Developer/NVIDIA/CUDA-7.5/lib/libcublas_static.a
-rwxr-xr-x  2 root  wheel  8280 May 11 04:59 libcuda.1.dylib
-rwxr-xr-x  2 root  wheel  8280 May 11 04:59 libcuda.dylib
lrwxr-xr-x@ 1 root  wheel    45 Apr 13 02:03 libcudadevrt.a -> /Developer/NVIDIA/CUDA-7.5/lib/libcudadevrt.a
lrwxr-xr-x@ 1 root  wheel    50 Apr 13 02:03 libcudart.7.5.dylib -> /Developer/NVIDIA/CUDA-7.5/lib/libcudart.7.5.dylib
lrwxr-xr-x@ 1 root  wheel    46 Apr 13 02:03 libcudart.dylib -> /Developer/NVIDIA/CUDA-7.5/lib/libcudart.dylib
lrwxr-xr-x@ 1 root  wheel    49 Apr 13 02:03 libcudart_static.a -> /Developer/NVIDIA/CUDA-7.5/lib/libcudart_static.a
lrwxr-xr-x  1 root  admin    47 Aug 15 14:24 libcudnn.5.dylib -> /Developer/NVIDIA/CUDA-7.5/lib/libcudnn.5.dylib
lrwxr-xr-x  1 root  admin    45 Aug 15 14:24 libcudnn.dylib -> /Developer/NVIDIA/CUDA-7.5/lib/libcudnn.dylib
lrwxr-xr-x  1 root  admin    48 Aug 15 14:24 libcudnn_static.a -> /Developer/NVIDIA/CUDA-7.5/lib/libcudnn_static.a

libcuda.1.dylib is a hard link to libcuda.dylib per this comment.
If installed from binary pip package, provide:

Which pip package you installed: export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/mac/gpu/tensorflow-0.10.0rc0-py2-none-any.whl
The output from python -c "import tensorflow; print(tensorflow.__version__)": 0.10.0rc0

If installed from source, provide

The commit hash (git rev-parse HEAD)
The output of bazel version

Steps to reproduce


Set up TensorFlow according to the instructions at https://www.tensorflow.org/versions/r0.10/get_started/os_setup.html#prepare_environment_for_mac_os_x
In particular, the page says to install cuDNN v4, which is labeled "cuDNN v4 (Feb 10, 2016), for CUDA 7.0 and later." on the cuDNN Download page.


Test the installation by running:
python -m tensorflow.models.image.mnist.convolutional
You should see:

E tensorflow/stream_executor/cuda/cuda_dnn.cc:354] could not create cudnn handle: CUDNN_STATUS_INTERNAL_ERROR
E tensorflow/stream_executor/cuda/cuda_dnn.cc:321] could not destroy cudnn handle: CUDNN_STATUS_BAD_PARAM



Now run the test under cuda-memcheck:
cuda-memcheck python -m tensorflow.models.image.mnist.convolutional
You should see:

E tensorflow/stream_executor/cuda/cuda_dnn.cc:347] Loaded runtime CuDNN library: 4007 (compatibility version 4000) but source was compiled with 5005 (compatibility version 5000).  If using a binary install, upgrade your CuDNN library to match.  If building from sources, make sure the library loaded at runtime matches a compatible version specified during compile configuration.



What have you tried?
Uninstalling cuDNN v4 and installing cuDNN v5 (labeled "cuDNN v5 (May 12, 2016), for CUDA 7.5" on the cuDNN Download page) fixes the issue.
I think that either TensorFlow should be built with cuDNN v4 or the installation instructions should be corrected to specify that cuDNN v5 should be installed.