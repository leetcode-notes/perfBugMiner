cifar-10-multi-gpu-train code isn't doing synchronization correctly?

Please go to Stack Overflow for help and support:
https://stackoverflow.com/questions/tagged/tensorflow
If you open a GitHub issue, here is our policy:

It must be a bug or a feature request.
The form below must be filled out.
It shouldn't be a TensorBoard issue. Those go here.

Here's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS Sierra 10.12.6
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.3
Python version: 3.5.2
CUDA/cuDNN version:  irrelevant
GPU model and memory: irrelevant
Exact command to reproduce: irrelevant

Describe the problem
Recently I am trying to implement some new synchronization models, and during the research process I came across the cifar-10-multi-gpu-train code. It seems that on this line:
https://github.com/tensorflow/models/blob/master/tutorials/image/cifar10/cifar10_multi_gpu_train.py#L196
The synchronization point only collects gradients from each worker and do averaging. It doesn't provide a synchronization barrier as tf.train.SyncReplicaOptimizer does. In this way there may be some stale gradient exists. E.g on worker_1 it computes to local_step = 104, while on worker_2 it only computes to local_step = 91
Please correct me if I am wrong here.