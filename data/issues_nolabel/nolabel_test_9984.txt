Missing .pb.h Files While Building from Source on Windows using CMake

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Windows 10 Enterprise
TensorFlow installed from (source or binary):
Trying to install from source
TensorFlow version (use command below):
1.1
Bazel version (if compiling from source):
Using cmake to compile from source
CUDA/cuDNN version:
Not using CUDA. Trying to build CPU only version from source
GPU model and memory:
N/A
Exact command to reproduce:
After following the instructions to build TF from source on Windows using cmake as given here, at step 4, I am trying to build tf_tutorials_example_trainer.vcxproj using MS Visual Studio 2015 instead of MSBuild.

Describe the problem
While trying to build tf_tutorials_example_trainer.vcxproj, I get a whole bunch of errors such as "Cannot open include file <some/path/*.pb.h>". After looking at the source code files, it looks like .pb.h files do not exist. However, the corresponding .proto files do exist. For example, I can see "atr_value.proto" under <TF source files/tensorflow/core/framework>, but not "atr_value.pb.h". I think for some reason protobuf is not generating the .pb.h files from .proto
Note: I have also installed the TF executable following instructions given here. It installed correctly. Hence, I have all dependencies installed on my system.
Source code / logs
cmake log:
-- Building for: Visual Studio 14 2015
-- The C compiler identification is MSVC 19.0.24215.1
-- The CXX compiler identification is MSVC 19.0.24215.1
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED
-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED - Failed
-- Found PythonInterp: C:/local/Anaconda3-4.1.1-Windows-x86_64/envs/tensorflow/python.exe (found version "3.5.3")
-- Found PythonLibs: C:/local/Anaconda3-4.1.1-Windows-x86_64/envs/tensorflow/libs/python35.lib (found version "3.5.3")
-- Found SWIG: C:/local/swigwin-3.0.10/swig.exe (found version "3.0.10")
-- Configuring done
-- Generating done
-- Build files have been written to: /tensorflow/contrib/cmake/build