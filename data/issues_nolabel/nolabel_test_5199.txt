tensor.eval() function converts a tensor to a numpy array is very slow.

I am using inception V1 model to predict image. The input needs a 4d array.
This section is read a image and resize to 224 * 224 * 3, then whitening, then convert to 4D tensor

with open(image, 'rb') as f:
image_data = f.read()
image_buffer=tf.image.decode_jpeg(image_data)
resize_image=tf.image.resize_images(image_buffer,[224,224])
unified_image=tf.image.per_image_whitening(resize_image)
image_4dTensor=tf.expand_dims(unified_image, 0)

This section is to input an image and run the session. Since i can't input a 4D tensor but a numpy array into the session, I need convert 4D tensor to 4D array by call tensor.eval(). However i found that this conversion for a 1 * 224 * 224 * 3 tensor is very slow. It needs 0.4-0.6s. The prediction itself only takes less than 0.2s (run through 22 layers for a input 4D array ). So Is there anyway to convert a tensor to a numpy array faster?
with tf.Session() as sess:
stamp1=time.time()
image_array=image_4dTensor.eval()
time_cost=time.time()-stamp1
print (time_cost)