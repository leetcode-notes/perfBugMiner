Bug on specifying GPU to tutorial example minist

I tried to specify GPU ID to run the tutorial example mnist. I change the code to:
with tf.device('/gpu:3â€˜):
    # Generate placeholders for the images and labels.
    images_placeholder, labels_placeholder = placeholder_inputs(
        FLAGS.batch_size)
    # Build a Graph that computes predictions from the inference model.
    logits = mnist.inference(images_placeholder,
                                FLAGS.hidden1,
                                FLAGS.hidden2)
    # Add to the Graph the Ops for loss calculation.
    loss = mnist.loss(logits, labels_placeholder)

    # Add to the Graph the Ops that calculate and apply gradients.
    train_op = mnist.training(loss, FLAGS.learning_rate)

Then it reports error when running:
tensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'global_step': Could not satisfy explicit device specification '/device:GPU:3' because no supported kernel for GPU devices is available
[[Node: global_step = Variablecontainer="", dtype=DT_INT32, shape=[], shared_name="", _device="/device:GPU:3"]]
Caused by op u'global_step', defined at:
File "fully_connected_feed.py", line 232, in 
tf.app.run()
File "/usr/lib/python2.7/site-packages/tensorflow/python/platform/app.py", line 30, in run
sys.exit(main(sys.argv))
File "fully_connected_feed.py", line 228, in main
run_training()
File "fully_connected_feed.py", line 150, in run_training
train_op = mnist.training(loss, FLAGS.learning_rate)
File "/search/guangliang/package/tensorflow/tensorflow/examples/tutorials/mnist/mnist.py", line 125, in training
global_step = tf.Variable(0, name='global_step', trainable=False)
File "/usr/lib/python2.7/site-packages/tensorflow/python/ops/variables.py", line 209, in init
dtype=dtype)
...
Then I fix the line 125 in "mnist.py" with the following code:
with tf.device('/cpu:0'):
global_step = tf.Variable(0, name='global_step', trainable=False)
Then it reports the following error on rerunning:
tensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'gradients/xentropy_mean_grad/Prod': Could not satisfy explicit device specification '/device:GPU:3' because no supported kernel for GPU devices is available
[[Node: gradients/xentropy_mean_grad/Prod = Prod[T=DT_INT32, keep_dims=false, _device="/device:GPU:3"](gradients/xentropy_mean_grad/Shape_2, gradients/xentropy_mean_grad/range_1)]]
Caused by op u'gradients/xentropy_mean_grad/Prod', defined at:
File "fully_connected_feed.py", line 232, in 
tf.app.run()
File "/usr/lib/python2.7/site-packages/tensorflow/python/platform/app.py", line 30, in run
sys.exit(main(sys.argv))
File "fully_connected_feed.py", line 228, in main
run_training()
File "fully_connected_feed.py", line 150, in run_training
train_op = mnist.training(loss, FLAGS.learning_rate)
File "/search/guangliang/package/tensorflow/tensorflow/examples/tutorials/mnist/mnist.py", line 129, in training
train_op = optimizer.minimize(loss, global_step=global_step)
File "/usr/lib/python2.7/site-packages/tensorflow/python/training/optimizer.py", line 190, in minimize
colocate_gradients_with_ops=colocate_gradients_with_ops)
...
Would you please help on this?
Thanks a lot in advance!