CentOS - failed call to cuInit: CUresult(-1)

So, again me - I'm on centOS on a cluster. Have used this hack for bypassing and using a different GLIBC. Now, however, there seems to be some weird issue with Tensorflow not wanting to run my GPU by failing something on the CUDA side.
Some general info:
LSB Version:    :base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch
Distributor ID: CentOS
Description:    CentOS release 6.5 (Final)
Release:        6.5
Codename:       Final
CUDA version: 8.0
CUDNN version: 5.1
Python version: 3.6.0
LD_LIBRARY_PATH=/share/apps/barber/system/lib/:/share/apps/barber/system/lib64/:/opt/gridengine/lib/linux-x64:/opt/openmpi/lib/:/share/apps/barber/cuda/lib64/:/share/apps/barber/cuda/nvvm/lib64/:/share/apps/barber/cuda/extras/CUPTI/lib64:/share/apps/barber/cudnn/lib64/:/share/apps/barber/arrayfire-3/lib/:/share/apps/python-3.6.0-shared/lib/

The actual error I get from my code is (first 2 lines are printed by me):
Running tool: tensorflow
/gpu:0
I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally
I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally
I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally
I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could spe
ed up CPU computations.
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could s
peed up CPU computations.
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could s
peed up CPU computations.
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could spee
d up CPU computations.
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could spe
ed up CPU computations.
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could spee
d up CPU computations.
E tensorflow/stream_executor/cuda/cuda_driver.cc:509] failed call to cuInit: CUresult(-1)
I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:158] retrieving CUDA diagnostic information for host: tesla2.local
I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:165] hostname: tesla2.local
I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] libcuda reported version is: Not found: was unable to find libcuda.so DSO loaded into this program
I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:363] driver version file contents: """NVRM version: NVIDIA UNIX x86_64 Kernel Module  367.48  Sat Sep  3 18:21:08 PD
T 2016
GCC version:  gcc version 4.4.7 20120313 (Red Hat 4.4.7-16) (GCC)
"""
I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:193] kernel reported version is: 367.48.0
Traceback (most recent call last):
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1022, in _do_call
    return fn(*args)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1000, in _run_fn
    self._extend_graph()
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1049, in _extend_graph
    self._session, graph_def.SerializeToString(), status)
  File "/share/apps/python-3.6.0-shared/lib/python3.6/contextlib.py", line 89, in __exit__
    next(self.gen)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device to node 'gradients/ff_1/add_grad/BroadcastGradientArgs': Could not satisfy explicit d
evice specification '/device:GPU:0' because no devices matching that specification are registered in this process; available devices: /job:localhost/replica:0/task:0/cpu:
0
         [[Node: gradients/ff_1/add_grad/BroadcastGradientArgs = BroadcastGradientArgs[T=DT_INT32, _device="/device:GPU:0"](gradients/ff_1/add_grad/Shape, gradients/ff_1/
add_grad/Shape_1)]]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "bench.py", line 23, in <module>
    execute_all(**vars(parser.parse_args()))
  File "/home/abotev/work/python/deep-bench/deep_bench/executor.py", line 40, in execute_all
    wide=w, depth=d, batch=b)
  File "/home/abotev/work/python/deep-bench/deep_bench/executor.py", line 123, in single_experiment
    f(model, device, temp_folder, **kwargs)
  File "/home/abotev/work/python/deep-bench/deep_bench/frameworks/tensorflow/executor.py", line 80, in execute_experiment
    session.run(init)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 767, in run
    run_metadata_ptr)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 965, in _run
    feed_dict_string, options, run_metadata)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1015, in _do_run
    target_list, options, run_metadata)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1035, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device to node 'gradients/ff_1/add_grad/BroadcastGradientArgs': Could not satisfy explicit d
evice specification '/device:GPU:0' because no devices matching that specification are registered in this process; available devices: /job:localhost/replica:0/task:0/cpu:
0
         [[Node: gradients/ff_1/add_grad/BroadcastGradientArgs = BroadcastGradientArgs[T=DT_INT32, _device="/device:GPU:0"](gradients/ff_1/add_grad/Shape, gradients/ff_1/
add_grad/Shape_1)]]

Caused by op 'gradients/ff_1/add_grad/BroadcastGradientArgs', defined at:
  File "bench.py", line 23, in <module>
    execute_all(**vars(parser.parse_args()))
  File "/home/abotev/work/python/deep-bench/deep_bench/executor.py", line 40, in execute_all
    wide=w, depth=d, batch=b)
  File "/home/abotev/work/python/deep-bench/deep_bench/executor.py", line 123, in single_experiment
    f(model, device, temp_folder, **kwargs)
  File "/home/abotev/work/python/deep-bench/deep_bench/frameworks/tensorflow/executor.py", line 75, in execute_experiment
    x_in, y_in, inference, train, cost = build_model(batch)
  File "/home/abotev/work/python/deep-bench/deep_bench/frameworks/tensorflow/ff.py", line 21, in build_ff_net
    train = optimizer.minimize(cost)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 288, in minimize
    grad_loss=grad_loss)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 354, in compute_gradients
    colocate_gradients_with_ops=colocate_gradients_with_ops)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py", line 482, in gradients
    in_grads = grad_fn(op, *out_grads)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/ops/math_grad.py", line 586, in _AddGrad
    rx, ry = gen_array_ops._broadcast_gradient_args(sx, sy)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py", line 411, in _broadcast_gradient_args
    name=name)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py", line 763, in apply_op
    op_def=op_def)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 2395, in create_op
    original_op=self._default_original_op, op_def=op_def)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1264, in __init__
    self._traceback = _extract_stack()

...which was originally created as op 'ff_1/add', defined at:
  File "bench.py", line 23, in <module>
    execute_all(**vars(parser.parse_args()))
[elided 2 identical lines from previous traceback]
  File "/home/abotev/work/python/deep-bench/deep_bench/frameworks/tensorflow/executor.py", line 75, in execute_experiment
    x_in, y_in, inference, train, cost = build_model(batch)
  File "/home/abotev/work/python/deep-bench/deep_bench/frameworks/tensorflow/ff.py", line 14, in build_ff_net
    h = net.dense_layer(h, shape=(arch_specs[i-1], arch_specs[i]), nonlinearity="tanh")
  File "/home/abotev/work/python/deep-bench/deep_bench/frameworks/tensorflow/net.py", line 40, in dense_layer
    return f(tf.matmul(x_in, w) + tf.reshape(b, [1, -1]))
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py", line 884, in binary_op_wrapper
    return func(x, y, name=name)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/ops/gen_math_ops.py", line 73, in add
    result = _op_def_lib.apply_op("Add", x=x, y=y, name=name)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py", line 763, in apply_op
    op_def=op_def)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 2395, in create_op
    original_op=self._default_original_op, op_def=op_def)
  File "/share/apps/barber/system/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1264, in __init__
    self._traceback = _extract_stack()

InvalidArgumentError (see above for traceback): Cannot assign a device to node 'gradients/ff_1/add_grad/BroadcastGradientArgs': Could not satisfy explicit device specific
ation '/device:GPU:0' because no devices matching that specification are registered in this process; available devices: /job:localhost/replica:0/task:0/cpu:0
         [[Node: gradients/ff_1/add_grad/BroadcastGradientArgs = BroadcastGradientArgs[T=DT_INT32, _device="/device:GPU:0"](gradients/ff_1/add_grad/Shape, gradients/ff_1/
add_grad/Shape_1)]]

One thing slightly suspicious is that it is picking up the default GCC (4.4) rather than the local user one (4.9), however I don't see how this relates to CUDA.
However, the second error about libcuda version not found has been reported before in #4267, while a similar issue seems to be #2882. At this stage, there is not much I can really say why this is happening.
Also for reference, both Theano and Pytorch worked out of the box, no errors, no complaints directly linking to both CUDA and CuDNN, so this is not a CUDA installation issue. Potentially the fact I use a separate GLIBC might be an issue, but again I don't see why myself.
PS: This potentially could be some problem of the alternative GLIBC not detecting the GPUs, which to be more general than tensorflow, but I will need to talk with the system admin.