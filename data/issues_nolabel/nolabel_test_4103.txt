Build failure while following TensorFlow from source following TF documentation

Problem
TensorFlow build  of the pip package with CUDA support using the following command, taken from the TensorFlow documentation, fails:
bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package
Error message
/usr/include/string.h: In function 'void* __mempcpy_inline(void*, const void*, size_t)':
/usr/include/string.h:652:42: error: 'memcpy' was not declared in this scope
   return (char *) memcpy (__dest, __src, __n) + __n;
                                          ^
ERROR: /home/marek/src/tensorflow/tensorflow/contrib/rnn/BUILD:63:1: output 'tensorflow/contrib/rnn/_objs/python/ops/_gru_ops_gpu/tensorflow/contrib/rnn/kernels/gru_ops_gpu.cu.pic.o' was not created.
ERROR: /home/marek/src/tensorflow/tensorflow/contrib/rnn/BUILD:63:1: not all outputs were created.
Target //tensorflow/tools/pip_package:build_pip_package failed to build

Environment

OS: Ubuntu 16.04 (64-bit)
CUDA 8.0
GCC 4.9.3
Java 1.8 (r101_b13)
Python 2.7.12 (Anaconda 4.1.1)
Bazel 0.3.1

Related problems for CUDA-based frameworks reported on StackOverflow and Github
#1346
torch/torch7#670
BVLC/caffe#4046
opencv/opencv#6500
Solutions tried (none of them worked)

downgrading to CUDA 7.5 and CUDNN 4
changing downgrading and upgrading GCC away from 4.9.3
changing GCC and cmake options to include -D_FORCE_INLINES flag (see related Github issues above)

Solution that worked
Build succeeds when the -c opt option is removed from the Bazel build command. That is, the final command should be
bazel build --config=cuda //tensorflow/tools/pip_package:build_pip_package