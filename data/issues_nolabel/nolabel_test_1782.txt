Why doesn't TensorBoard order objects according to information flow?

I would infer that TensorBoard orders objects according to how information flows through the graph, but this doesn't appear to be the case. Namely, considering Inception-v3. The operation makes it clear that, in each conv unit, batch normalization is performed on the output of the convolution layer:
conv = tf.nn.conv2d(inputs, weights, [1, stride, stride, 1],
                    padding=padding)
if batch_norm_params is not None:
  with scopes.arg_scope([batch_norm], is_training=is_training,
                        trainable=trainable, restore=restore):
    outputs = batch_norm(conv, **batch_norm_params)

i.e., outputs is batch_norm(conv(inputs, ...), ...)
However, the TensorBoard representation of the graph orders batch_norm before the conv operation.

Granted, these don't appear to be connected by a line. However, it does order the convolutions correctly:

Is this due to the fact that these nodes are disconnected "given" Identity... and are thereby ordered alphabetically? Is there a way to disable this, and have it structure the graph according to the flow of information? Presumably it can disambiguate between the various Identity... nodes. Or am I interpreting this situation wrong?