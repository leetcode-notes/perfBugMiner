Feature: MonitoredSession should have run() method with 'hooks_to_trigger' argument: run(..., hooks_to_trigger=[hooks[1], hooks[3], ...])

At the moment the session_run_hooks are passed to the constructor of MonitoredSession(..., hooks=[...])
and then they get executed for EVERY session.run() call within the MonitoredSession block.
This is inefficient and problematic.
E.g., if I define a LoggingTensorHook, I want the logging output to be evaluated and printed at most ONCE per global step and not after some auxiliary session.run() calls that only evaluate the size of some queue or whatever else.
If you use feedable iterators, the current MonitoredSession implementation actually crashes the program, see #12859 (comment)
The best solution in my opinion would be, to be able to specify which run() calls should actually trigger the before_run and after_run methods of the hooks, e.g. via some flag-argument in MonitoredSession.run(..., execute_hooks=True)
or alternatively pass a list of specific hooks whose before_run and after_run methods should be triggered by a run call, via MonitoredSession.run(..., hooks_to_trigger=[...])