bazel build failing - not generating bazel-bin directory when  build from source with CUDA 8.0 error

NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.
For general support from the community, see StackOverflow.
To make bugs and feature requests more easy to find and organize, we close issues that are deemed
out of scope for GitHub Issues and point people to StackOverflow.
For bugs or installation issues, please provide the following information.
The more information you provide, the more easily we will be able to offer
help and advice.
What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?
http://stackoverflow.com/questions/38773402/tensorflow-bazel-build-failing-not-generating-bazel-bin-directory
#1498
Environment info
Operating System:
ozzie@debian:~$ uname -a
Linux debian 3.16.0-4-amd64 #1 SMP Debian 3.16.7-ckt25-2 (2016-04-08) x86_64 GNU/Linux
Installed version of CUDA and cuDNN:
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
ozzie@debian:~$ ls /usr/local/cuda-8.0/lib64/libcud*
/usr/local/cuda-8.0/lib64/libcudadevrt.a
/usr/local/cuda-8.0/lib64/libcudart.so
/usr/local/cuda-8.0/lib64/libcudart.so.7.5
/usr/local/cuda-8.0/lib64/libcudart.so.8.0
/usr/local/cuda-8.0/lib64/libcudart.so.8.0.27
/usr/local/cuda-8.0/lib64/libcudart_static.a
/usr/local/cuda-8.0/lib64/libcudnn.so
/usr/local/cuda-8.0/lib64/libcudnn.so.4
/usr/local/cuda-8.0/lib64/libcudnn.so.4.0.7
/usr/local/cuda-8.0/lib64/libcudnn.so.5
/usr/local/cuda-8.0/lib64/libcudnn.so.5.1.5
/usr/local/cuda-8.0/lib64/libcudnn_static.a
(note: libcudart.so.7.5 is a link of libcudart.so.8.0)
Using Nvidia Quadro K4000 when I run
If installed from binary pip package, provide:

A link to the pip package you installed:
The output from python -c "import tensorflow; print(tensorflow.__version__)".

If installed from source, provide

The commit hash (git rev-parse HEAD)
ozzie@debian:~/working/work/ML/tensorflow$ git rev-parse HEAD
2a6d751
The output of bazel version

ozzie@debian:~/working/work/ML/tensorflow$ bazel version
Build label: 0.3.1-jdk7
Build target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar
Build time: Fri Jul 29 09:07:03 2016 (1469783223)
Build timestamp: 1469783223
Build timestamp as int: 1469783223
If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)
ozzie@debian:~/working/work/ML/tensorflow$ bazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer
What other attempted solutions have you tried?
try to modify GPU architecture to compute_30 (Nvidia Quadro K4000 code),  but can not sure which file contain this GPU architecture info?
Logs or other output that would be helpful
(If logs are large, please upload as attachment or provide link).
'/usr/local/cuda-8.0/include/curand_discrete2.h'.
nvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.
nvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.
Target //tensorflow/cc:tutorials_example_trainer failed to build
Use --verbose_failures to see the command lines of failed build steps.
INFO: Elapsed time: 22.435s, Critical Path: 21.92s