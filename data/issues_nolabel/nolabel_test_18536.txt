DNNRegressor.predict issue

I have trained a Deep Neural Network Regressor on some weather data. When I tried classifier.predict(), it return a generator object. Usually what we do is to put list() over the object to get the prediction. But it is not working.
I was unable to get the my code to turn into it's code form with the `` symbol by the way. So bare with me.
import numpy as np
import time
import itertools
from onehotencode import load_single_data
from onehotencode import training_week_data,training_week_price,
testing_week_data,testing_week_price,uber_price
import tensorflow as tf
feature_columns = [tf.feature_column.numeric_column("x", shape=[163])]
classifier = tf.estimator.DNNRegressor(feature_columns=feature_columns,
hidden_units=[200, 175, 150, 125, 100, 75, 50, 25, 17, 10, 8, 5, 3],
model_dir='great_model/'
)
onehot,price=load_single_data([[5,18,16,1],'Mostly Sunny','Mostly Sunny',46.5])
my_input_fn = tf.estimator.inputs.numpy_input_fn(
x={"x": np.array(onehot)},
y=None,
num_epochs=None,
shuffle=False)
y = classifier.predict(input_fn=my_input_fn)
#This line produced the error
print(list(y))
The error produced is :
ValueError: Dimension size must be evenly divisible by 163 but is 128 for 'dnn/input_from_feature_columns/input_layer/x/Reshape' (op: 'Reshape') with input shapes: [128,1], [2] and with input tensors computed as partial shapes: input[1] = [?,163].