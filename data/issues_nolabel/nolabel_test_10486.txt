[BUG] control_dependencies + sess.run(tf.global_variables_initializer())

System information

OS Platform and Distribution: Linux Ubuntu 16.04 and mac osx
TensorFlow installed from (source or binary): pip install tensorflow
TensorFlow version (use command below): v1.1.0-rc0-61-g1ec6ed5 and 1.1.0

Hi TF team, I've stumbled upon a strange behaviour that I believe is a bug:
If I try to run the code below i end up with : FailedPreconditionError (see above for traceback): Attempting to use uninitialized value timestep [[Node: AssignAdd = AssignAdd[T=DT_INT32, _class=["loc:@timestep"], use_locking=false, _device="/job:localhost/replica:0/task:0/cpu:0"](timestep, AssignAdd/value)]]
If I remove the tf.zeros_like(Qs_t) statement (as in the commented line), the problem disappears.
import tensorflow as tf

with tf.Graph().as_default():
    Qs_t = tf.ones([3, 2], dtype=tf.float32)
    timestep = tf.Variable(0, dtype=tf.int32, trainable=False, name="timestep")
    inc_t = tf.assign_add(timestep, 1)
    with tf.control_dependencies([inc_t]):
        Ns_t = tf.Variable(tf.zeros_like(Qs_t), dtype=tf.float32, name="N", trainable=False)
        # Ns_t = tf.Variable(0., dtype=tf.float32, name="N", trainable=False)

    with tf.Session() as sess:
        sess.run(tf.global_variables_initializer())