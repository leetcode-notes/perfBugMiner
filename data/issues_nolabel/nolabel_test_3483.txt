Slicing error: Using a `tf.Tensor` as a Python `bool` is not allowed

Environment info
Operating System:
MacOSX, Python3, tensorflow version '0.9.0'
Steps to reproduce

I am trying to slice a tensor (I want to remove boundaries for purpose of error evaluation)

# vector_loss  = tf.Variable(...)
pad = 8
width = tf.shape(vector_loss,)[2]
vector_loss = vector_loss[:,:,pad:width-pad, :]

Logs or other output that would be helpful
(If logs are large, please upload as attachment).
Traceback (most recent call last):
  File "./footprint_poisson.py", line 445, in <module>
    epochs=50)
  File "./footprint_poisson.py", line 263, in fit
    tot_loss = self._create_loss()
  File "./footprint_poisson.py", line 220, in _create_loss
    poisson_loss_ = poisson_loss(self.vars.y, self.vars.y_predicted, pad = 8)
  File "./footprint_poisson.py", line 28, in poisson_loss
    vector_loss = vector_loss[:,:,pad:width-pad, :]
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/ops/array_ops.py", line 176, in _SliceHelper
    if s.stop is not None and s.stop < 0:
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 515, in __bool__
    raise TypeError("Using a `tf.Tensor` as a Python `bool` is not allowed. "
TypeError: Using a `tf.Tensor` as a Python `bool` is not allowed. Use `if t is not None:` instead of `if t:` to test if a tensor is defined, and use the logical TensorFlow ops to test the value of a tensor.