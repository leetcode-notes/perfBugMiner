Can't place tf.nn.moments() on GPU when first dimension is None

At first this sounds like #2508, but this was closed and apparently fixed and the error message is also different. So it might be more related to #139, and possibly to the comment of @mrry on tf.mean on GPUs. The example below works with cpu device context (or no explicit device placement at all). Is this a missing feature or should one not expect that this is fixable?
Environment info
Operating System:
Ubuntu 15.10
Installed version of CUDA and cuDNN:
CUDA7.5/cuDNN4.0.4
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
-rw-r--r-- 1 root root 189170 Jan  1 23:25 /usr/local/cuda/lib/libcudadevrt.a
lrwxrwxrwx 1 root root     16 Jan  1 23:25 /usr/local/cuda/lib/libcudart.so -> libcudart.so.7.5
lrwxrwxrwx 1 root root     19 Jan  1 23:25 /usr/local/cuda/lib/libcudart.so.7.5 -> libcudart.so.7.5.18
-rwxr-xr-x 1 root root 311596 Jan  1 23:25 /usr/local/cuda/lib/libcudart.so.7.5.18
-rw-r--r-- 1 root root 558020 Jan  1 23:25 /usr/local/cuda/lib/libcudart_static.a

If installed from sources, provide the commit hash: fc91629
Steps to reproduce
import tensorflow as tf
import numpy as np

with tf.device("/gpu:0"):
    x = tf.placeholder(tf.float32, shape=[None, 5])
    mean, var = tf.nn.moments(x, axes=[0])
sess = tf.Session()
sess.run([mean, var], feed_dict={x:np.random.randn(10, 5)})

results in
E tensorflow/core/client/tensor_c_api.cc:485] Cannot assign a device to node 'moments/sufficient_statistics/SparseToDense': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.
     [[Node: moments/sufficient_statistics/SparseToDense = SparseToDense[T=DT_BOOL, Tindices=DT_INT32, validate_indices=true, _device="/device:GPU:0"](moments/sufficient_statistics/SparseToDense/sparse_indices, moments/sufficient_statistics/Shape_1, moments/sufficient_statistics/SparseToDense/sparse_values, moments/sufficient_statistics/SparseToDense/default_value)]]

What have you tried?

Setting shape=[10, 5] fixes the above problem (to be expected).
Setting device context to with tf.device("/cpu:0"): works with None shape info, too.