[bug] tensorflow/models/image/mnist/convolutional.py doesn't converge with CUDA7.5+cuDNN4

Environment info
Operating System: Ubuntu 14.04 64bit
Actually it is a docker env
nvidia/cuda:7.5-cudnn4-devel
Installed version of CUDA and cuDNN: CUDA7.5 and cuDNN4
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
# ls -l /usr/lib/x86_64-linux-gnu/libcud* 
lrwxrwxrwx 1 root root       29 Aug 12 05:12 /usr/lib/x86_64-linux-gnu/libcudnn.so -> /etc/alternatives/libcudnn_so
lrwxrwxrwx 1 root root       17 Feb  9  2016 /usr/lib/x86_64-linux-gnu/libcudnn.so.4 -> libcudnn.so.4.0.7
-rw-r--r-- 1 root root 61453024 Feb  9  2016 /usr/lib/x86_64-linux-gnu/libcudnn.so.4.0.7
lrwxrwxrwx 1 root root       32 Aug 12 05:12 /usr/lib/x86_64-linux-gnu/libcudnn_static.a -> /etc/alternatives/libcudnn_stlib
-rw-r--r-- 1 root root 62025862 Feb  9  2016 /usr/lib/x86_64-linux-gnu/libcudnn_static_v4.a
# ls -la /usr/local/nvidia/lib64/libcud*   
lrwxrwxrwx 1  999  998      17 Aug 16 13:46 /usr/local/nvidia/lib64/libcuda.so -> libcuda.so.367.35
lrwxrwxrwx 1  999  998      17 Aug 16 13:46 /usr/local/nvidia/lib64/libcuda.so.1 -> libcuda.so.367.35
-rw-r--r-- 2 root root 8121032 Jul 12 05:51 /usr/local/nvidia/lib64/libcuda.so.367.35
If installed from binary pip package, provide:

Which pip package you installed.

Ubuntu/Linux 64-bit, GPU enabled, Python 2.7
Requires CUDA toolkit 7.5 and CuDNN v4. For other versions, see "Install from sources" below.
$ export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl

The output from python -c "import tensorflow; print(tensorflow.__version__)".

# python -c "import tensorflow; print(tensorflow.__version__)"
I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally
0.10.0rc0
Steps to reproduce

run docker
docker run -it nvidia/cuda:7.5-cudnn4-devel
install tensorflow as described in the doc using pip
run the example, and it does not converge, logs are pasted in the end
python /usr/local/lib/python2.7/dist-packages/tensorflow/models/image/mnist/convolution.py

What have you tried?

Install and use the CPU version
The mnist example converges well

Logs or other output that would be helpful
# python /usr/local/lib/python2.7/dist-packages/tensorflow/models/image/mnist/convolutional.py
I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally
Extracting data/train-images-idx3-ubyte.gz
Extracting data/train-labels-idx1-ubyte.gz
Extracting data/t10k-images-idx3-ubyte.gz
Extracting data/t10k-labels-idx1-ubyte.gz
I tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: 
name: GeForce GTX 1080
major: 6 minor: 1 memoryClockRate (GHz) 1.8225
pciBusID 0000:01:00.0
Total memory: 7.92GiB
Free memory: 7.17GiB
I tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:839] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)
Initialized!
Step 0 (epoch 0.00), 184.2 ms
Minibatch loss: 12.054, learning rate: 0.010000
Minibatch error: 90.6%
Validation error: 90.2%
Step 100 (epoch 0.12), 4.6 ms
Minibatch loss: 5.381, learning rate: 0.010000
Minibatch error: 85.9%
Validation error: 88.7%
Step 200 (epoch 0.23), 4.1 ms
Minibatch loss: 5.389, learning rate: 0.010000
Minibatch error: 89.1%
Validation error: 88.7%
Step 300 (epoch 0.35), 4.2 ms
Minibatch loss: 5.360, learning rate: 0.010000
Minibatch error: 93.8%
Validation error: 88.7%
Step 400 (epoch 0.47), 4.2 ms
Minibatch loss: 5.287, learning rate: 0.010000
Minibatch error: 85.9%
Validation error: 88.7%
Step 500 (epoch 0.58), 4.1 ms
Minibatch loss: 5.267, learning rate: 0.010000
Minibatch error: 85.9%
Validation error: 88.7%

... ... (too long so deleted)

Step 8000 (epoch 9.31), 4.6 ms
Minibatch loss: 3.924, learning rate: 0.006302
Minibatch error: 89.1%
Validation error: 88.7%
Step 8100 (epoch 9.43), 4.9 ms
Minibatch loss: 3.925, learning rate: 0.006302
Minibatch error: 93.8%
Validation error: 88.7%
Step 8200 (epoch 9.54), 5.0 ms
Minibatch loss: 3.898, learning rate: 0.006302
Minibatch error: 82.8%
Validation error: 88.7%
Step 8300 (epoch 9.66), 4.6 ms
Minibatch loss: 3.882, learning rate: 0.006302
Minibatch error: 81.2%
Validation error: 88.7%
Step 8400 (epoch 9.77), 4.9 ms
Minibatch loss: 3.881, learning rate: 0.006302
Minibatch error: 85.9%
Validation error: 88.7%
Step 8500 (epoch 9.89), 4.7 ms
Minibatch loss: 3.877, learning rate: 0.006302
Minibatch error: 87.5%
Validation error: 88.7%
Test error: 88.7%