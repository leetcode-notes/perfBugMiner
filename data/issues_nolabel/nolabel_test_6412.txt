contrib\cmake: configure step errors

Config & commands used: https://gist.github.com/derofim/b4f150da1269b81af8d12744df730708
cmake .. -A x64 -DCMAKE_BUILD_TYPE=Release -DSWIG_EXECUTABLE="D:/Tensorflow/swigwin-3.0.10/swig.exe" -DPYTHON_EXECUTABLE="C:/Program Files/Anaconda3/python.exe" -DPYTHON_LIBRARIES="C:/Program Files/Anaconda3/libs/python35.lib" -Dtensorflow_ENABLE_GPU=ON -DCUDNN_HOME="D:\Tensorflow\cudnn\cuda" -Dtensorflow_BUILD_CC_EXAMPLE=ON
Errors:
CMake Error: CMake can not determine linker language for target: tf_losses
CMake Error: CMake can not determine linker language for target: tf_models_word2vec_ops
CMake Error: CMake can not determine linker language for target: tf_models_word2vec_kernels
Full log:
D:\Tensorflow\tensorflow-master\tensorflow\contrib\cmake\build>cmake .. -A x64 -DCMAKE_BUILD_TYPE=Release -DSWIG_EXECUTABLE="D:/Tensorflow/swigwin-3.0.10/swig.exe" -DPYTHON_EXECUTABLE="C:/Program Files/Anaconda3/python.exe" -DPYTHON_LIBRARIES="C:/Program Files/Anaconda3/libs/python35.lib" -Dtensorflow_ENABLE_GPU=ON -DCUDNN_HOME="D:\Tensorflow\cudnn\cuda" -Dtensorflow_BUILD_CC_EXAMPLE=ON -- Building for: Visual Studio 14 2015 -- The C compiler identification is MSVC 19.0.24215.1 -- The CXX compiler identification is MSVC 19.0.24215.1 -- Check for working C compiler: D:/Soft/MicrosoftVisualStudio14/VC/bin/x86_amd64/cl.exe -- Check for working C compiler: D:/Soft/MicrosoftVisualStudio14/VC/bin/x86_amd64/cl.exe -- works -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working CXX compiler: D:/Soft/MicrosoftVisualStudio14/VC/bin/x86_amd64/cl.exe -- Check for working CXX compiler: D:/Soft/MicrosoftVisualStudio14/VC/bin/x86_amd64/cl.exe -- works -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Detecting CXX compile features -- Detecting CXX compile features - done -- Found CUDA: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0 (found suitable version "8.0", minimum required is "8.0") You have called ADD_LIBRARY for library tf_models_word2vec_ops without any source files. This typically indicates a problem with your CMakeLists.txt file You have called ADD_LIBRARY for library tf_models_word2vec_kernels without any source files. This typically indicates a problem with your CMakeLists.txt file You have called ADD_LIBRARY for library tf_losses without any source files. This typically indicates a problem with your CMakeLists.txt file -- Found PythonInterp: C:/Program Files/Anaconda3/python.exe (found version "3.5.2") -- Found PythonLibs: C:/Program Files/Anaconda3/libs/python35.lib (found version "3.5.2") -- Found SWIG: D:/Tensorflow/swigwin-3.0.10/swig.exe (found version "3.0.10") -- Configuring done CMake Error: CMake can not determine linker language for target: tf_losses CMake Error: CMake can not determine linker language for target: tf_models_word2vec_ops CMake Error: CMake can not determine linker language for target: tf_models_word2vec_kernels -- Generating done -- Build files have been written to: D:/Tensorflow/tensorflow-master/tensorflow/contrib/cmake/build
P.S.
For now im ignoring build errors and tf_label_image_example works fine! (But cannot link in side project #6382)
Workaround im using:
For now tf_label_image_example works fine in generated .sln!

To stop rebuilding whole tensorflow each time i used workaround
"Configuration Manager". Un-check the "Build" for all except tf_label_image_example as in http://stackoverflow.com/a/1433680

Also in contrib\cmake\build i created folders tensorflow/examples/label_image/data/ and placed in it:
grace_hopper.jpg
imagenet_comp_graph_label_strings.txt
tensorflow_inception_graph.pb

Data may be found at https://storage.googleapis.com/download.tensorflow.org/models/inception_dec_2015.zip in tutorial https://www.tensorflow.org/how_tos/tool_developers/