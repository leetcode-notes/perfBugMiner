compilation errors due to missing op classes when using selective registration (cmake windows build)

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
NO.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Windows 7
TensorFlow installed from (source or binary):
From source
TensorFlow version (use command below):
commit 280374
Bazel version (if compiling from source):
n/a, using cmake build
CUDA/cuDNN version:
n/a
GPU model and memory:
n/a
Exact command to reproduce:

cmake .. -A x64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INCLUDE_CURRENT_DIR:BOOL=ON -DCMAKE_CXX_FLAGS=-DSELECTIVE_REGISTRATION -Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX -Dtensorflow_BUILD_PYTHON_BINDINGS:BOOL=OFF -Dtensorflow_BUILD_CONTRIB_KERNELS:BOOL=OFF -Dtensorflow_BUILD_SHARED_LIB:BOOL=ON
MSBuild /p:Configuration=Release tensorflow.vcxproj
Describe the problem
I'm building with cmake on Windows, using selective registration.  I've put ops_to_register.h in my build dir and specified -DCMAKE_INCLUDE_CURRENT_DIR=ON in my cmake command so that it would be added to the include path.
Due (I'm assuming) to selective registration, the generated code omits many classes which would otherwise be generated in a full build.
When compiling non-generated code, e.g. tensorflow\cc\gradients\array_grad.cc, there are compile errors wherever it references the classes that were not generated due to selective registration, for example:
array_grad.cc(51): error C2653: 'Unstack': is not a class or namespace name [...omitted...\tensorflow\tensorflow\contrib\cmake\build\tf_cc.vcxproj]
There are many of these errors for various referenced classes, in various other source files such as:
tensorflow\cc\gradients\math_grad.cc
tensorflow\cc\gradients\nn_grad.cc
tensorflow\cc\framework\gradients.cc
When using selective registration, what's the right approach to avoid these errors?