Dropout in skflow has a problem when save & restore the model because the graph collection is not loaded.

▶ Operating System:
ubunutu 14.04 LTS
▶ Installed version of CUDA and cuDNN:
CUDA 7.5.18 / cuDNN 7.0(v4)
NVIDIA-SMI 352.39     Driver Version: 352.39
GeForce GTX TITAN X
▶ I installed tensorflow with next command line. And that is a link of tensorflow Github, 'Linux GPU, python 2' whl file.
sudo pip install --upgrade http://ci.tensorflow.org/view/Nightly/job/nigntly-matrix-linux-gpu/TF_BUILD_CONTAINER_TYPE=GPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=gpu-working/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-0.8.0-cp27-none-linux_x86_64.whl
▶ TensorFlow version: 0.8.0
(outputs of python -c "import tensorflow; print(tensorflow.version)" )

Steps to reproduce

Save and Restore a tfmodel modifying [tensorflow/tensorflow/examples/skflow/mnist.py]

And see the accuracy is not deterministic but stochastic after restored.


What have you tried?
When I try to predict MNIST data after save() and restore() the 'tfmodel' with skflow function, the dropout shows stochastic outcomes. And when I remove the dropout, there is no stochasticity.

I guess when the model has been restored, the collections of a graph about DROPOUT are may not properly loaded. So some codes on

▶ feed_dict = {prob: 1.0 for prob in dropouts}
the function of "_predict()" at [tensorflow/contrib/learn/python/learn/estimators/base.py] may dont' work.
If you run following code after restore tfmodel, then you will see that there is no 'droputs' key.
▶ print (classifier._graph.get_all_collection_keys())