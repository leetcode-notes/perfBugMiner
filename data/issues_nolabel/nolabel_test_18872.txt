Feature Request: More Granular Dependencies for Official Binaries

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): N/A
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): N/A
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): N/A
Python version:  N/A
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A
Exact command to reproduce: N/A

Describe the problem
(Note: This issue is related to #16046, but I feel that it's different enough to warrant a separate request, rather than resurrecting that one. Also, this question's wording is biased towards Linux, but the spirit of it may be useful for other systems as well.)
TensorFlow currently specifies its system requirements at the level of an operating system and CPU architecture (for example, the docs currently state that Ubuntu 16.04 x86_64 is the supported Linux variant). This is certainly helpful, but, when incorporating TensorFlow into larger projects with their own lists of dependencies, I feel that it may be useful to additionally have somewhere that provides a clear description of the dynamic library requirements for the official releases. For example, glibc version requirements have burned a number of developers (a quick search shows #14208 and #15376). Currently, the only reliable way (to my knowledge) to determine the required versions of glibc and friends for a given TensorFlow release is to run ldd -v on it (the following are run on TensorFlow 1.5.0, which is what I happen to have installed on this machine):
(venv) belph@alpha ~/venv $ ldd -v \
    lib/python3.5/site-packages/tensorflow/libtensorflow_framework.so \
    | grep -oP '\([A-Z][A-Z0-9._]+\)' \
    | sort -V \
    | uniq
(CXXABI_1.3)
(CXXABI_1.3.5)
(CXXABI_1.3.7)
(GCC_3.0)
(GCC_3.3)
(GCC_4.2.0)
(GLIBCXX_3.4)
(GLIBCXX_3.4.9)
(GLIBCXX_3.4.11)
(GLIBCXX_3.4.14)
(GLIBCXX_3.4.17)
(GLIBCXX_3.4.18)
(GLIBCXX_3.4.19)
(GLIBC_2.2.5)
(GLIBC_2.3)
(GLIBC_2.3.2)
(GLIBC_2.3.4)
(GLIBC_2.4)
(GLIBC_2.6)
(GLIBC_2.7)
(GLIBC_2.11)
(GLIBC_2.14)
(GLIBC_2.16)
(GLIBC_2.17)
(GLIBC_2.18)
(GLIBC_PRIVATE)
(here's a fancier command to get the latest version required, in case anyone is interested)
(venv) belph@alpha ~/venv $ ldd -v \
    lib/python3.5/site-packages/tensorflow/libtensorflow_framework.so \
    | grep -oP '[A-Z][A-Z0-9.]*_[0-9.]+(?=\) =>)' \
    | sort -V \
    | uniq \
    | tr '_' ' ' \
    | awk '{ reqs[$1] = $2 } END { for (lib in reqs) { print lib,reqs[lib] } }'
GLIBCXX 3.4.19
CXXABI 1.3.7
GLIBC 2.18
GCC 4.2.0
I have noticed the Tested Source Configurations list on the documentation; these very well may be the machines which compile the binaries, but they do not specify which version of glibc is installed. Additionally, glibc version 2.19 is specified in a toolchain, but it is unclear whether this is actually used when compiling the official distributions (or I just missed it).
Would it be possible to specify what versions of shared libraries are required to be installed, or, at a minimum, some more detailed information about the system each binary is compiled on? The latter may be specified somewhere already, but I have not been able to find it. I'm not necessarily asking for a library requirement list that TensorFlow commits to maintain compatibility with across releases; instead, I just think it would be useful to be able to have a go-to place to answer the question of "what version of glibc do I need to run the official TensorFlow 1.5 build?" Anything would be helpful!
Thank you! Apologies if anything I've said is unclear; I'll be happy to clarify.
Source code / logs
N/A