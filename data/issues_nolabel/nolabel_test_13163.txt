Resolved: No GPU kernel for tf.tile with int32 or int64 tensors

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Linux Ubuntu 14.04
TensorFlow installed from (source or binary):
binary (pip)
TensorFlow version (use command below):
v1.3.0-rc2-20-g0787eee 1.3.0
Python version:
Python 3.5.2
Bazel version (if compiling from source):
n/a
CUDA/cuDNN version:
CUDA-8.0 / cuDNN-5.1
GPU model and memory:
NVidia GeForce GTX TITAN with 5.93GiB
Exact command to reproduce:

import tensorflow as tf
import numpy as np

key_num = 5
key_dim = 2

with tf.device("/gpu:0"):
    keys = tf.tile(tf.expand_dims(tf.range(key_num, dtype=tf.int32), 1), [1, key_dim])

    sess = tf.Session()
    sess.run(tf.global_variables_initializer())

    print(sess.run(keys))

Describe the problem
tf.tile doesn't support tf.int32 or tf.int64 tensors on GPU.
Source code / logs
2017-09-19 22:23:42.175225: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.
2017-09-19 22:23:42.175316: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.
2017-09-19 22:23:42.380410: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2017-09-19 22:23:42.380904: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties:
name: GeForce GTX TITAN
major: 3 minor: 5 memoryClockRate (GHz) 0.8755
pciBusID 0000:04:00.0
Total memory: 5.93GiB
Free memory: 5.59GiB
2017-09-19 22:23:42.380985: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0
2017-09-19 22:23:42.380997: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y
2017-09-19 22:23:42.381014: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN, pci bus id: 0000:04:00.0)
Traceback (most recent call last):
  File "/home/daniyar/anaconda2/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1327, in _do_call
    return fn(*args)
  File "/home/daniyar/anaconda2/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1297, in _run_fn
    self._extend_graph()
  File "/home/daniyar/anaconda2/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1358, in _extend_graph
    self._session, graph_def.SerializeToString(), status)
  File "/home/daniyar/anaconda2/envs/python3/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/daniyar/anaconda2/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 466, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device for operation 'Tile': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.
	 [[Node: Tile = Tile[T=DT_INT32, Tmultiples=DT_INT32, _device="/device:GPU:0"](ExpandDims, Tile/multiples)]]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "bug.py", line 11, in <module>
    sess.run(tf.global_variables_initializer())
  File "/home/daniyar/anaconda2/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 895, in run
    run_metadata_ptr)
  File "/home/daniyar/anaconda2/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1124, in _run
    feed_dict_tensor, options, run_metadata)
  File "/home/daniyar/anaconda2/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1321, in _do_run
    options, run_metadata)
  File "/home/daniyar/anaconda2/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1340, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device for operation 'Tile': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.
	 [[Node: Tile = Tile[T=DT_INT32, Tmultiples=DT_INT32, _device="/device:GPU:0"](ExpandDims, Tile/multiples)]]

Caused by op 'Tile', defined at:
  File "bug.py", line 8, in <module>
    keys = tf.tile(tf.expand_dims(tf.range(key_num, dtype=tf.int32), 1), [1, key_dim])
  File "/home/daniyar/anaconda2/envs/python3/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py", line 3847, in tile
    name=name)
  File "/home/daniyar/anaconda2/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py", line 767, in apply_op
    op_def=op_def)
  File "/home/daniyar/anaconda2/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 2630, in create_op
    original_op=self._default_original_op, op_def=op_def)
  File "/home/daniyar/anaconda2/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 1204, in __init__
    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access

InvalidArgumentError (see above for traceback): Cannot assign a device for operation 'Tile': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.
	 [[Node: Tile = Tile[T=DT_INT32, Tmultiples=DT_INT32, _device="/device:GPU:0"](ExpandDims, Tile/multiples)]]