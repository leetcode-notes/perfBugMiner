float64 support for conv1d and conv2d

This is a feature request for float64 support with nn.conv1d, nn.conv2d, and nn.convolution. Also, conv1d does not correctly document which types it supports. See below for details.
conv1d (which seems to be a wrapper for conv2d) and conv2d throw a TypeError when passed float64 tensors. (I have only tested using a CPU; I don't have GPU access.) This occurs despite the fact that the documentation for conv1d claims support for float64. It is also worth mentioning that (at least on my CPU), conv1d seems to support float16 even though this isn't mentioned in the documentation.
conv3d does however seem to support float64. Fortunately, this can at least be used as a temporary workaround to obtain float64 support for 1d and 2d convolutions.



Command
float16
float32
float64




conv1d
works, but undocumented
works
TypeError, despite documentation


conv2d
works
works
TypeError


conv3d
TypeError
works
works

The above table summarizes the (rather inconsistent) current state of tensorflow's support for various types according to my tests on a CPU using the code below. convolution appears to be a wrapper for conv1d, conv2d, and conv3d, and thus fails on the same types for each dimension.
import tensorflow as tf
# t = tf.float16
# t = tf.float32
t = tf.float64
b, fw1, fw2, fw3, ic, oc, iw1, iw2, iw3 = range(2,11)
tf.nn.conv1d(tf.zeros([b, iw1, ic], t), tf.zeros([fw1, ic, oc], t), 1, "VALID")
tf.nn.conv2d(tf.zeros([b, iw1, iw2, ic], t), tf.zeros([fw1, fw2, ic, oc], t), [1]*4, "VALID")
tf.nn.conv3d(tf.zeros([b, iw1, iw2, iw3, ic], t), tf.zeros([fw1, fw2, fw3, ic, oc], t), [1]*5, "VALID")
tf.nn.convolution(tf.zeros([b, iw1, ic], t), tf.zeros([fw1, ic, oc], t), "VALID")
tf.nn.convolution(tf.zeros([b, iw1, iw2, ic], t), tf.zeros([fw1, fw2, ic, oc], t), "VALID")
tf.nn.convolution(tf.zeros([b, iw1, iw2, iw3, ic], t), tf.zeros([fw1, fw2, fw3, ic, oc], t), "VALID")
System information

Have I written custom code: No
OS Platform and Distribution: Arch Linux (up to date)
TensorFlow installed from: source
TensorFlow version: 1.3.0
Python version: 3.6.2
Bazel version: 0.5.4