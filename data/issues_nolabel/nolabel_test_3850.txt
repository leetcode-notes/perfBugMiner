real gradients of complex-valued functions

I am experiencing unexpected behaviour when taking gradients of a complex-valued function parametrised with real variables. It looks like the gradient with respect to the complex part of the function is (erroneously) zero.
Example:
> x = tf.constant(0.0)    # real-valued parameters of a complex-valued function
> y = tf.constant(0.0)
> z = tf.complex(x, y)    # the complex-valued function

> session.run(tf.gradients(z, x), {x:1.0, y:2.0})    # value of x and y don't matter
[1.0]    # good, expected
> session.run(tf.gradients(z, y), {x:1.0, y:2.0})
[0.0]    # bad, expecting 1j

Is the result being silently cast to real before being returned, or am I misusing tf.gradients somehow?
Using tensorflow version 0.9.0 with GPU on RedHat 4.8.6-4.