How to read image_data and fill image_tensor by tensorflow c++ apis

I want to infer a image by a trained model.first read a image as Mat by opencv,then fill plane_tensor with Mat.Does it work ? Is there any better way to the following code? waiting for some warming person ! thank you very much.
Mat img = imread(file_name);
std::vector bgr;
split(img, bgr);
tensorflow::Tensor four_dim_plane(DT_UINT8, tensorflow::TensorShape({ 1, img.rows, img.cols, 3 }));
auto plane_tensor = four_dim_plane.tensor<unsigned char, 4>();
for (int  k = 0; k < 3; ++k)
{
for (int  i = 0; i < img.rows; ++i)
{
for (int j = 0; j < img.cols; ++j)
{
plane_tensor(0, i, j, k) = bgr[k].at(i, j);
}
}
}
tensorflow::Status status3 = session->Run({ { "image_tensor", plane_tensor } },{ output_node },
{}, &outputs);
**System information
Have I written custom code (as opposed to using a stock example script provided in TensorFlow):yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): windows10
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): TF1.4
Python version:python3.5.2
GCC/Compiler version (if compiling from source): vs2015
CUDA/cuDNN version:cuda8.0/cudnn6.0
GPU model and memory:TXT1080TI/11G
Bazel version：
Exact command to reproduce：**