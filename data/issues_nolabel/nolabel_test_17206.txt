CPU restrictions do not reduce thread count

System information


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no


OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux c72 4.13.0-17-generic #20~16.04.1-Ubuntu SMP Mon Nov 6 14:18:00 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux


TensorFlow installed from (source or binary): source


TensorFlow version (use command below): b'v1.4.1-5-gabf3c6d' 1.4.1


Python version: 3.5


Bazel version (if compiling from source): N/A


GCC/Compiler version (if compiling from source): N/A


CUDA/cuDNN version: N/A


GPU model and memory: N/A


Exact command to reproduce: please see below


Describe the problem
It seems that the tensorflow configuration proto lets you specify the number of CPUs TF should use, but this does not limit the default number of threads TF creates in its thread pools. This seems like unexpected behavior to me. The default number of threads created by TF when no options are specified at all is equal to the number of cores TF detects on the machine it's running on. However, even when limiting the number of CPUs the thread count goes up. On a machine with many CPUs, I expected limiting to work, but it did not, until I limited the thread pool size explicitly.
This isn't a big deal but seemed like it could be a bug, or at least makes the CPU device count option a bit unintuitive.
(cpuc-3.5) 18:21:27 vladf@c72:~$ python -c "import tensorflow as tf
> tf.Session(config=tf.ConfigProto())
> import os
> pid = os.getpid()
> os.system('ps -o nlwp {}'.format(pid))"
NLWP
 144
(cpuc-3.5) 18:21:30 vladf@c72:~$ python -c "import tensorflow as tf
> tf.Session(config=tf.ConfigProto(device_count={'CPU': 4}))
> import os
> pid = os.getpid()
> os.system('ps -o nlwp {}'.format(pid))"
NLWP
 144
(cpuc-3.5) 18:22:35 vladf@c72:~$ python -c "import tensorflow as tf
> tf.Session(config=tf.ConfigProto(device_count={'CPU': 4},inter_op_parallelism_threads=4,intra_op_parallelism_threads=4))
> import os
> pid = os.getpid()
> os.system('ps -o nlwp {}'.format(pid))"
NLWP
  56