tf.assert_equal throws "object was never used" error in v1.2.x

The following code is copied from some tensorflow repository outside.
tf.assert_equal( tf.size( x ), tf.constant( 1 ) )
While running in tensorflow v1.2.0 or v1.2.1, it throws the following log.
ERROR:tensorflow:================================== Object was never used (type <class 'tensorflow.python.framework.ops.Operation'>): <tf.Operation 'update_hyper/cond/assert_equal/Assert/Assert' type=Assert> If you want to mark it as used call its "mark_used()" method. It was originally created here: ['File "/usr/lib64/python3.5/runpy.py", line 193, in _run_module_as_main\n "__main__", mod_spec)', 'File "/usr/lib64/python3.5/runpy.py", line 85, in _run_code\n exec(code, run_globals)', 'File "/usr/lib/python3.5/site-packages/ipykernel_launcher.py", line 16, in <module>\n app.launch_new_instance()', 'File "/usr/lib/python3.5/site-packages/traitlets/config/application.py", line 658, in launch_instance\n app.start()', 'File "/usr/lib/python3.5/site-packages/ipykernel/kernelapp.py", line 477, in start\n ioloop.IOLoop.instance().start()', 'File "/usr/lib64/python3.5/site-packages/zmq/eventloop/ioloop.py", line 177, in start\n super(ZMQIOLoop, self).start()', 'File "/usr/lib64/python3.5/site-packages/tornado/ioloop.py", line 888, in start\n handler_func(fd_obj, events)', 'File "/usr/lib64/python3.5/site-packages/tornado/stack_context.py", line 277, in null_wrapper\n return fn(*args, **kwargs)', 'File "/usr/lib64/python3.5/site-packages/zmq/eventloop/zmqstream.py", line 440, in _handle_events\n self._handle_recv()', 'File "/usr/lib64/python3.5/site-packages/zmq/eventloop/zmqstream.py", line 472, in _handle_recv\n self._run_callback(callback, msg)', 'File "/usr/lib64/python3.5/site-packages/zmq/eventloop/zmqstream.py", line 414, in _run_callback\n callback(*args, **kwargs)', 'File "/usr/lib64/python3.5/site-packages/tornado/stack_context.py", line 277, in null_wrapper\n return fn(*args, **kwargs)', 'File "/usr/lib/python3.5/site-packages/ipykernel/kernelbase.py", line 283, in dispatcher\n return self.dispatch_shell(stream, msg)', 'File "/usr/lib/python3.5/site-packages/ipykernel/kernelbase.py", line 235, in dispatch_shell\n handler(stream, idents, msg)', 'File "/usr/lib/python3.5/site-packages/ipykernel/kernelbase.py", line 399, in execute_request\n user_expressions, allow_stdin)', 'File "/usr/lib/python3.5/site-packages/ipykernel/ipkernel.py", line 196, in do_execute\n res = shell.run_cell(code, store_history=store_history, silent=silent)', 'File "/usr/lib/python3.5/site-packages/ipykernel/zmqshell.py", line 533, in run_cell\n return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)', 'File "/usr/lib/python3.5/site-packages/IPython/core/interactiveshell.py", line 2698, in run_cell\n interactivity=interactivity, compiler=compiler, result=result)', 'File "/usr/lib/python3.5/site-packages/IPython/core/interactiveshell.py", line 2802, in run_ast_nodes\n if self.run_code(code, result):', 'File "/usr/lib/python3.5/site-packages/IPython/core/interactiveshell.py", line 2862, in run_code\n exec(code_obj, self.user_global_ns, self.user_ns)', 'File "<ipython-input-13-85a15e405d64>", line 1, in <module>\n h1 = m1.fit( nn_train_x, nn_train_y, epochs=epochs, batch_size=batch_size, verbose=0 )', 'File "/usr/lib/python3.5/site-packages/keras/models.py", line 870, in fit\n initial_epoch=initial_epoch)', 'File "/usr/lib/python3.5/site-packages/keras/engine/training.py", line 1490, in fit\n self._make_train_function()', 'File "/usr/lib/python3.5/site-packages/keras/engine/training.py", line 1014, in _make_train_function\n self.total_loss)', 'File "<ipython-input-5-1252bd787625>", line 7, in get_updates\n opt_update = self.optimizer.apply_gradients( grads )', 'File "/data/jupyter/yellowfin/yellowfin.py", line 223, in apply_gradients\n update_hyper_op = self.update_hyper_param()', 'File "/data/jupyter/yellowfin/yellowfin.py", line 191, in update_hyper_param\n lambda: self._mu_var) )', 'File "/usr/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py", line 289, in new_func\n return func(*args, **kwargs)', 'File "/usr/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py", line 1814, in cond\n orig_res_t, res_t = context_t.BuildCondBranch(true_fn)', 'File "/usr/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py", line 1689, in BuildCondBranch\n original_result = fn()', 'File "/data/jupyter/yellowfin/yellowfin.py", line 190, in <lambda>\n self._mu = tf.identity(tf.cond(self._do_tune, lambda: self.get_mu_tensor(),', 'File "/data/jupyter/yellowfin/yellowfin.py", line 180, in get_mu_tensor\n tf.assert_equal(tf.size(root), tf.constant(1) )', 'File "/usr/lib/python3.5/site-packages/tensorflow/python/ops/check_ops.py", line 318, in assert_equal\n return control_flow_ops.Assert(condition, data, summarize=summarize)', 'File "/usr/lib/python3.5/site-packages/tensorflow/python/util/tf_should_use.py", line 170, in wrapped\n return _add_should_use_warning(fn(*args, **kwargs))', 'File "/usr/lib/python3.5/site-packages/tensorflow/python/util/tf_should_use.py", line 139, in _add_should_use_warning\n wrapped = TFShouldUseWarningWrapper(x)', 'File "/usr/lib/python3.5/site-packages/tensorflow/python/util/tf_should_use.py", line 96, in __init__\n stack = [s.strip() for s in traceback.format_stack()]'] ==================================
What I expect would be an exception thrown only when the assertion evaluates to false.
Why is it a must to use object returned from assert statement?