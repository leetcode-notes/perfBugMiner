2d gradients have a second dimension of size None

When calling compute_gradients with 2d variables, the first dimension has the correct size while the second dimension has a size of None.  Is this intentional?  It makes it somewhat difficult when processing the gradients, as a dimension size of None isn't really compatible with anything else.
Tested with:
2d variables - second dimension is size None, first dimension is size of first dimension of variable
1d variables - dimension is size of dimension of variable
Tested using compute_gradients in AdamOptimizer