toco convert to lite model incorrectly with slim.batch_norm not follows after conv.

System information

OS Platform and Distribution Linux Ubuntu 14.04:
TensorFlow installed from binary:
TensorFlow version 1.6.rc1:
Python version 3.6:
Have I written custom code N/A:
Bazel version N/A:
CUDA/cuDNN version N/A:
GPU model and memory N/A:
Exact command to reproduce N/A:

I create simple model with slim and convert lite model using toco
      input = tf.placeholder(tf.float32, (None, 120, 120, 3), 'input')
      net = input
      net = slim.conv2d(net, 12, 7, stride=2, scope='conv1')
      net = slim.batch_norm(net)
      net = slim.max_pool2d(net, 3, stride=2, padding='SAME')
      net = slim.batch_norm(net)
      ...
The converted lite model from it can't allocate tensor with error
tensorflow\contrib\lite\kernels\mul.cc:48 NumDimensions(input1) != NumDimensions(input2) (4 != 1)
but if I insert conv2d layer befor batch_norm, the result is ok.
      input = tf.placeholder(tf.float32, (None, 120, 120, 3), 'input')
      net = input
      net = slim.conv2d(net, 12, 7, stride=2, scope='conv1')
      net = slim.batch_norm(net)
      net = slim.max_pool2d(net, 3, stride=2, padding='SAME')
      net = slim.conv2d(net, 12, 7, stride=2, scope='conv111')
      net = slim.batch_norm(net)
      ...
I had try insert relu and the other layers before batch_norm, but it can't allocate tensor when previous layer is not conv.
How can I create batch_norm after any layer?