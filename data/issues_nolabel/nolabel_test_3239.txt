FFT gradient over variables fails

The following code fails with an error ValueError: Shapes (3, 32, 28, 28) and () are not compatible
import tensorflow as tf

filters = 32
width = 28
height = 28
channels = 3

x = tf.placeholder(tf.float32, shape=[None, height, width, channels])
w = tf.Variable(tf.truncated_normal([channels, filters, height, width], stddev=0.1))
b = tf.Variable(tf.constant(0.1, shape=[32]))

w_ifft = tf.real(tf.batch_ifft2d(tf.complex(w, 0.0)))
w_ifft_transpose = tf.transpose(w_ifft, [2, 3, 0, 1])

conv = tf.nn.conv2d(x, w_ifft_transpose, strides=[1, 1, 1, 1], padding='SAME')
output = tf.nn.bias_add(conv, b)

print tf.gradients(output, w)

Performing backprop of an FFT over a variable is important for reproducing the work found https://hips.seas.harvard.edu/files/rippel-spectral-nips-2015.pdf