[android demo] fix issue #12431 Java implementation of YUV420SP to ARGB8888 converting

This PR fix issue #12431
Java implementation of ImageUtils.convertYUV420SPToARGB8888 made and refactoring for Java implementation of ImageUtils.convertYUV420ToARGB8888 made as well.
Despite the fact that code looks a bit 'nuddle-style' that was made for efficiency reasons. Breaking down it into few, more readable functions (like it was made before at ImageUtils.convertYUV420ToARGB8888) lead into 3-time function execution increase:
Previous implementation of ImageUtils.convertYUV420ToARGB8888 cause invocation inside double nested circles 307200 times (640x480) of YUV2RGB function and three times more convertByteToInt with Math.min and Math.max functions.
Total costs of classification at TF Classify was around 3000 ms on my test device (Meizu N2, API 22). Proposed implementation drops it down to 1000-1100 ms (which is comparable with native C implementation from libtensorflow_demo.so  ~700 ms).