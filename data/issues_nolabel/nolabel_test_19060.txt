data.prefetch_to_device does not work with tf.data.Iterator.from_structure()

it works with make_one_shot_iterator(), I can see that the training time is 2x lower, when using the make_initializable_iterator() the time is the same as without prefetching to device.
how to use the new feature when dataset switch (train/val/test) is needed for evaluation purpose?
code parts
//not working
trainDataset = tf.data.Dataset.from_tensor_slices((trainFeatures,trainLabels,trainLengths,trainMasks))
trainDataset = trainDataset.batch(batchSize)
trainDataset = trainDataset.apply(tf.contrib.data.shuffle_and_repeat(100,nEpochs))
iterator = tf.data.Iterator.from_structure(trainDataset.output_types, trainDataset.output_shapes)
train_init_op = iterator.make_initializer(trainDataset)
trainDataset = trainDataset.apply(tf.contrib.data.prefetch_to_device('/gpu:0'))
//working
trainDataset = tf.data.Dataset.from_tensor_slices((trainFeatures,trainLabels,trainLengths,trainMasks))
trainDataset = trainDataset.batch(batchSize)
trainDataset = trainDataset.apply(tf.contrib.data.shuffle_and_repeat(100,nEpochs))
trainDataset = trainDataset.apply(tf.contrib.data.prefetch_to_device('/gpu:0'))
iterator = trainDataset.make_one_shot_iterator()