slim.learning.train and slim.evaluation.evaluation to handle OutOfRange gracefully

While doing this fix, I noticed that some of the metric operations don't handle OutOfRange gracefully also.
For example, streaming mean computation would update total value and count concurrently, possibly updating count before failing to update total value due to OutOfRange.
I have added fixes for mean metrics, but I am not sure what other places might be handling OutOfRange incorrectly.