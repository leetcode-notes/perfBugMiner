[Bug report] ValueError: Variable does not exist on tf.layers.dense(reuse=True) after graph switch

System Information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow)?: yes
OS Platform and Distribution (i.e. Linux Ubuntu 16.0): macOS Sierra
TensorFlow installed from (source or binary)?: binary, pip
TensorFlow version (use command below): 1.0.0
Bazel version (if compiling from source): None
CUDA/cuDNN version: not using GPU
GPU Model and Memory: not using GPU
Exact command to reproduce: None

Describe the problem clearly
I built 2 networks that share some layers/variables. The best way that I learned was to treat them as separate graphs. I wasn't sure about whether 2 graphs can share variables but I tried tf.get_variable(resue=True) anyway. At least my program show create 2 separate graph with no variable sharing. But a ValueError(variable does not exist) was thrown instead.
Source Code / Logs

source code:

# test code
model = DPGModel(3, 4)

# source code
class DPGModel(object):
    def __init__(self, state_size, action_size):
        self.sess = tf.Session()
        self.state_size = state_size
        self.action_size = action_size
        self.create_network()
        # other irrelevant code

    def create_network(self):
        self.state_tensor = tf.placeholder(tf.float64, [None, self.state_size], name="state")
        self.action_tensor = tf.placeholder(tf.float64, [None, self.action_size], name="action")
        self.actor_graph = tf.Graph()
        with self.actor_graph.as_default():
            print tf.get_variable_scope()
            state_h1 = tf.layers.dense(inputs=self.state_tensor, units=64, activation=tf.nn.relu, name="state_h1",
                                       reuse=True)
            state_h2 = tf.layers.dense(inputs=state_h1, units=32, activation=tf.nn.relu, name="state_h2", reuse=True)
            self.policy_tensor = tf.layers.dense(inputs=state_h2, units=self.action_size, activation=tf.nn.softmax,
                                                 name="policy")

        self.critic_graph = tf.Graph()
        with self.critic_graph.as_default():
            print tf.get_variable_scope()
            state_h1 = tf.layers.dense(inputs=self.state_tensor, units=64, activation=tf.nn.relu, name="state_h1",
                                       reuse=True)
            state_h2 = tf.layers.dense(inputs=state_h1, units=32, activation=tf.nn.relu, name="state_h2", reuse=True)
            action_h1 = tf.layers.dense(inputs=self.action_tensor, units=64, activation=tf.nn.relu, name="action_h1")
            action_h2 = tf.layers.dense(inputs=action_h1, units=32, activation=tf.nn.relu, name="action_h2")
            fc = tf.layers.dense(inputs=[state_h2, action_h2], units=32, activation=tf.nn.relu,
                                 name="fully_connected")
            self.value_tensor = tf.layers.dense(inputs=fc, units=1, activation=None, name="value")

error log:

<tensorflow.python.ops.variable_scope.VariableScope object at 0x10fd20790>
Traceback (most recent call last):
  File "/Users/niyan/code/routerRL/test.py", line 16, in <module>
    model = DPGModel(state_dim, action_dim)
  File "/Users/niyan/code/routerRL/DPGModel.py", line 10, in __init__
    self.create_network()
  File "/Users/niyan/code/routerRL/DPGModel.py", line 37, in create_network
    reuse=True)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/layers/core.py", line 216, in dense
    return layer.apply(inputs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/layers/base.py", line 303, in apply
    return self.__call__(inputs, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/layers/base.py", line 269, in __call__
    self.build(input_shapes[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/layers/core.py", line 123, in build
    trainable=True)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py", line 988, in get_variable
    custom_getter=custom_getter)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py", line 890, in get_variable
    custom_getter=custom_getter)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py", line 341, in get_variable
    validate_shape=validate_shape)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/layers/base.py", line 258, in variable_getter
    variable_getter=functools.partial(getter, **kwargs))
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/layers/base.py", line 208, in _add_variable
    trainable=trainable and self.trainable)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py", line 333, in _true_getter
    caching_device=caching_device, validate_shape=validate_shape)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py", line 657, in _get_single_variable
    "VarScope?" % name)
ValueError: Variable state_h1/kernel does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?

Process finished with exit code 1