[OpenCL] Implementation improvements

OpenCL implementation improvements (#22)

[Build] Use gcc/g++ as a host compiler to avoid #8394 (#54)
[Eigen] Version bump
[OpenCL] Implementation improvements

Register SYCL implementations for random ops

Simplify by using Eigen math functions


Registers Scatter and ScatterNd Ops for SYCL
Registers Stack op for SYCL
Fixes No sycl buffer found error for debug ops
Registers MatMul and Transpose Ops to SYCL device for double
Extends analyzer_cli_test.py test to cover SYCL
Fixes Transpose Op for double when on SYCL
Bumps Eigen version to fix double precision issue on SYCL
Extends SessionDebugTestBase to cover SYCL
Bumps Eigen Version
Refactors Ops registration
Introduces workaround for Const Op related to the difference between
CUDA which uses pointers and OpenCL that uses buffers/accessors
Extends memory types to cover DEVICE_SYCL as well
Introduces  GetSYCLDevice() method that returns list of supported devices
with GPU device having the highest priority ( doesn't include blacklisted devices )
::internal::Transpose -> tensorflow::internal::Transpose in order to
avoid compilation reported error
Adds sycl_runtime to bazels ARRAY_DEPS
Replicates TF_CALL_GPU_PROXY_TYPES for SYCL
Fixes an issue caused by switch to aligned allocator for sycl buffer (#53)
Fix testSimple and testConst in stack_op_test (#3)
RandomGamma has no GPU friendly implementation (#57)
Register batch normalization kernels for OpenCL (#61)
Compatibility fixes for TensorFlow 1.1.0-rc1
Fixes Scatter Op
Implements BatchMatmul Op for SYCL
Lowercase the device name when GPU or SYCL returned
kernel_estimator_test.py assertEqual-> assertAlmostEqual due to floating point
representation on the device