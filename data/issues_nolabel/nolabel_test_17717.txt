Add working example of distributed tensorflow using Estimator API for K-Means

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Redhat
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): 1.5
Python version: 3.6
Bazel version (if compiling from source): N.A.
GCC/Compiler version (if compiling from source): N.A.
CUDA/cuDNN version: N.A.
GPU model and memory: N.A.
Exact command to reproduce: N.A.

Describe the problem
I am using standard library-provided k-means with Estimator API for distributed tensorflow. I have a cluster of three machine and I have updated the TF_CONFIG env. variable on all three machine. I am using HDFS to store the model directory so that all machine can access that it, but when I execute the python file from the master machine, the gRPC server gets created and then "PS server and Worker server waiting for response from master"  message is repeated after every 10 seconds or so.
If sample code for using this Estimator-API based K-Means would had been present, it would have helped better
Source code / logs
import tensorflow as tf
import numpy as np
import pandas as pd
k = 5
n = 100
variables = 2
points = np.random.uniform(0, 1000, [n, variables])
input_fn=lambda: tf.train.limit_epochs(tf.convert_to_tensor(points, dtype=tf.float32), num_epochs=1)
kmeans=tf.contrib.factorization.KMeansClustering(num_clusters=k, use_mini_batch=False,model_dir="my_hdfs_path")
train_spec = tf.estimator.TrainSpec(input_fn=input_fn, max_steps=100)
eval_spec = tf.estimator.EvalSpec(input_fn=input_fn)
tf.estimator.train_and_evaluate(kmeans, train_spec, eval_spec)
list(kmeans.predict(input_fn=input_fn))
TF_CONFIG:
{ "cluster":{ "chief":[ "master:22220" ], "ps":[ "slave02:22220" ], "worker":[ "slave01:22220" ] }, "task":{  "type":"chief", "index":0, } }
Error message:
CreateSession still waiting for response from worker: /job:ps/replica:0/task:0
CreateSession still waiting for response from worker: /job:worker/replica:0/task:0