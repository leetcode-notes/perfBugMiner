Embedding Lookup - shared weights: Dimensions are not compatible error

Environment info
Operating System: Linux
Installed from sources, commit hash: 7b5fef1
Python 2.7.11 |Anaconda 2.3.0 (64-bit)| (default, Dec  6 2015, 18:08:32)
Steps to reproduce
import tensorflow as tf

vocab_size = 1337
embedding_size = 100
batch_size = 512
Qmax = 19
Tmax = 17

W = tf.Variable(
    tf.random_uniform([vocab_size, embedding_size], -1.0, 1.0) ,name="W")

#W2 = tf.Variable(
#    tf.random_uniform([vocab_size, embedding_size], -1.0, 1.0) ,name="W2")

_q = tf.placeholder("int32", [batch_size, Qmax])
_t = tf.placeholder("int32", [batch_size, Tmax])

A = tf.reduce_mean(tf.nn.embedding_lookup(W, _q), [1])

# DOES NOT WORK
B = tf.reduce_mean(tf.nn.embedding_lookup(W, _t), [1])

# WORKS
#B = tf.reduce_mean(tf.nn.embedding_lookup(W2, _t), [1])

cost = tf.reduce_mean(tf.add(A, B))

optimizer = tf.train.AdamOptimizer(learning_rate=0.001).minimize(cost)
What have you tried?

Commented lines seem to mitigate the problem, but then the embedding matrix is not shared, which is desired for my use case.

Logs or other output that would be helpful
jd@jd-cuda:~$ python tensor_fail.py 
I tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcublas.so.7.0 locally
I tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcudnn.so.6.5 locally
I tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcufft.so.7.0 locally
I tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcuda.so locally
I tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcurand.so.7.0 locally
Traceback (most recent call last):
  File "tensor_fail.py", line 28, in <module>
    optimizer = tf.train.AdamOptimizer(learning_rate=0.001).minimize(cost)
  File "/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/training/optimizer.py", line 186, in minimize
    aggregation_method=aggregation_method)
  File "/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/training/optimizer.py", line 232, in compute_gradients
    aggregation_method=aggregation_method)
  File "/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py", line 416, in gradients
    aggregation_method)
  File "/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py", line 638, in _AggregatedGrads
    for x in out_grad]), out_grad[0].dense_shape)
  File "/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py", line 309, in concat
    name=name)
  File "/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py", line 70, in _concat
    name=name)
  File "/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/op_def_library.py", line 664, in apply_op
    op_def=op_def)
  File "/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 1836, in create_op
    set_shapes_for_outputs(ret)
  File "/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 1476, in set_shapes_for_outputs
    shapes = shape_func(op)
  File "/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py", line 364, in _ConcatShape
    concat_dim + 1:].merge_with(value_shape[concat_dim + 1:])
  File "/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py", line 530, in merge_with
    new_dims.append(dim.merge_with(other[i]))
  File "/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py", line 119, in merge_with
    self.assert_is_compatible_with(other)
  File "/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py", line 94, in assert_is_compatible_with
    % (self, other))
ValueError: Dimensions Dimension(19) and Dimension(17) are not compatible

I would be grateful for any help.
Best regards,

Jacek Dabrowski