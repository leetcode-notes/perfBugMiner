tf.layers.conv2d does not accept higher dimension tensor

System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Win10 x64
TensorFlow installed from (source or binary): pip install
TensorFlow version (use command below): r1.3
Python version:  3.5 amd 64
Bazel version (if compiling from source): Used binary
CUDA/cuDNN version: CUDA 8.0 + CuDNN 6.0
GPU model and memory:  GeForce GTX 1070 8.00GiB

I am trying to feed a tf.layers.conv2d with tensor shape [batch_size, size_i_want_to_separate, width, height, channels] but I received ValueError: Input 0 of layer conv2d_1 is incompatible with the layer: expected ndim=4, found ndim=5. Full shape received: [1, 4, 640, 377, 3]. I think it is OK to feed layer with high dimension as long as last three dimension is image.
If it is impossible to add this feature, may I try to merge first two dimensions together and feed it to conv2d layer. Then separate it to origin form but maintain the order? How to do it?