[Windows custom ops] Compiled c++ and imported dll successfully, but custom ops are not visible from python?

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Win 7 64
TensorFlow installed from (source or binary): sources
TensorFlow version (use command below): 1.3.1
Python version: 2.7.13
Bazel version (if compiling from source): NA
GCC/Compiler version (if compiling from source): Visual Studio 15
CUDA/cuDNN version: 8.0/7.5
GPU model and memory: NA
Exact command to reproduce: Please see below.

Describe the problem
Trying to build a library available at https://github.com/optas/latent_3d_points.
It has custom ops implemented in c++.
I have successfully built the package therein specifically structural_losses from https://github.com/optas/latent_3d_points/tree/master/external/structural_losses with changes for compiling with Visual Studio 2015.
In python, I am also able to load the ops dlls e.g. using
approxmatch_module = tf.load_op_library(osp.join(base_dir, '_approxmatch.pyd')).
However, I don't see the operators approxmatch_module.approx_match,approxmatch_module.match_cost, etc. from the c++ getting exposed to the python tensorflow.
I am getting the following error:
AttributeError: 'module' object has no attribute 'approx_match'
When I do the following
from structural_losses import approxmatch
dir(approxmatch.approxmatch_module)

it lists only the following items
['LIB_HANDLE', 'OP_LIST', '_InitOpDefLibrary', '__builtins__', '__doc__', '__name__', '__package__', '_collections', '_common_shapes', '_op_def_lib', '_op_def_library', '_op_def_pb2', '_op_def_registry', '_ops']
where the actual operations from c++ are missing.
What am I missing from proper compilation?
Or is it that in windows custom ops is unavailable/not implemented?