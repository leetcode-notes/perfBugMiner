1.7 compiled version with MKL fails unexpectedly

Please go to Stack Overflow for help and support:
https://stackoverflow.com/questions/tagged/tensorflow
If you open a GitHub issue, here is our policy:

It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).
The form below must be filled out.
It shouldn't be a TensorBoard issue. Those go here.

Here's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Ubuntu 14.04.5 LTS
TensorFlow installed from (source or binary):
source
TensorFlow version (use command below):
1.7
Python version:
3.6
Bazel version (if compiling from source):
0.11.1
GCC/Compiler version (if compiling from source):
4.8.4
CUDA/cuDNN version:
None
GPU model and memory:
None
Exact command to reproduce:

You can collect some of this information using our environment capture script:
https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh
You can obtain the TensorFlow version with
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
Describe the problem
I successfully built tensorflow with mkl, got it all installed and then tried to run a keras network (one that has run on the pre-built binary version).  It looks like it started hits 800% (8 cores), but then dies with an error.  The logs below show the error is not in keras but in tensorflow/mkl. Source code included, I believe you can run any data through the network.
Source code / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.
logs:
./tensorflow/core/util/mkl_util.h:1288] Non-OK-status: Status(error::Code::INVALID_ARGUMENT, "Unsupported data format") status: Invalid argument: Unsupported data format 

source code:
import os
os.environ["KMP_BLOCKTIME"] = str(0)
os.environ["KMP_SETTINGS"] = str(1)
os.environ["KMP_AFFINITY"]= str('granularity=fine,verbose,compact,1,0')

d = datetime.datetime.utcnow()
unixtime = calendar.timegm(d.utctimetuple())

window_size = 224
nb_input_series = train_X.shape[1]
nb_outputs = 1
batch_size = 10

model = Sequential((
    Conv1D(2048, 2, activation='relu',input_shape=(window_size, nb_input_series)),
    Conv1D(2048, 2, activation='relu'),
    MaxPooling1D(2),
    Conv1D(2048, 4, activation='relu'),
    Conv1D(2048, 4, activation='relu'),
    MaxPooling1D(2),
    Conv1D(2048, 4, activation='relu'),
    Conv1D(2048, 4, activation='relu'),
    MaxPooling1D(2),
    Conv1D(2048, 4, activation='relu'),
    Conv1D(2048, 4, activation='relu'),
    MaxPooling1D(2),
    Dropout(0.1),
    Dense(4096, activation='relu'),
    Dense(4096, activation='relu'),
#     GlobalAveragePooling1D(),
    Flatten(),
    Dense(nb_outputs, activation='linear')
    ))

    
model.compile(loss='mse', optimizer=Adam(lr=0.0001), metrics=['mae'])

model.summary()