libstdc++ cannot be found

I receive the following error when executing:
bazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer --verbose_failures

ERROR: /home/XX/.cache/bazel/_bazel_XX/2e273cfba15d637070500a6c0bde03c6/external/protobuf/BUILD:331:1: Linking of rule '@protobuf//:protoc' failed: gcc failed: error executing command
(cd /home/XX/.cache/bazel/_bazel_XX/2e273cfba15d637070500a6c0bde03c6/execroot/tensorflow && 
exec env - 
/software/gcc/4.9.3/bin/gcc -o bazel-out/host/bin/external/protobuf/protoc bazel-out/host/bin/external/protobuf/_objs/protoc/external/protobuf/src/google/protobuf/compiler/main.o bazel-out/host/bin/external/protobuf/libprotoc_lib.a bazel-out/host/bin/external/protobuf/libprotobuf.a bazel-out/host/bin/external/protobuf/libprotobuf_lite.a -lpthread -L/software/gcc/4.9.3/lib64/ -Wl,-rpath,/software/gcc/4.9.3/lib64/ -B/usr/bin/ '-lstdc++ -L/software/gcc/4.9.3/lib64/' -pie -Wl,-z,relro,-z,now -no-canonical-prefixes -pass-exit-codes '-Wl,--build-id=md5' '-Wl,--hash-style=gnu' -Wl,-S -Wl,--gc-sections): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.
/usr/bin/ld: cannot find -lstdc++ -L/software/gcc/4.9.3/lib64/

I know for sure that in /software/gcc/4.9.3/lib64/ libstdc++ exists. I cannot find the source of the problem.
Here is an excerpt of my CROSSTOOl

tool_path { name: "ar" path: "/usr/bin/ar" }
tool_path { name: "compat-ld" path: "/usr/bin/ld" }
tool_path { name: "cpp" path: "/software/gcc/4.9.3/bin/cpp" }
tool_path { name: "dwp" path: "/usr/bin/dwp" }
tool_path { name: "gcc" path: "/software/gcc/4.9.3/bin/gcc" }
cxx_flag: "-std=c++11"
#linker_flag: "-L/software/gcc/4.9.3/lib/
linker_flag: "-L/software/gcc/4.9.3/lib64/"
#linker_flag: "-Wl,-rpath,/software/gcc/4.9.3/lib/
linker_flag: "-Wl,-rpath,/software/gcc/4.9.3/lib64/"
linker_flag: "-B/usr/bin/"
#linker_flag: "-B/software/gcc/4.9.3/bin/"
linker_flag: "-lstdc++ -L/software/gcc/4.9.3/lib64/"
cxx_builtin_include_directory: "/software/gcc/4.9.3/lib64/gcc/"
#"/usr/lib/gcc/"
cxx_builtin_include_directory: "/software/gcc/4.9.3/lib64/"
#cxx_builtin_include_directory: "/software/gcc/4.9.3/lib/"
cxx_builtin_include_directory: "/software/gcc/4.9.3/include/"
cxx_builtin_include_directory: "/usr/local/include"
cxx_builtin_include_directory: "/usr/include"
cxx_builtin_include_directory: "/software/nvidia/7.5.18/cuda/include"

I tested every possible configuration but cannot figure out why it does not work. I am using the latest. I am using:
bazel release 0.3.1 and TF 0.10