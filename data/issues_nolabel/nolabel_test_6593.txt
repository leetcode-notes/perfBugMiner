MonitoredSession Implementation [awaiting response]

I am trying to solve simple arithmetic operations on 4 separate devices which I was successful in doing. Now, I want to implement fault tolerance in my program in the event that one of the node fails. I am using the tf.train.MonitoredTrainingSession class to achieve the desired results. I am not confident about the implementation in my program as I am not getting a favorable output. Below is the program as far as I could get:-
Please help
import tensorflow as tf

global_step_tensor = tf.Variable(10, trainable=False, name='global_step')

cluster = tf.train.ClusterSpec({"local": ["localhost:2222", "localhost:2223","localhost:2224", "localhost:2225"]})
x = tf.constant(2)

with tf.device("/job:local/task:0"):
    y1 = x + 300

with tf.device("/job:local/task:1"):
    y2 = x**2

with tf.device("/job:local/task:2"):
    y3 = 5*x

with tf.device("/job:local/task:3"):
    y0 = x - 66
    y = y0 + y1 + y2 + y3

ChiefSessionCreator = tf.train.ChiefSessionCreator(scaffold=None, master='localhost:2222', config='grpc://localhost:2222', checkpoint_dir='/home/chaitanya/tensorflow/codes/checkpoints')
saver_hook = tf.train.CheckpointSaverHook(checkpoint_dir='/home/chaitanya/tensorflow/codes/checkpoints', save_secs=10, save_steps=None, saver=y, checkpoint_basename='model.ckpt', scaffold=None)
summary_hook = tf.train.SummarySaverHook(save_steps=None, save_secs=10, output_dir='/home/chaitanya/tensorflow/codes/savepoints', summary_writer=None, scaffold=None, summary_op=y)

with tf.train.MonitoredTrainingSession(master='localhost:2222', is_chief=True, checkpoint_dir='/home/chaitanya/tensorflow/codes/checkpoints', 
    scaffold=None, hooks=[saver_hook, summary_hook], chief_only_hooks=None, save_checkpoint_secs=10, save_summaries_steps=None, config='grpc://localhost:2222') as sess:

    while not sess.should_stop():
        sess.run(model)

    while not sess.should_stop():
        print(sess.run(y0))
        print('\n')

    while not sess.should_stop():
        print(sess.run(y1))
        print('\n')

    while not sess.should_stop():
        print(sess.run(y2))
        print('\n')

    while not sess.should_stop():
        print(sess.run(y3))
        print('\n')

    while not sess.should_stop():
        result = sess.run(y)
        print(result)

I have also posted this on stackoverflow:-
https://stackoverflow.com/questions/41478027/tf-train-monitoredtrainingsession-arguments