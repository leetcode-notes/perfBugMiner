lib_package does not bundle MKL-DNN

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): 1.4.1
Python version: 2.7.12
Bazel version (if compiling from source): 0.8.1
GCC/Compiler version (if compiling from source): 5.4.0
CUDA/cuDNN version: -
GPU model and memory: -
Exact command to reproduce:

Describe the problem
I wan't to build the tensorflow C-API from source with MKL-DNN support in order to use it in another project. The easiest solution (if not the only convenient one) I found for building the C-API is using the lib_package tool:
bazel build --config=mkl -c opt //tensorflow/tools/lib_package:libtensorflow
The build succeeds. However, the packaged library does not contain libmklml_intel.so and libiomp5.so.
$ ldd libtensorflow_framework.so
	linux-vdso.so.1 =>  (0x00007ffec0f8a000)
	libmklml_intel.so => not found
	libiomp5.so => not found
	libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007feb07b2f000)
	libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007feb07826000)
	libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007feb07609000)
	libstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007feb07287000)
	libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007feb07071000)
	libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007feb06ca7000)

Is there a way to fix the Bazel build such that it outputs all necessary libs?