Proposal: Compiling TF 1.4.0 GPU w/ CMAKE on Linux x64

Currently, I have been playing with the cmake scripts of TensorFlow-GPU to make it CMAKE-buildable in a bare-metal x64 Linux. (isolated environment, without the internet, w/ OBS)
(I'm trying CMAKE because I don't want to port Java)
It's almost done (need code clean) and I'll probably send Pull-Request next week. However, there are a few things I want to check before I write additional features besides simply make it able to build with CMAKE for TF-GPU in Linux.


Tensorflow is statically linking to pre-installed devel packages. I think in some cases, it might be better to do dynamic linking (use .so) to other libraries (to save some memory and storage size). May I simply add an option like "tensorflow_USE_SHARED_LIBS_CUDA"? (e.g., cuda, nccl, ...)


Tensorflow is downloading a lot of external packages and use them "statically", which is pretty awful for some people. I'd like to make it use shared libraries as well (maybe along with some version restrictions). May I simply add an option like "tensorflow_USE_SHARD_LIBS_JSONCPP", which disables downloading "JSONCPP" as well?


Some additional benefit with these might be reduced memory requirement for building tensorflow; memory consumption of tensorflow-build gets dangerous at the last step with ld. Probably, for now, I may simply need to be satisfied with letting make reduce -j# only for ld steps.
CC: @leemgs
STATUS: failing at the last step. (without -Dtensorflow_BUILD_SHARED_LIB, it works anyway)
...
[ 2457s] /usr/lib64/gcc/x86_64-tizen-linux-gnu/6.2.1/../../../../x86_64-tizen-linux-gnu/bin/ld: libtf_core_gpu_kernels.a(tf_core_gpu_kernels_generated_beam_search_ops_gpu.cu.cc.o): relocation R_X86_64_32 against `.data' can not be used when making a shared object; recompile with -fPIC
[ 2457s] /usr/lib64/gcc/x86_64-tizen-linux-gnu/6.2.1/../../../../x86_64-tizen-linux-gnu/bin/ld: libtf_core_gpu_kernels.a(tf_core_gpu_kernels_generated_resampler_ops_gpu.cu.cc.o): relocation R_X86_64_32 against `.data' can not be used when making a shared object; recompile with -fPIC
[ 2457s] /usr/lib64/gcc/x86_64-tizen-linux-gnu/6.2.1/../../../../x86_64-tizen-linux-gnu/bin/ld: final link failed: Nonrepresentable section on output
[ 2457s] collect2: error: ld returned 1 exit status
[ 2457s] CMakeFiles/tensorflow.dir/build.make:2235: recipe for target 'libtensorflow.so' failed
[ 2457s] make[2]: *** [libtensorflow.so] Error 1
[ 2457s] CMakeFiles/Makefile2:82: recipe for target 'CMakeFiles/tensorflow.dir/all' failed
[ 2457s] make[1]: *** [CMakeFiles/tensorflow.dir/all] Error 2
[ 2457s] make[1]: *** Waiting for unfinished jobs....
[ 2458s] [100%] Linking CXX shared library libpywrap_tensorflow_internal.so
[ 2474s] [100%] Built target grpc_tensorflow_server
[ 2474s] [100%] Built target transform_graph

-- STATUS UPDATE: build successful w/ -Dtensorflow_BUILD_SHARED_LIB=ON as well.