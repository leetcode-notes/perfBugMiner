Restore and predict tensorflow contrib.learn.DNNRegressor/DNNClassifier without running at least one step of training (which was a missing feature).

Hi,
I'm following up on the issue that is mentioned in this thread:
#3340
Currently the way to restore a trained model is: First created a DNNRegressor/DNNClassifier specifiyng model_dir on constructor, fit() (training step) , and restore it by creating another DNNRegressor/DNNClassifier using the same model_dir in constructor. That works for me and is not the problem.
However, when I want to make the model portable to others, meaning I train on my machine and copy the model file it generates to others, and let them predict on new data sets without training again. It fails.
And from a large and wide search on the issue, I find several resources point out to the same reply: "Right now, there isn't a way to restore and predict without running at least one step of training (which is a missing feature)"@martinwicke
Another reference: #3306
Since this was the reply 3 months ago, and now I follow @michaelisard 's suggestion to open a separate  issue to track the feature of restoring without predicting.
Look forward to hearing from experts who develops tensorflow, or any walk-around is welcome. Thanks!