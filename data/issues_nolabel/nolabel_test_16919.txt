libhdfs3 instead of libhdfs

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes, see diff below.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): N/A
TensorFlow installed from (source or binary): N/A
TensorFlow version (use command below): N/A
Python version: N/A
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A
Exact command to reproduce: N/A

Describe the problem
Current HDFS support in TensorFlow is based on libhdfs, a JNI wrapper for the HDFS client implemented in Java. Due to this design choice, users of libhdfs (and transitively TensorFlow)

need to keep in mind an implicit dependency on the JVM runtime,
have to do quite a bit of trickery to setup the environment expected by libhdfs.

libhdfs3 is a native implementation of an HDFS client, which could potentially free the users from the two issues mentioned above. The documentation of libhdfs3 claims that its C API is "almost the same" as that of libhdfs. I've verified this on the master version of TensorFlow and the diff is indeed negligible:
index 5f2b222622..0f168fe0dd 100644
--- a/tensorflow/core/platform/hadoop/hadoop_file_system.h
+++ b/tensorflow/core/platform/hadoop/hadoop_file_system.h
@@ -19,8 +19,8 @@ limitations under the License.
 #include "tensorflow/core/platform/env.h"

 extern "C" {
-struct hdfs_internal;
-typedef hdfs_internal* hdfsFS;
+struct HdfsFileSystemInternalWrapper;
+typedef HdfsFileSystemInternalWrapper* hdfsFS;
 }
What do you think?