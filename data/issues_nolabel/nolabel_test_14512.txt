gfile random access file seek implementation inappropriate

the call stack for tensorflow.python.platform.gfile.GFile.seek function is as follows:

  
    
      tensorflow/tensorflow/python/lib/io/file_io.py
    
    
         Line 118
      in
      2944429
    
    
    
    

        
          
           ret_status = self._read_buf.Seek(position) 
        
    
  



  
    
      tensorflow/tensorflow/core/lib/io/buffered_inputstream.cc
    
    
         Line 153
      in
      18f3692
    
    
    
    

        
          
           Status BufferedInputStream::Seek(int64 position) { 
        
    
  



  
    
      tensorflow/tensorflow/core/lib/io/buffered_inputstream.cc
    
    
         Line 126
      in
      18f3692
    
    
    
    

        
          
           Status BufferedInputStream::SkipNBytes(int64 bytes_to_skip) { 
        
    
  



  
    
      tensorflow/tensorflow/core/lib/io/random_inputstream.h
    
    
         Line 27
      in
      d44d271
    
    
    
    

        
          
           class RandomAccessInputStream : public InputStreamInterface { 
        
    
  



  
    
      tensorflow/tensorflow/core/lib/io/inputstream_interface.cc
    
    
         Line 27
      in
      d44d271
    
    
    
    

        
          
           Status InputStreamInterface::SkipNBytes(int64 bytes_to_skip) { 
        
    
  


The implementation of SkipNBytes for random access file is read out N bytes. It's not efficient if we seek through one huge file. I think we should override the implementation for random access file.
I tried seek API for one large hdfs file, it took more than one hour to finish.