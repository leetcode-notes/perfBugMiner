[Feature request] unsquashing unsorted_segment_x

Have I written custom code? No
OS Platform and Distribution? Win10
TensorFlow installed from? pip
TensorFlow version? 1.7
Bazel version? N/A
CUDA/cuDNN version? N/A
GPU model and memory? N/A
Exact command to reproduce: unsorted_segment_sum
Describe the problem
Let's say you have 3 sequences of 12 values (shape (3,12)) with 5 segments and you have an input of shape (None,12,3) transposed to (3,12,None)
using any function with unsorted_segement_x the output will be (5,None).
Would it be possible to have a function that does the same but still keep the first dimention.
Something equivalent to:
input.shape==(None,12,3)
segment.shape==(3,12)

outputs=[]
for ix, val in enumerate(tf.unstack(input)):
    ouputs.append(tf.unsorted_segment_sum(val,sequence[ix],5)
output=tf.stack(outputs)
output.shape==(3,5,None)
The use of such a thing would be to iterate over a weighted input and without having to loop over the data or using reshape. I think this should be somewhat straightforward to implement; not concatenate together all the sequences for the superior dimensions and use "keep_dims" similar to reduce_sum to trigger that behaviour.