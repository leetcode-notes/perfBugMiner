name_scope problem of "tensorflow/python/layers/normalization.py"

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 64bit
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): 1.7.0-rc1 (GPU version from pip)
Python version:  3.6.2
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 9.0
GPU model and memory: GTX 1080Ti 11GB
Exact command to reproduce: See below

Describe the problem
I found this problem when I am using tf.layers.batch_normalization(). For example, the following code:
import tensorflow as tf

inData = tf.placeholder(shape = [1,1], name = 'input', dtype = tf.float32) 
with tf.name_scope('layer1'):
    with tf.name_scope('fully_connected'):
        W = tf.Variable( [[0.]] ,name='W')
        b = tf.Variable( [0.], name='bias')
        x = tf.matmul( inData, W ) + b

    normalized = tf.layers.batch_normalization(x, fused = True, reuse = False)
    
loss = tf.reduce_sum(normalized)

with tf.Session() as sess:
    # record computation graph
    writer = tf.summary.FileWriter('BN_test', sess.graph)
    writer.close()
Will generate the following computation graph:

While what I expect is: the variables "gamma", "beta", "moving_mean" etc. should all inside the name_scope "layer1/batch_normalization/" but not "batch_normalization/"
So I  refer to the code "tensorflow/python/layers/normalization.py"
Around line 301 ~ 361, I found:

It seems that here the name_scope was cleaned in order to support the 'reuse' option. But this should only affect "moving_mean" and "moving_variance", not "beta" and "gamma". However, as shown above, all of them was affected.
In fact, if we add print(self._scope.partitioner) just before line 302, we will found that self._scope.partitioner is always None.
Summary

self._scope is probably not set correctly.
Suggestion: I want an option to tell the program "I will never reuse the weights", thus do not clean the name_scope of "moving_mean" and "moving_variance". Otherwise, the graph in tensorboard is too messy......