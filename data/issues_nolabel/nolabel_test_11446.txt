Is tf.split() not create a new  object? Using tf.split() and tf.concat() will has some bugs......

Please go to Stack Overflow for help and support:
http://stackoverflow.com/questions/tagged/tensorflow
If you open a GitHub issue, here is our policy:

It must be a bug or a feature request.
The form below must be filled out.
It shouldn't be a TensorBoard issue. Those go here.

Here's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
**OS Platform and Distribution , :
Linux Ubuntu 16.04
**TensorFlow installed from *:
source
TensorFlow version (use command below):
1.2
Python version:
2.7
Bazel version (if compiling from source):
CUDA/cuDNN version:
8.0
GPU model and memory:
Exact command to reproduce:

Describe the problem
tf.split() is not create a new  object. Using tf.split() and tf.concat() will has some bugs......
For example, I has a [64,20] tensor, and split to [64,15], and then concat it with a [64,1] tensor, but I obtain a [64,21] tensor instead [64,16]
Source code / logs
`import tensorflow as tf
import  numpy
from tensorflow.python.ops import tensor_array_ops, control_flow_ops
gen_x = tensor_array_ops.TensorArray(dtype=tf.int32,size=1,dynamic_size=True, infer_shape=True)
tmp = tf.constant(-1,shape=[64,20])
t = tf.split(tmp,[15],1)
t = tf.squeeze(t)
gen_x = gen_x.write(0,tf.constant(1,shape=[64]))
gen_tmp = tf.transpose(gen_x.stack(), perm=[1, 0])
feature = tf.concat([t,gen_tmp],1)


config = tf.ConfigProto()
config.gpu_options.allow_growth = True
sess = tf.Session(config=config)
print sess.run(tf.shape(feature))`

Result:
$ python test.py
[64 21]