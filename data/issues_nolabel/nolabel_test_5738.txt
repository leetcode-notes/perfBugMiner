tf.sub error message for bad types is confusing

tf.sub() displays a strange error message if the types don't match:
TypeError: DataType uint8 for attr 'T' not in list of allowed values: float16, float32, float64, int32, int64, complex64, complex128
It's unclear what attr 'T' is.
Expected behavior:
for tf.add(), tf.mul(), tf.div(), the message makes sense:
TypeError: Input 'y' of 'Add' Op has type int64 that does not match type uint8 of argument 'x'.
It seems to me that tf.sub() should print a similar message.
What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?
none
Environment info
Operating System:
Darwin Kens-MacBook-Pro.local 16.1.0 Darwin Kernel Version 16.1.0: Thu Oct 13 21:26:57 PDT 2016; root:xnu-3789.21.3~60/RELEASE_X86_64 x86_64
Installed version of CUDA and cuDNN: none


A link to the pip package you installed:
export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-0.10.0-py2-none-any.whl"


The output from python -c "import tensorflow; print(tensorflow.__version__)".
0.11.0


If possible, provide a minimal reproducible example
import tensorflow as tf
x0 = tf.constant(1, dtype=tf.uint8)
x1 = tf.constant(255, dtype=tf.int64)
x2 = tf.sub(x0, x1)