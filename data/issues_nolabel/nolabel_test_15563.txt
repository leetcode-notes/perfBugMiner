Cannot statically link against Tensorflow library in Golang

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): 1.4.0
Bazel version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A
Exact command to reproduce: go build -a -v -o hellotf --ldflags '-linkmode external -extldflags "-static -L /usr/local/lib"' -x <GITHUB_PROJ_NAME>/hellotf

Describe the problem
I'm trying to compile a statically-linked binary of the hello world app against the TF 1.4.0 binary per the golang install & hello-world instructions and am not able to successfully link against the TF library as it reports that ltensorflow cannot be found by /usr/bin/ld in the go build.
The command used is:
go build -a -v -o hellotf --ldflags '-linkmode external -extldflags "-static -L /usr/local/lib"' -x <GITHUB_PROJ_NAME>/hellotf
I've tried linking against /usr/local/lib (where libtensorflow lives) using -extldflags, CGO_LDFLAGS, LDFLAGS etc, done sudo ldconfig and the env setup with LD_LIBRARY_PATH and LIBRARY_PATH, but cannot move past this step and always get the error status:
/.gvm/gos/go1.8.3/pkg/tool/linux_amd64/link: running gcc failed: exit status 1
/usr/bin/ld: cannot find -ltensorflow

The only related issue I've encountered for this is: https://stackoverflow.com/questions/44428816/tensorflow-for-go-demo-example-run-failed, but that didn't help much either.
That being said, I can dynamically link and build the helloworld go code e.g. go build hello_tf.go and go test github.com/tensorflow/tensorflow/tensorflow/go all work successfully; the issue arises when I try to statically link and cannot link to libtensorflow after it compiles, no matter what settings I try using.
Any help or advice would be greatly appreciated. Thanks!