tf.layers.batch_normalization shape bug

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): ubuntu 16.04 / archlinux
TensorFlow installed from (source or binary):binary
TensorFlow version (use command below):v1.6.0-0-gd2e24b6039 1.6.0
Python version: 3.6
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:
Exact command to reproduce:

x = tf.placeholder(tf.float32, [100,100,100,100])
y = tf.layers.batch_normalization(x, axis=1, renorm=True, training=True, virtual_batch_size=2)
It throws:
ValueError: Dimension 1 in both shapes must be equal, but are 1 and 50. Shapes are [1,1,100,1,1] and [1,50,100,1,1]. for 'batch_normalization/AssignMovingAvg' (op: 'AssignSub') with input shapes:
[1,1,100,1,1], [1,50,100,1,1].

However,
x = tf.placeholder(tf.float32, [None,100,100,100])
y = tf.layers.batch_normalization(x, axis=1, renorm=True, training=True, virtual_batch_size=2)
works fine.