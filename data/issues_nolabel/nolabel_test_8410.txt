tfdbg strange things about detecting NAN weights in network

What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?
Hi all, I just meet the NAN weight in the training for my network, I have check the loss and see whether there is like the form of 0/0, or log(0) and changing the learning rate but it still meet the problem when I try in the 200 steps. So i use tfdbg to debug, it is really nice tool. But when I use it, it running only several steps and stop. And I print this node out, this node has so many numbers. when I use pt node, and there is so many numbers to detect, I am not find the inf and nan. Besides, the weights i even not change it, so what cause this problem
Environment info
Operating System:
Ubuntu 14:04
Cuda 8.0
cuDNN5.1
Installed version of CUDA and cuDNN:
this is output in the screen--- run-end: run #103: fetch: t_DQN/dqn_q/BiasAdd:0; 2 feeds ----------------------------------------------------
Tensor "encoder/conv0/Conv2D:0:DebugIdentity":
dtype: float32
shape: (8, 149, 149, 32)
array([[[[ -2.31261123e-02,  -2.28441790e-01,  -1.15194634e-01,   1.87772080e-01,   1.52234808e-01,
9.16329771e-02,  -1.40365764e-01,   8.70720018e-04,   1.98106512e-01,  -3.14010084e-02,
5.08706868e-02,  -1.47755712e-01,   1.76122814e-01,   4.00081761e-02,  -1.88322872e-01,
-1.56596974e-01,  -1.78046972e-01,  -1.91862926e-01,  -1.90227181e-01,  -6.63982928e-02,
1.77524462e-01,  -7.36486465e-02,  -6.05005510e-02,   1.09997056e-01,   9.24435183e-02,
4.22568992e-05,  -1.06559973e-03,   9.99473780e-02,  -1.73573643e-02,   1.16514668e-01,
-1.51743174e-01,   2.23651499e-01],
[ -2.14941762e-02,  -2.30754048e-01,  -1.18553132e-01,   1.89629942e-01,   1.53854966e-01,