tf.get_variable without an explicit initializer fails for integer types

The following fails (shape and name are arbitrary):
tf.get_variable(name='foo', shape=(42,), dtype=tf.int32)

Exception: TypeError: Expected int32, got -1.7320508075688772 of type 'float' instead.
In contrast, using tf.float32 works just fine.
The problem appears to be https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/variable_scope.py#L658
If an initializer is not provided (and a default one is not set), a uniform unit scaling init is used (notice that sqrt(3)==1.7320...), which of course conflicts with the requested integer type.
While this can be mitigated by doing something like:
tf.get_variable(name='foo', dtype=tf.int32, initializer=tf.zeros_initializer(shape=(42,), dtype=tf.int32))

it feels like a smarter default behavior based on the variable type is warranted (or at least a less cryptic error).
Tested on the current master.