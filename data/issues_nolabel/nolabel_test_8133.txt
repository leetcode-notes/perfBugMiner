About using tf.contrib.layers.optimize_loss with optimizer="Momentum" as arg

I'm trying to implement a train op using tf.contrib.layers.optimize_loss. I would like to use the optimizer train.MomentumOptimizer . One way to do it is to pass the arg "Momentum" to the parameter optimizer like this:
    train_op = tf.contrib.layers.optimize_loss(
        loss=loss,
        global_step=tf.contrib.framework.get_global_step(),
        learning_rate=0.001,
        optimizer="Momentum")
It turns out I get an error:
__init__() missing 1 required positional argument: 'momentum'

I think the reason is that when the function optimize_loss wants to instanciate a new optimizer by looking into OPTIMIZER_CLS_NAMES it calls  tensorflow\contrib\layers\python\layers\optimizers.py", line 195, in optimize_loss :
opt = OPTIMIZER_CLS_NAMES[optimizer](learning_rate=lr)
However, among the whole list of optimizers in OPTIMIZER_CLS_NAMES, train.MomentumOptimizer is the only one that needs a second mandatory parameter in its __init__ method:
class MomentumOptimizer(optimizer.Optimizer):
  """Optimizer that implements the Momentum algorithm.

  @@__init__
  """

  def __init__(self, learning_rate, momentum,
               use_locking=False, name="Momentum", use_nesterov=False):
... whereas the other ones don't. Am I missing something?
Thank you in advance