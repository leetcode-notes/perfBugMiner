reduce_prod shape bug

Installed TensorFlow using pip package for v0.10.0rc0 on Ubuntu with python 2.7
Pip package https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl
The same error appears in the GPU build.
The following minimal code example produces raise an exception at the definition of z
u = tf.placeholder(dtype=tf.float64, shape=(30,30))
v = tf.reduce_prod(u, reduction_indices=[0]) 
w = tf.gradients( v, u )

x = tf.placeholder(dtype=tf.float64, shape=(30,30))
y = tf.reduce_prod(x, reduction_indices=0) 
z = tf.gradients( y, x )


z = tf.gradients( y, x )
File "HOME/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py", line 478, in gradients
in_grads = _AsList(grad_fn(op, *out_grads))
File "HOME/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/math_grad.py", line 130, in _ProdGrad
other, _ = array_ops.listdiff(idx, reduced)
File "HOME/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py", line 1201, in list_diff
result = _op_def_lib.apply_op("ListDiff", x=x, y=y, name=name)
File "HOME/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py", line 703, in apply_op
op_def=op_def)
File "HOME/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 2312, in create_op
set_shapes_for_outputs(ret)
File "HOME/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 1704, in set_shapes_for_outputs
shapes = shape_func(op)
File "HOME/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py", line 1981, in _ListDiffShape
op.inputs[1].get_shape().assert_has_rank(1)
File "HOME/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py", line 621, in assert_has_rank
raise ValueError("Shape %s must have rank %d" % (self, rank))
ValueError: Shape () must have rank 1

The top code for u,v and w does not raise an error but the similar code for x,y, and z does. It looks like the shape code for reduce_prod cannot cope with the case where the reduction_indices is a single integer rather than a list. If you replace reduce_prod with reduce_sum in the above snippet then it does not raise an error.