Trying to use tensorflow to classify multi-class data

tensorflow is a new tool for me and this is my first try. I'm trying to train my model using jupyter notebook in 'mac' for a Multi-class problem (Bike Sharing Demand | Kaggle). I am using '1.0.1' tensorflow version and Python 3.5. I have this error:
ValueError                                Traceback (most recent call last)
<ipython-input-364-b19ec441d9ef> in <module>()
      5 tf.global_variables_initializer().run()
      6 for _ in range(1000):
----> 7     sess.run(train_step, feed_dict={x: X, y_: Y})

ValueError: Cannot feed value of shape (10, 10886) for Tensor 'Placeholder_66:0', which has shape '(?, 10)'

My Feature size= (10886,10) & Label size= (10886,1).
My goal is to predict how many customers will rent the bike per day. I found 822 different number in the labels. I used this number to fix number of classes to fit the code. I am wondering if I did something wrong in the code or tensorflow doesn't work for this kind of problems?
you can find my code written below:
X = np.array(train[['season','weather','temp','weekday','month','humidity','new_windspeed','hours','year','atemp']]) #My train input features
X = np.transpose(X)
Y = np.array(train['count']) # label
Y=np.reshape(Y,(1,10886))
learning_rate= 0.000001
training_epochs= 2000
display_step= 50
n_samples= Y.size
x= tf.placeholder(tf.float32,[None,10])
W = tf.Variable(tf.zeros([10,822])) 
b = tf.Variable(tf.zeros([822]))
y = tf.nn.softmax(tf.matmul(x,W)+b)
y_ = tf.placeholder(tf.float32, [None,822])
cross_entropy = tf.reduce_mean(-tf.reduce_sum(y_ * tf.log(y), reduction_indices=[1]))
train_step = tf.train.GradientDescentOptimizer(0.5).minimize(cross_entropy)
sess = tf.InteractiveSession()
tf.global_variables_initializer().run()
for _ in range(1000):
    sess.run(train_step, feed_dict={x: X, y_: Y})