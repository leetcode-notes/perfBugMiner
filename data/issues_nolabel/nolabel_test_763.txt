Non-blocking queuing and running on thread pool

Addresses #551 and should address #583
For a benchmark on running the December Inception model 100 times (20 in parallel at a time) on a 32 vcore CPU, results are:
Current implementation (baseline)
211.17user 154.92system 0:15.42elapsed 2373%CPU (0avgtext+0avgdata 950024maxresident)k
0inputs+0outputs (0major+186279minor)pagefaults 0swaps

Lock free implementation
204.62user 27.12system 0:09.08elapsed 2551%CPU (0avgtext+0avgdata 737888maxresident)k
0inputs+0outputs (0major+122158minor)pagefaults 0swaps

So throughput is improved by ~35% and system overhead is greatly reduced.
This is a port of existing code, which will be cleaned up for style and better integrated.  I'm interested in a preliminary review of approach, applicability and interest in getting it fully merged for the moment.