TensorArray `name` using a Tensor

System information
python-version: ('v1.2.0-rc1-24-gce1d6ec', '1.2.0-rc2')
Describe the problem
Looks like the name of the TensorArray is a Tensor and that Tensor is being treated as a boolean in a call to name_scope.
Source code / logs
ta = tf.TensorArray(
          dtype=tf.float32,
          size=100,
          dynamic_size=False,
          colocate_with_first_write_call=False,
          clear_after_read=True,
          infer_shape=False)
# write a bunch of stuff
out = ta.gather(0, 12)

Trace:
    out = ta.gather(0, 12)
  File "/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/tensor_array_ops.py", line 360, in gather
    element_shape=element_shape)
  File "/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_data_flow_ops.py", line 1814, in _tensor_array_gather_v3
    element_shape=element_shape, name=name)
  File "/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py", line 374, in apply_op
    with g.as_default(), ops.name_scope(name) as scope:
  File "/usr/local/Cellar/python/2.7.12/Frameworks/Python.framework/Versions/2.7/lib/python2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 4359, in name_scope
    with g.as_default(), g.name_scope(n) as scope:
  File "/usr/local/Cellar/python/2.7.12/Frameworks/Python.framework/Versions/2.7/lib/python2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 3009, in name_scope
    if name:
  File "/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 578, in __nonzero__
    raise TypeError("Using a `tf.Tensor` as a Python `bool` is not allowed. "
TypeError: Using a `tf.Tensor` as a Python `bool` is not allowed. Use `if t is not None:` instead of `if t:` to test if a tensor is defined, and use TensorFlow ops such as tf.cond to execute subgraphs conditioned on the value of a tensor.