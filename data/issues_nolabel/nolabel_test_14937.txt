_dynamic_rnn_loop flat_output_size prevents arbitrary-shaped output tensors

I want a custom RNN cell to output multiple tensors, each with a different shape. I can handle the logic internally, but I'm running into the issue that _dynamic_rnn_loop automatically constructs initial outputs using flat_output_size = nest.flatten(cell.output_size). This is problematic because the flattening prevents me from specifying arbitrary-shapes for my output tensors.
For concreteness, I'd like to output three tensors with shapes (batch size, a), (batch size, b), (batch size, c, d, e). However, both
@property
def output_size(self):
    return (a, b, (c, d, e))

and
@property
def output_size(self):
    return (a, b, c, d, e)

fail to create a third tensor with shape (batch size, 210, 160, 3). In the first case, zero_output is a tuple of (batch size, a), (batch_size, b), ((batch size, c), (batch size, d), and (batch size, e)). In the second case, the zero_output is a tuple of (batch size, a), (batch_size, b), (batch size, c), (batch size, d), and (batch size, e).
I feel that RNN cell outputs should be permitted to be arbitrary shapes. I don't know if this is a desired feature or a bug.
Linux Ubuntu 16.04
TensorFlow versions: ('v1.3.0-rc1-5211-gab0fcac', '1.5.0-dev20171127')