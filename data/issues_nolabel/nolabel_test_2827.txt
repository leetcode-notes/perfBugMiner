_reverse_seq in rnn.py

I can't figure out the usage of _reverse_seq in rnn.py
followings are my code
encoder_inputs = []
for i in range(3):
            encoder_inputs.append(tf.placeholder(tf.int32, shape = [None,3], name = 'encoder{}'.format(i)))

train_encoder_batches, train_decoder_batches, train_target_batches, train_target_weight_batches = train_data
input_feed = dict()
encoder_data = np.array([[[1,2,3],[1,2,3]],[[1,2,3],[1,2,3]],[[0,0,0],[0,0,0]]])
for i in xrange(3):
    input_feed[encoder_inputs[i].name] = encoder_data[i]

output_feed = [rnn._reverse_seq(encoder_inputs,tf.Variable([2,2]))]
print np.asarray([[1,2,3],[1,2,3]])

sess = tf.InteractiveSession()
print sess.run(output_feed,input_feed)
tf.Variable([2,2]) means that (batch size : 2) each length of elements in batch is 2
data : vector size 3, total length 3, useful length 2
errors are as follows :
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-28-b8ae6f496e18> in <module>()
      1 sess = tf.InteractiveSession()
----> 2 print sess.run(output_feed,input_feed)

/opt/anaconda2/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in run(self, fetches, feed_dict, options, run_metadata)
    338     try:
    339       result = self._run(None, fetches, feed_dict, options_ptr,
--> 340                          run_metadata_ptr)
    341       if run_metadata:
    342         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)

/opt/anaconda2/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in _run(self, handle, fetches, feed_dict, options, run_metadata)
    521 
    522     # Validate and process fetches.
--> 523     processed_fetches = self._process_fetches(fetches)
    524     unique_fetches = processed_fetches[0]
    525     target_list = processed_fetches[1]

/opt/anaconda2/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in _process_fetches(self, fetches)
    491           raise TypeError('Fetch argument %r of %r has invalid type %r, '
    492                           'must be a string or Tensor. (%s)'
--> 493                           % (subfetch, fetch, type(subfetch), str(e)))
    494         except ValueError as e:
    495           raise ValueError('Fetch argument %r of %r cannot be interpreted as a '

TypeError: Fetch argument [<tf.Tensor 'unpack_4:0' shape=(2, 3) dtype=int32>, <tf.Tensor 'unpack_4:1' shape=(2, 3) dtype=int32>, <tf.Tensor 'unpack_4:2' shape=(2, 3) dtype=int32>] of [<tf.Tensor 'unpack_4:0' shape=(2, 3) dtype=int32>, <tf.Tensor 'unpack_4:1' shape=(2, 3) dtype=int32>, <tf.Tensor 'unpack_4:2' shape=(2, 3) dtype=int32>] has invalid type <type 'list'>, must be a string or Tensor. (Can not convert a list into a Tensor or Operation.)