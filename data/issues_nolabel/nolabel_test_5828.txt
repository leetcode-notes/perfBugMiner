tf.train.range_input_producer computes "limit" argument more than once

Hello, I have an issue with unexpected behavior of range_input_producer. It recomputes its "limit" argument more times than needed.
`
import tensorflow as tf
limit = tf.Print(tf.constant(5, dtype=tf.int32), [0], "compute limit")
range = tf.train.range_input_producer(limit, shuffle=False, num_epochs=1)
idx = range.dequeue()
with tf.Session() as ss:
ss.run(tf.initialize_all_variables())
ss.run(tf.initialize_local_variables())
coord = tf.train.Coordinator()
threads = tf.train.start_queue_runners(sess=ss, coord=coord)
while True:
print(ss.run([idx]))
`
When num_epoch=1, the output will have "compute limit" twice. I expect it to appear only once.
When num_epoch=None, the output will have infinitely many "compute limit" messages. But I am expecting, that it should read limit only once and then cycle through generated range infinitely.
Things get important when "limit" is coming from previous queue, which after getting empty produces OutOfRange and for some reasons it is not handled by range_input_producer.
Environment info
Operating System: Fedora 24
Installed version of CUDA and cuDNN:
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
/usr/local/cuda/lib64/libcudadevrt.a       /usr/local/cuda/lib64/libcudnn.so
/usr/local/cuda/lib64/libcudart.so         /usr/local/cuda/lib64/libcudnn.so.5
/usr/local/cuda/lib64/libcudart.so.8.0     /usr/local/cuda/lib64/libcudnn.so.5.1.5
/usr/local/cuda/lib64/libcudart.so.8.0.44  /usr/local/cuda/lib64/libcudnn_static.a
/usr/local/cuda/lib64/libcudart_static.a
If installed from binary pip package, provide:

A link to the pip package you installed:
https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0-cp35-cp35m-linux_x86_64.whl
The output from python -c "import tensorflow; print(tensorflow.__version__)".
0.11.0