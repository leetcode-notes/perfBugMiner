gather_nd gradient / scatter_nd is broken

Test code:
import tensorflow as tf
session = tf.InteractiveSession()

n_base_time = 5
n_in = 7
n_beam = 3
n_batch = 1
base = tf.ones((n_base_time, n_batch, n_in))  # (base_time,batch,n_in)
idxs_exp = tf.constant(0, shape=(n_beam, n_batch, 2), name="idxs_exp")  # (beam,batch,2), where the 2 stands for (base_time,batch)
# Thus K == 2. gather_nd out will be idxs_exp.shape[:2] + params.shape[2:] = (beam,batch,n_in).
gathered = tf.gather_nd(base, idxs_exp)  # (beam,batch,n_in)
gathered_shape, _ = session.run([tf.shape(gathered), gathered])
assert list(gathered_shape) == [n_beam, n_batch, n_in]

base_grad = tf.gradients(gathered, base)
assert base_grad is not None
session.run(base_grad)

The first session.run as well as the assert-check for the gathered_shape works fine but then the second session.run for the gradient breaks with the exception:
InvalidArgumentError (see above for traceback): Must have updates.shape = indices.shape[:IXDIM] + params_shape[IXDIM:], got updates.shape [3,1,7], indices.shape [3,1,2], params_shape [5,1,7]
         [[Node: gradients/GatherNd_grad/ScatterNd = ScatterNd[T=DT_FLOAT, Tindices=DT_INT32, _device="/job:localhost/replica:0/task:0/cpu:0"](idxs_exp, gradients/Fill/_39, gradients/GatherNd_grad/Shape)]]

This exception message is also confusing because what it complains about what is not the case seems to be actually the case.