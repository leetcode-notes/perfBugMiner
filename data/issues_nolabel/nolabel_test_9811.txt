Tensorflow Session Memory Leak

System information

**Have I written custom code :                                     YES
**OS Platform and Distribution :                                   Mac OS
TensorFlow installed from (source or binary):      From Source
TensorFlow version (use command below):         tensorflow (1.1.0)
Bazel version (if compiling from source):             bazel-0.4.5
CUDA/cuDNN version:                                            not used
GPU model and memory:                                        not used
Exact command to reproduce:                               used in an app

Describe the problem
I am using the tensorlfow C++ API and I have linked the tensor flow framework to perform a prediction using an inference.pb file.
The inference works but I have a Memory leak which (according to instruments) is linked to the session->Close().
My function is:
- (double) MLPredictionObjC: (float[24]) inputFeatures {
    double results[]={0.0};

    NSString *path = [[NSBundle mainBundle] pathForResource:@"inference84" ofType:@"pb"];

    if ([self loadGraphFromPath:path] && [self createSession]) {
        double resultsP = [self predictML:inputFeatures];
        session->Close();
        return resultsP;
    }
    return *results;
}

// the other functions associated with loading and creating the session are:
- (BOOL)loadGraphFromPath:(NSString *)path  
{
    ReadBinaryProto(tensorflow::Env::Default(), path.fileSystemRepresentation, &graph);
    return YES;
}

- (BOOL)createSession
{
        tensorflow::SessionOptions options;
        tensorflow::NewSession(options, &session);
        session->Create(graph);
        return YES;
}

I am not sure how to resolve this? should I be using std::unique_ptr session?