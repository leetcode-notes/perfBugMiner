MobileNet v2 vs MobileNet v1 - bug with retrain.py and label_image.py examples

System information
We have reproduced this on Mac OSX, a windows box running a Linux VM, and on a Canadian research cluster all with the same result.

mac was v1.7 recompiled to take advantage of CPU: ('v1.7.0-1321-gd82b2f71b6', '1.7.0')
stock tensorflow code and examples

Description
We are using Tensorflow v1.7.  We train MobileNet v2 (from tfHub - feature/1 version) by running the code Tensorflow provided in retrain.py (from examples). When training is done the validation set is run (for us about 700 images) and it reports say 80% validation accuracy.   Then it saves the model.  We load the saved model using label_image.py (also from tensorflow examples) and see how it's doing on a small validation set that we've withheld.  Instead of seeing the validation of 80% roughly confirmed, we instead see a validation accuracy of about 35%.  The clincher is that when use the same code and data and instead use MobileNet v1 we do see that training validation is confirmed by validation reported using label_image.py .
When calling label_image we change the input_layer from "input" for MobileNet v1 to "Placeholder" for MobileNet v2
Can you confirm this? What is going on?
Logs:
From retrain.py:
...
INFO:tensorflow:Initialize variable module/MobilenetV2/expanded_conv_9/project/weights:0 from checkpoint /var/folders/x8/f10sgc052q75r1thg5hlw4dm0000gn/T/tfhub_modules/33f8428fe83945b8b3d46d79168a0e2818e65e8a/variables/variables with MobilenetV2/expanded_conv_9/project/weights
INFO:tensorflow:Restoring parameters from /tmp/_retrain_checkpoint
INFO:tensorflow:Final test accuracy = 74.0% (N=696)
...
then from using label_image.py:
it gets 35% is correct
Have I written custom code: no
OS Platform and Distribution: macosx latest
TensorFlow installed from: pip
TensorFlow version: 1.7
Bazel version: Build label: 0.11.1-homebrew
Build target: bazel-out/darwin-
opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar
Build time: Sun May 31 16:57:39 +50150 (1520426998659)
Build timestamp: 1520426998659
Build timestamp as int: 1520426998659
CUDA/cuDNN version: N/A
GPU model and memory: N/A
Exact command to reproduce: see above