Do the ksize and strides value of tf.nn.max_pool() support tf.Tensor ?

Here is the problem:
I would like to train a network with two different shapes of input tensor. Each epoch chooses one type. Here I write a small code:
import tensorflow as tf
import numpy as np


with tf.Session() as sess:

    imgs1 = tf.placeholder(tf.float32, [4, 224, 224, 3], name = 'input_imgs1')
    imgs2 = tf.placeholder(tf.float32, [4, 180, 180, 3], name = 'input_imgs2')
    epoch_num_tf = tf.placeholder(tf.int32, [], name = 'input_epoch_num')

    imgs = tf.cond(tf.equal(tf.mod(epoch_num_tf, 2), 0), 
                lambda: tf.Print(imgs2, [imgs2.get_shape()], message='(even number) input epoch number is '),
                lambda: tf.Print(imgs1, [imgs1.get_shape()], message='(odd number) input epoch number is'))


    print(imgs.get_shape())


    for epoch in range(10):
        epoch_num = np.array(epoch).astype(np.int32)
        imgs1_input = np.ones([4, 224, 224, 3], dtype = np.float32)
        imgs2_input = np.ones([4, 180, 180, 3], dtype = np.float32)

        output = sess.run(imgs, feed_dict = {epoch_num_tf: epoch_num,
                                          imgs1: imgs1_input,
                                          imgs2: imgs2_input})

When I execute it, the output of imgs.get_shape() is (4, ?, ?, 3) i.e. imgs.get_shape()[1]=None, imgs.get_shape()[2]=None.
But I will use the value of the output of imgs.get_shape() to define the kernel (ksize) and strides size (strides) of the tf.nn.max_pool() e.g. ksize=[1,imgs.get_shape()[1]/6, imgs.get_shape()[2]/6, 1] in the future code. I think ksize and strides cannot support tf.Tensor value.
How to solve this problem?
I also asked in the stackoverflow.