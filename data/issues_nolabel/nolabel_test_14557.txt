Improve SkipNBytes to RandomInputStream

This fix tries to address the issue raised in #14512 where SkipNBytes will takes a long time. In existing implementation, it needs to read through the file even though it is possible to random access the file itself.
This fix convert SkipNBytes in InputStreamInterface to pure virtual so that it is possible to have different implementations based on the underlying file type (seekable vs. no seekable)
This fix then have a specialized implementation in RandomInputStream so that

The SkipNBytes will first try to read 1 bytes from expected_pos - 1, if completed, then return.
If an out of range error returned from last step, then we don't know how far away we are from the EOF. We are forced to read through the file from the current pos all the way to expected_pos. This is similar to existing implementation.

Note: Because RandomAccessFile only exposes Read (with start offset), not SizeOfFile, it is not possible to just move the position marker as we won't know where is the EOF.
One potential improvement could be to expose a SizeOfFile in RandomAccessFile. That means adding additional changes. It could be added if it is agreed.
This fix fixes #14512.
Signed-off-by: Yong Tang yong.tang.github@outlook.com