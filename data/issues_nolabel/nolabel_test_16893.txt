Building TensorFlow v1.5.0 from sources does not detect bazel v0.10.0 correctly

It looks like build script uses strings for version comparison, i.e. tuple ("0", "10", "0") < ("0", "4", "5"), hence Bazel version 0.10.0 is considered less then required version 0.4.5:
user@server:~/tensorflow-1.5.0$ bazel build --config opt //tensorflow/java:tensorflow //tensorflow/java:libtensorflow_jni
ERROR: /home/user/tensorflow-1.5.0/WORKSPACE:15:1: Traceback (most recent call last):
        File "/home/user/tensorflow-1.5.0/WORKSPACE", line 15
                closure_repositories()
        File "/home/user/.cache/bazel/_bazel_user/999dc7eb04d16a3dd0103e4cb7e7e45c/external/io_bazel_rules_closure/closure/repositories.bzl", line 69, in closure_repositories
                _check_bazel_version("Closure Rules", "0.4.5")
        File "/home/user/.cache/bazel/_bazel_user/999dc7eb04d16a3dd0103e4cb7e7e45c/external/io_bazel_rules_closure/closure/repositories.bzl", line 172, in _check_bazel_version
                fail(("%s requires Bazel >=%s but was...)))
Closure Rules requires Bazel >=0.4.5 but was 0.10.0- (@non-git)

OS Platform and Distribution: SuSE Linux 12.3
TensorFlow installed from: this source
TensorFlow version: 1.5.0
Bazel version: 0.10.0, compiled from this source
CUDA/cuDNN version: N/A / was not enabled
GPU model and memory: N/A / was not enabled
Exact command to reproduce: bazel build --config opt //tensorflow/java:tensorflow //tensorflow/java:libtensorflow_jni