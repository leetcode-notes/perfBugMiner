Automated Docker image build and test

Breaking up the pip.sh into the install and test-on-install

This is aimed at automating testing of docker images.
Also, a step is added in pip.sh to uninstall existing versions of
protobuf and tensorflow if they exist. This addresses pip install-test
issues on non-Docker environments (e.g., Mac)

Using virtualenv to perform pip test-on-install

The built pip-package is installed in a virtualenv, then the pip install test and the tutorial
test are carried out inside the virutal env. This is done inside the same docker container as the one used for bazel build, if docker is available.

Automating Docker image build and test

ci_parameterized_build now has a new env-var parameter:
TF_BUILD_DOCKER_TEST, that can be used to trigger Docker image build
and test following the PIP build (i.e., TF_BUILD_IS_PIP=PIP or BOTH).
The image is automatically tagged as ${USER}/tensorflow:${VERSION},
wherein the version is extracted from version.h.
The main script for Docker build and test is the newly added:
docker_test.sh
It uses Dockerfiles in tools/ci_build/docker and installs the whl files
inside the Docker image. After the pip installation step, the Python
unit tests and tutorial tests are inside the Docker container.