Document exceptions to broadcasting semantics

Environment info
Operating System: Ubuntu 14.04, OSX 10.11
Installed from 1b7b7703c8449769ba1cfb7553494c9b472925d7
Output of bazel version:
Build label: 0.3.0
Build target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar
Build time: Fri Jun 10 11:38:23 2016 (1465558703)
Build timestamp: 1465558703
Build timestamp as int: 1465558703

Steps to reproduce
Running this script:
import tensorflow as tf

shape_1 = (50, 1, 20, 10)
shape_2 = (50, 30, 20, 1)

A = tf.Variable(tf.random_normal(shape_1))
B = tf.Variable(tf.random_normal(shape_2))

with tf.Session() as S:
    S.run(tf.initialize_all_variables())
    C = S.run(A+B)

produces
UnimplementedError: Broadcast between [50,1,20,10] and [50,30,20,1] is not supported yet.
What did you try?
Moving the broadcast dimensions to the results in success
shape_1 = (50, 20, 10, 1)
shape_2 = (50, 30, 1, 20)

The following also works
shape_1 = (1, 1, 20, 10)
shape_2 = (1, 30, 20, 1)

as does
shape_1 = (1, 20, 10)
shape_2 = (30, 20, 1)

Discussion
I am aware of #508 and #1519 however this does not appear to be covered by #1519. It would be very nice if the exceptions to normal numpy broadcasting rules were documented somewhere.
A tentative list would include

number of broadcasting dimensions limited to 2
broadcasting dimensions must (sometimes??) be relegated to the last dimensions