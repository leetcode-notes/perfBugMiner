crosstool_wrapper_driver_is_not_gcc failed building tensorflow/tools/graph_transforms:transform_graph

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04
TensorFlow installed from (source or binary): source
TensorFlow version (use command below):  1.3.0 @ commit 635196
Python version: 2.7
Bazel version (if compiling from source): not complied from source but Build label: 0.6.0
CUDA/cuDNN version: CUDA 8.0, cudnn6.0
GPU model and memory: GTX 1080 Ti
Exact command to reproduce: bazel build tensorflow/tools/graph_transforms:transform_graph  --verbose_failures

Describe the problem
Build tensorflow from source successful, verified it works, but cannot build the tool "transform_graph"
ERROR: /home/local/ANT/luxial/tensorflow/tensorflow/tools/graph_transforms/BUILD:222:1: Linking of rule '//tensorflow/tools/graph_transforms:transform_graph' failed (Exit 1): crosstool_wrapper_driver_is_not_gcc failed: error executing command (cd /home/local/ANT/luxial/.cache/bazel/_bazel_luxial/ce09802cfa8c7dbfadcb21edd190af0e/execroot/org_tensorflow && \
  exec env - \
    CUDA_TOOLKIT_PATH=/usr/local/cuda \
    CUDNN_INSTALL_PATH=/usr/local/cuda-8.0 \
    GCC_HOST_COMPILER_PATH=/usr/bin/gcc \
    PWD=/proc/self/cwd \
    PYTHON_BIN_PATH=/usr/bin/python \
    PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \
    TF_CUDA_CLANG=0 \
    TF_CUDA_COMPUTE_CAPABILITIES=6.1 \
    TF_CUDA_VERSION=8.0 \
    TF_CUDNN_VERSION=6 \
    TF_NEED_CUDA=1 \
    TF_NEED_OPENCL=0 \
  external/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -o bazel-out/local_linux-opt/bin/tensorflow/tools/graph_transforms/transform_graph '-Wl,-rpath,$
ORIGIN/../../../_solib_local/_U_S_Stensorflow_Stools_Sgraph_Utransforms_Ctransform_Ugraph___Utensorflow' '-Wl,-rpath,$ORIGIN/../../../_solib_local/_U@local_Uconfig_Ucuda_S_Scuda_Ccu
blas___Uexternal_Slocal_Uconfig_Ucuda_Scuda_Scuda_Slib' '-Wl,-rpath,$ORIGIN/../../../_solib_local/_U@local_Uconfig_Ucuda_S_Scuda_Ccusolver___Uexternal_Slocal_Uconfig_Ucuda_Scuda_Scu
da_Slib' '-Wl,-rpath,$ORIGIN/../../../_solib_local/_U@local_Uconfig_Ucuda_S_Scuda_Ccudart___Uexternal_Slocal_Uconfig_Ucuda_Scuda_Scuda_Slib' -Lbazel-out/local_linux-opt/bin/_solib_l
ocal/_U_S_Stensorflow_Stools_Sgraph_Utransforms_Ctransform_Ugraph___Utensorflow -Lbazel-out/local_linux-opt/bin/_solib_local/_U@local_Uconfig_Ucuda_S_Scuda_Ccublas___Uexternal_Sloca
l_Uconfig_Ucuda_Scuda_Scuda_Slib -Lbazel-out/local_linux-opt/bin/_solib_local/_U@local_Uconfig_Ucuda_S_Scuda_Ccusolver___Uexternal_Slocal_Uconfig_Ucuda_Scuda_Scuda_Slib -Lbazel-out/local_linux-opt/bin/_solib_local/_U@local_Uconfig_Ucuda_S_Scuda_Ccudart___Uexternal_Slocal_Uconfig_Ucuda_Scuda_Scuda_Slib '-Wl,-rpath,$ORIGIN/,-rpath,$ORIGIN/..,-rpath,$ORIGIN/../..' -Wl,-z,muldefs -Wl,-z,muldefs -Wl,-rpath,../local_config_cuda/cuda/lib64 -Wl,-rpath,../local_config_cuda/cuda/extras/CUPTI/lib64 -pthread -Wl,-no-as-needed -B/usr/bin/ -fPIC -pie -Wl,-z,relro,-z,now -no-canonical-prefixes -pass-exit-codes '-Wl,--build-id=md5' '-Wl,--hash-style=gnu' -Wl,--gc-sections -Wl,@bazel-out/local_linux-opt/bin/tensorflow/tools/graph_transforms/transform_graph-2.params)

What I tried
Basically everything in #8790, #4365, #817

export LD_LIBRARY_PATH=/usr/local/cuda 8.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
Upgrade Bazel, current build label 0.6.0
bazel clean --expunge
Adding -fPIC to the options in ../third_party/gpus/crosstool/CROSSTOOL_nvcc.tpl line 60.
Add cpu_compiler_flags.append('-fno-use-linker-plugin') in third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc.tpl

None of them solve the issue.