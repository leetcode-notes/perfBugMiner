second order differential of fused_batch_norm makes a large number of nodes.

I found that the second order differential of tf.nn.fused_batch_norm has much larger number of nodes than that of tf.nn.batch_normalization.
I wrote a sample program which has 7 batch normalization layers. Using tf.nn.fused_batch_norm, it has about 22,000 nodes. On the other hand, using tf.nn.batch_normalization, it has only 1700 nodes (I counted with tensorboard). Is this a reasonable behavior?
Source Code
import numpy as np
import tensorflow as tf

use_fused_batch_norm = False

with tf.name_scope("network"):
    featmap = tf.constant(np.random.rand(3,3,32,32), dtype=tf.float32)

    for i in range(7):
        with tf.name_scope("layer{}".format(i)):
            if use_fused_batch_norm:
                beta = tf.Variable(np.zeros(3), name="beta", dtype=np.float32)
                gamma = tf.Variable(np.ones(3), name="gamma", dtype=np.float32)
                featmap, _, _ = tf.nn.fused_batch_norm(featmap, gamma, beta, data_format="NCHW")

            else:
                beta = tf.Variable(np.zeros([1,3,1,1]), name="beta", dtype=np.float32)
                gamma = tf.Variable(np.ones([1,3,1,1]), name="gamma", dtype=np.float32)
                mu, sigma = tf.nn.moments(featmap, axes=[0,2,3], keep_dims=True)

                featmap = tf.nn.batch_normalization(featmap, mu, sigma, beta, gamma, variance_epsilon=1e-07)

    y = tf.reduce_mean(featmap, axis=[1,2,3])

W = tf.trainable_variables()

with tf.name_scope("rop"):
    temporary = tf.ones_like(y)
    grad      = tf.gradients(y, W, grad_ys=temporary)
    r         = [tf.ones_like(t) for t in W]
    ggrad     = tf.gradients(grad, temporary, grad_ys=r)[0]


with tf.Session() as sess:
    summary_writer = tf.summary.FileWriter("log",
                                           sess.graph)



System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Ubuntu 16.04
TensorFlow installed from (source or binary):
binary
TensorFlow version (use command below):
('v1.5.0-0-g37aa430d84', '1.5.0')
Python version:
2.7.12
CUDA/cuDNN version:
cuda9 / cudnn 7.0.5
GPU model and memory:
GTX 1080, 8GB
Exact command to reproduce:
python main.py
Bazel version
N/A