Relex restrictions on `tf.foldr` and `tf.foldl`

This fix tries to address the issue raised in #12019 where tf.foldr and tf.foldl only accpet first shape dimensions be identical for all list elements.
The issue comes from the implementation of tf.foldr and tf.foldl where the input elems is converted to tensor, then converted to tensor array:

  
    
      tensorflow/tensorflow/python/ops/functional_ops.py
    
    
        Lines 100 to 106
      in
      1e1b3d9
    
    
    
    

        
          
           # Convert elems to tensor array. 
        

        
          
           elems = ops.convert_to_tensor(elems, name="elems") 
        

        
          
           n = array_ops.shape(elems)[0] 
        

        
          
           elems_ta = tensor_array_ops.TensorArray(dtype=elems.dtype, size=n, 
        

        
          
                                                   dynamic_size=False, 
        

        
          
                                                   infer_shape=True) 
        

        
          
           elems_ta = elems_ta.unstack(elems) 
        
    
  


It is possible to bypass the conversion to tensor, and go directly to tensor array, as long as the input elems is Iterable (and pass infer_shape=False)
This fix is an proposal to relex the restriction on tf.foldr and tf.foldl so that a list of elements with different shapes could be passed.
This fix fixes #12019.
Signed-off-by: Yong Tang yong.tang.github@outlook.com