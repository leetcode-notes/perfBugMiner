Padding algo is not working as doc says

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linus centos 7
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): 1.4
Python version: 2.7.5
Bazel version (if compiling from source): 0
GCC/Compiler version (if compiling from source):0
CUDA/cuDNN version:0
GPU model and memory:0
Exact command to reproduce:

In the following situation, TF doc is not correct.

Input tensor shape : [1, 5, 2, 1]
Kernel shape:           [1, 3, 1, 1]
Stride :                      [1, 5, 5, 1]
Padding =                  "SAME"

According to the formula we can compute :
out_h = 1
out_w = 1
if (in_height % strides[1] == 0):
  pad_along_height = max(filter_height - strides[1], 0)
else:
  pad_along_height = max(filter_height - (in_height % strides[1]), 0)
if (in_width % strides[2] == 0):
  pad_along_width = max(filter_width - strides[2], 0)
else:
  pad_along_width = max(filter_width - (in_width % strides[2]), 0)

gives :
pad_along_height = 0
pad_along_width = 1
then
pad_top = pad_along_height // 2
pad_bottom = pad_along_height - pad_top
pad_left = pad_along_width // 2
pad_right = pad_along_width - pad_left

gives:
pad_top = 0
pad_bottom = 0
pad_left = 0
pad_right = 1
How tensorflow do a convolution with a kernel of height 1 on a image of height 5 and which gives output of height 1 (stride = 5) ??? How TF do this ? The doc can't explain the method used ...
Doing retro engineering, I saw that TF apply the filter on the middle of the input tensor (pad_top = -2 and pad_bottom=-2).
I agree with this method, but the formulas of the Convolution doc is doing max(.., 0) so padding could never be negative (according to the doc).
Could someone explain me clearly what is the formula used in tensorflow ?
Could someone update the doc ?