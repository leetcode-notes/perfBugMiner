Error when run optimizer.compute_gradients

I'm trying to do training with multiple threads
I tried to run optimizer.minimize() in each threads but it didn't work because threads overwrited each other's weight updates. So I'm trying to stack computed gradients in each threads and apply mean or sum of them in another thread.
So I made a code like
w1 = tf.Variable(tf.random_normal([shape], stddev=0.01))
b1 = tf.Variable(tf.constant(0.1, shape=[filters]))
rmsprop = tf.train.RMSPropOptimizer(lr,decay,0.0,eps)
grads = rmsprop.compute_gradients(cost,[w1,b1])
apply_grads = rmsprop.apply_gradients(grads)
If i run apply_grads, it works fine. but when i run grads to get gradients, error occurs like below.
[(<tf.Tensor ~~ shape=~~ dtype=float32>, <tensorflow.python.ops.variables.Variable object at 0x7f6da5fd7350>)] of [(<tf.Tensor ~~ shape=~~ dtype=float32>, <tensorflow.python.ops.variables.Variable object at 0x7f6da5fd7350>)] has invalid type <type "list">, must be a string or Tensor. (Can not convert a list into a Tensor or Operation.)
How can I get gradients for optimizer?
Or is there a efficient way to do training with multiple threads?