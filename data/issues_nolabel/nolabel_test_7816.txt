tensorflow debugger assertion fails

When using tensorflow debugger, the program crashes with the following message :
F tensorflow/core/framework/tensor_util.cc:37] Check failed: DT_STRING == other.dtype() (7 vs. 20)
Aborted (core dumped)


What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?
Nothing
Environment info
Operating System:
Linux ip-172-31-46-19 4.4.0-57-generic #78-Ubuntu SMP Fri Dec 9 23:50:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux
Installed version of CUDA and cuDNN: 8.0 / 5.1
(please attach the output of ls -l /path/to/cuda/lib/libcud*):

-rw-r--r-- 1 root root   558720 sept. 14 23:02 /usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudadevrt.a
lrwxrwxrwx 1 root root       16 sept. 14 23:05 /usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudart.so -> libcudart.so.8.0
lrwxrwxrwx 1 root root       19 sept. 14 23:05 /usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudart.so.8.0 -> libcudart.so.8.0.44
-rw-r--r-- 1 root root   415432 sept. 14 23:02 /usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudart.so.8.0.44
-rw-r--r-- 1 root root   775162 sept. 14 23:02 /usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudart_static.a
lrwxrwxrwx 1 root root       13 déc.   7 11:05 /usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn.so -> libcudnn.so.5
lrwxrwxrwx 1 root root       17 déc.   7 11:05 /usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn.so.5 -> libcudnn.so.5.1.5
-rwxr-xr-x 1 root root 79337624 déc.   7 11:05 /usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn.so.5.1.5
-rw-r--r-- 1 root root 69756172 déc.   7 11:05 /usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn_static.a

If installed from binary pip package, provide:

pip package you installed:

$  pip show tensorflow-gpu
Name: tensorflow-gpu
Version: 1.0.0
Summary: TensorFlow helps the tensors flow
Home-page: http://tensorflow.org/
Author: Google Inc.
Author-email: opensource@google.com
License: Apache 2.0
Location: /home/ubuntu/anaconda3/envs/dl/lib/python3.5/site-packages
Requires: wheel, protobuf, numpy, six


The output from python -c "import tensorflow; print(tensorflow.__version__)".


python -c "import tensorflow; print(tensorflow.__version__)"
I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally
I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally
I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally
I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally
1.0.0

If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)
Currently cannot find what operation makes the debugger crash
What other attempted solutions have you tried?
Nothing
Logs or other output that would be helpful

(gdb) bt
#0  0x00007ffff6a1e428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54
#1  0x00007ffff6a2002a in __GI_abort () at abort.c:89
#2  0x00007fffdf6ce0a4 in tensorflow::internal::LogMessageFatal::~LogMessageFatal() () from /home/ubuntu/anaconda3/envs/dl/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow.so
#3  0x00007fffdf61747f in tensorflow::tensor::DeepCopy(tensorflow::Tensor const&) () from /home/ubuntu/anaconda3/envs/dl/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow.so
#4  0x00007fffdda07082 in tensorflow::CopyOp::Compute(tensorflow::OpKernelContext*) () from /home/ubuntu/anaconda3/envs/dl/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow.so
#5  0x00007fffdf362183 in tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long) ()
   from /home/ubuntu/anaconda3/envs/dl/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow.so
#6  0x00007fffdf351e20 in std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)> (tensorflow::(anonymous namespace)::ExecutorState*, tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)> >::_M_invoke(std::_Any_data const&) ()
   from /home/ubuntu/anaconda3/envs/dl/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow.so
#7  0x00007fffdf6a6960 in std::_Function_handler<void (), Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::NonBlockingThreadPoolTempl(int, tensorflow::thread::EigenEnvironment)::{lambda()#1}>::_M_invoke(std::_Any_data const&) () from /home/ubuntu/anaconda3/envs/dl/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow.so
#8  0x00007fffdf6a5c10 in std::_Function_handler<void (), tensorflow::thread::EigenEnvironment::CreateThread(std::function<void ()>)::{lambda()#1}>::_M_invoke(std::_Any_data const&) ()
   from /home/ubuntu/anaconda3/envs/dl/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow.so
#9  0x00007fffdc573c80 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#10 0x00007ffff76d16ba in start_thread (arg=0x7fff83fff700) at pthread_create.c:333
#11 0x00007ffff6aef82d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109