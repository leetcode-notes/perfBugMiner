Numpy reshape and tf.reshape give different results in MNIST classification

Environment info
Operating System:
Linux anjum-Studio-XPS-1340 4.4.0-31-generic #50-Ubuntu SMP Wed Jul 13 00:07:12 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux

Installed version of CUDA and cuDNN:
Using CPU only version
If installed from binary pip package, provide:

Which pip package you installed: https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.9.0-cp35-cp35m-linux_x86_64.whl
The output from python -c "import tensorflow; print(tensorflow.__version__)".:
0.9.0

Steps to reproduce

Use the example from http://terrytangyuan.github.io/2016/06/09/scikit-flow-v09/#customized-model but edit to use the MNIST dataset instead.
Flatten the MNIST images from 8x8 to 1x64 using numpy.reshape before passing the features to the model. This gives around 95% accuracy
Flatten the MNIST images from 8x8 to 1x64 using tf.reshape within the model. This gives around 93% accuracy

What have you tried?
The feature tensors within the two models are the same shape:
Numpy.reshape: Tensor("input:0", shape=(?, 64), dtype=float32)
tf.reshape: Tensor("Reshape:0", shape=(?, 64), dtype=float32)
Logs or other output that would be helpful
Gist recreating the issue is here: https://gist.github.com/Anjum48/ca0a1f597a70b6b50b37fed2032a91d5