tf.tile not working with multiples of type tf.int64

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04.4 LTS
TensorFlow installed from (source or binary): Compiled from Source
TensorFlow version (use command below): tf.VERSION = 1.2.1
Python version: Python 2.7.12
Bazel version (if compiling from source): 0.11.1
GCC/Compiler version (if compiling from source): c++ (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609
CUDA/cuDNN version: cuda-9.0
GPU model and memory: GeForce 940M 2002MiB
Exact command to reproduce: Detailed Below.

The following program throws an error saying No OpKernel was registered to support Op 'Tile' with these attrs.
min_rating = tf.constant(0, tf.int64)
max_rating = tf.constant(12, tf.int64)
m = max_rating - min_rating + 1
k = tf.range(m, dtype=tf.int64)
d = tf.tile(k, tf.to_int64(tf.reshape(m, [1])))

with tf.Session() as sess:
    a = sess.run([d])
    print a

Here is the detailed log:
Traceback (most recent call last):
  File "test.py", line 16, in <module>
    a = sess.run([d])
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py", line 895, in run
    run_metadata_ptr)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py", line 1124, in _run
    feed_dict_tensor, options, run_metadata)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py", line 1321, in _do_run
    options, run_metadata)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py", line 1340, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.InvalidArgumentError: No OpKernel was registered to support Op 'Tile' with these attrs.  Registered devices: [CPU,GPU], Registered kernels:
  device='CPU'; Tmultiples in [DT_INT32]
  device='GPU'; T in [DT_COMPLEX128]; Tmultiples in [DT_INT32]
  device='GPU'; T in [DT_COMPLEX64]; Tmultiples in [DT_INT32]
  device='GPU'; T in [DT_INT16]; Tmultiples in [DT_INT32]
  device='GPU'; T in [DT_HALF]; Tmultiples in [DT_INT32]
  device='GPU'; T in [DT_DOUBLE]; Tmultiples in [DT_INT32]
  device='GPU'; T in [DT_FLOAT]; Tmultiples in [DT_INT32]

	 [[Node: Tile = Tile[T=DT_INT64, Tmultiples=DT_INT64](range, Reshape)]]

Caused by op u'Tile', defined at:
  File "test.py", line 7, in <module>
    d = tf.tile(k, tf.to_int64(tf.reshape(m, [1])))
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_array_ops.py", line 3740, in tile
    name=name)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py", line 767, in apply_op
    op_def=op_def)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py", line 2583, in create_op
    original_op=self._default_original_op, op_def=op_def)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py", line 1204, in __init__
    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access

InvalidArgumentError (see above for traceback): No OpKernel was registered to support Op 'Tile' with these attrs.  Registered devices: [CPU,GPU], Registered kernels:
  device='CPU'; Tmultiples in [DT_INT32]
  device='GPU'; T in [DT_COMPLEX128]; Tmultiples in [DT_INT32]
  device='GPU'; T in [DT_COMPLEX64]; Tmultiples in [DT_INT32]
  device='GPU'; T in [DT_INT16]; Tmultiples in [DT_INT32]
  device='GPU'; T in [DT_HALF]; Tmultiples in [DT_INT32]
  device='GPU'; T in [DT_DOUBLE]; Tmultiples in [DT_INT32]
  device='GPU'; T in [DT_FLOAT]; Tmultiples in [DT_INT32]

	 [[Node: Tile = Tile[T=DT_INT64, Tmultiples=DT_INT64](range, Reshape)]]

However this is working correctly:
min_rating = tf.constant(0, tf.int64)
max_rating = tf.constant(12, tf.int64)
m = max_rating - min_rating + 1
k = tf.range(m, dtype=tf.int64)
d = tf.tile(k, tf.to_int32(tf.reshape(m, [1])))

with tf.Session() as sess:
    a = sess.run([d])
    print a

The tile docs says that the multiples argument to tf.tile can be of type int32 or int64.