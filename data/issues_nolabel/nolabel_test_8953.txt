Enable full message with tf.Print

Operating System: Debian 4.8.15-2
Installed version of CUDA and cuDNN: CUDA 8, cuDNN 5
python3 -c "import tensorflow; print(tensorflow.version)": 1.0.1
Minimal reproducible example
import tensorflow as tf
ph = tf.placeholder(tf.float32, [3,4,5,6])
ts = tf.shape(ph)
tp = tf.Print(ts, [ts])
tm = tf.reduce_mean(tp)
sess = tf.Session()
res = sess.run(tm)

Output
I tensorflow/core/kernels/logging_ops.cc:79] [3 4 5...]
Maybe there is some obvious way around this, but I couldn't find any on the docs. To state the obvious : I'm trying to see the full shape of the tensor, and not only the first 3 positions. In this example its size is 4, but I would like to be able to see whatever I want with whatever size it has.
Furthermore, debugging into TensorFlow did became a problem when I got to line 62 of logging_ops.py, where gen_logging_ops is used but it doesn't seem to be declared anywhere â€” and older versions already had this, I'm probably missing some link, because grep and find couldn't find anything useful:
Output of grep
tensorflow$ grep -R "gen_logging_ops" .
./tensorflow/python/framework/function_test.py:from tensorflow.python.ops import gen_logging_ops
./tensorflow/python/framework/function_test.py:      check = gen_logging_ops._assert(math_ops.greater(x, 0), [x])
./tensorflow/python/ops/control_flow_ops.py:from tensorflow.python.ops import gen_logging_ops
./tensorflow/python/ops/control_flow_ops.py:      return gen_logging_ops._assert(
./tensorflow/python/ops/control_flow_ops.py:        return gen_logging_ops._assert(
./tensorflow/python/ops/summary_ops.py:from tensorflow.python.ops import gen_logging_ops
./tensorflow/python/ops/summary_ops.py:from tensorflow.python.ops.gen_logging_ops import *
./tensorflow/python/ops/summary_ops.py:    val = gen_logging_ops._tensor_summary(
./tensorflow/python/ops/logging_ops.py:from tensorflow.python.ops import gen_logging_ops
./tensorflow/python/ops/logging_ops.py:from tensorflow.python.ops.gen_logging_ops import *
./tensorflow/python/ops/logging_ops.py:  return gen_logging_ops._print(input_, data, message, first_n, summarize, name)
./tensorflow/python/ops/logging_ops.py:    val = gen_logging_ops._histogram_summary(
./tensorflow/python/ops/logging_ops.py:    val = gen_logging_ops._image_summary(
./tensorflow/python/ops/logging_ops.py:    val = gen_logging_ops._audio_summary_v2(tag=tag,
./tensorflow/python/ops/logging_ops.py:    val = gen_logging_ops._merge_summary(inputs=inputs, name=name)
./tensorflow/python/ops/logging_ops.py:    val = gen_logging_ops._scalar_summary(tags=tags, values=values, name=scope)
./tensorflow/python/kernel_tests/control_flow_ops_py_test.py:from tensorflow.python.ops import gen_logging_ops
./tensorflow/python/kernel_tests/control_flow_ops_py_test.py:        unguarded_assert = gen_logging_ops._assert(
./tensorflow/python/summary/summary.py:from tensorflow.python.ops import gen_logging_ops as _gen_logging_ops
./tensorflow/python/summary/summary.py:    val = _gen_logging_ops._scalar_summary(
./tensorflow/python/summary/summary.py:    val = _gen_logging_ops._image_summary(
./tensorflow/python/summary/summary.py:    val = _gen_logging_ops._histogram_summary(
./tensorflow/python/summary/summary.py:    val = _gen_logging_ops._audio_summary_v2(
./tensorflow/python/summary/summary.py:    val = _gen_logging_ops._merge_summary(inputs=inputs, name=name)

Output of find
tensorflow$ find . -iname "*logging_ops*"
./tensorflow/core/ops/logging_ops.cc
./tensorflow/core/kernels/logging_ops_test.cc
./tensorflow/core/kernels/logging_ops.cc
./tensorflow/python/ops/logging_ops.py
./tensorflow/python/kernel_tests/logging_ops_test.py

Besides evaluating what I want with sess.run and manually printing it with python, is there any tensorflow-friendly solution to this? Debugging should be easier. :)