tf.name_scope does not work with tf.layers

When I define a layer with
with tf.name_scope("MY_SCOPE"):
    layer1 = tf.layers.dense(inputs = X,
                             units = 100,
                             kernel_initializer = he_init,
                             activation = tf.nn.elu,
                             name = "layer1")



and try to get its variables with
tf.global_variables(scope="MY_SCOPE")
it returns nothing because name scope did not apply to the layers from tf.layers
Shouldn't their name be
[<tf.Variable 'MY_SCOPE/layer1/kernel:0' shape=(784, 100) dtype=float32_ref>,
<tf.Variable 'MY_SCOPE/layer1/bias:0' shape=(100,) dtype=float32_ref>]
instead of
[<tf.Variable 'layer1/kernel:0' shape=(784, 100) dtype=float32_ref>,
<tf.Variable 'layer1/bias:0' shape=(100,) dtype=float32_ref>]
so that I can use my scope to reach my layers? This works with everything but tf.layers module.