Linking error "Undefined symbols for architecture x86_64:   "nsync::nsync_mu_init(nsync::nsync_mu_s_*)"" on iOS

Hello,
I downloaded the latest release 1.4.0 and builded it for iOS with build_all_ios.sh, and can successfully build libtensorflow-core.a, libprotobuf-lite.a and libprotobuf.a
but error happened when link these libs to iOS project, the detail info as follows, can anybody know how to fix it? thanks
Undefined symbols for architecture x86_64:
"nsync::nsync_mu_init(nsync::nsync_mu_s_)", referenced from:
tensorflow::Env::Env() in libtensorflow-core.a(env.o)
__GLOBAL__sub_I_allocator.cc in libtensorflow-core.a(allocator.o)
tensorflow::SessionFactory::Register(std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator > const&, tensorflow::SessionFactory) in libtensorflow-core.a(session_factory.o)
tensorflow::SessionFactory::GetFactory(tensorflow::SessionOptions const&, tensorflow::SessionFactory**) in libtensorflow-core.a(session_factory.o)
tensorflow::TrackingAllocator::TrackingAllocator(tensorflow::Allocator*, bool) in libtensorflow-core.a(tracking_allocator.o)
tensorflow::TrackingAllocator::TrackingAllocator(tensorflow::Allocator*, bool) in libtensorflow-core.a(tracking_allocator.o)
"nsync::nsync_mu_lock(nsync::nsync_mu_s_)", referenced from:
tensorflow::FileSystemRegistryImpl::Register(std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator > const&, std::__1::function<tensorflow::FileSystem ()>) in libtensorflow-core.a(env.o)
tensorflow::FileSystemRegistryImpl::Lookup(std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator > const&) in libtensorflow-core.a(env.o)
tensorflow::FileSystemRegistryImpl::GetRegisteredFileSystemSchemes(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator > > >) in libtensorflow-core.a(env.o)
tensorflow::CPUAllocator::AllocateRaw(unsigned long, unsigned long) in libtensorflow-core.a(allocator.o)
tensorflow::CPUAllocator::DeallocateRaw(void) in libtensorflow-core.a(allocator.o)
tensorflow::CPUAllocator::GetStats(tensorflow::AllocatorStats*) in libtensorflow-core.a(allocator.o)
tensorflow::SessionFactory::Register(std::__1::basic_string<char, std::__1::char_traits, std::_1::allocator > const&, tensorflow::SessionFactory*) in libtensorflow-core.a(session_factory.o)
...
"nsync::nsync_mu_unlock(nsync::nsync_mu_s)", referenced from:
tensorflow::FileSystemRegistryImpl::Register(std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator > const&, std::__1::function<tensorflow::FileSystem ()>) in libtensorflow-core.a(env.o)
tensorflow::FileSystemRegistryImpl::Lookup(std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator > const&) in libtensorflow-core.a(env.o)
tensorflow::FileSystemRegistryImpl::GetRegisteredFileSystemSchemes(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator > > >) in libtensorflow-core.a(env.o)
tensorflow::CPUAllocator::AllocateRaw(unsigned long, unsigned long) in libtensorflow-core.a(allocator.o)
tensorflow::CPUAllocator::DeallocateRaw(void) in libtensorflow-core.a(allocator.o)
tensorflow::CPUAllocator::GetStats(tensorflow::AllocatorStats*) in libtensorflow-core.a(allocator.o)
tensorflow::SessionFactory::Register(std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator > const&, tensorflow::SessionFactory*) in libtensorflow-core.a(session_factory.o)
...
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)