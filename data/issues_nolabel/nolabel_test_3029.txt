Linking Error building master from sources on 16.04

Hey all I am getting the following error building tensorflow from sources:
ERROR: /home/william/tensorflow/tensorflow/tools/proto_text/BUILD:31:1: Linking of rule '//tensorflow/tools/proto_text:gen_proto_text_functions' failed: crosstool_wrapper_driver_is_not_gcc failed: error executing command 
  (cd /home/william/.cache/bazel/_bazel_william/1c01fb06292961944db1914ac48e6a52/execroot/tensorflow && \
  exec env - \
  third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -o bazel-out/host/bin/tensorflow/tools/proto_text/gen_proto_text_functions bazel-out/host/bin/tensorflow/tools/proto_text/_objs/gen_proto_text_functions/tensorflow/tools/proto_text/gen_proto_text_functions.o bazel-out/host/bin/tensorflow/tools/proto_text/libgen_proto_text_functions_lib.a bazel-out/host/bin/tensorflow/core/liblib_internal.a bazel-out/host/bin/external/farmhash_archive/libfarmhash.a bazel-out/host/bin/external/jpeg_archive/libjpeg.a bazel-out/host/bin/external/png_archive/libpng.a bazel-out/host/bin/external/highwayhash/libsip_hash.a bazel-out/host/bin/external/re2/libre2.a bazel-out/host/bin/tensorflow/core/libprotos_all_cc.a bazel-out/host/bin/external/protobuf/libprotobuf.a bazel-out/host/bin/external/protobuf/libprotobuf_lite.a bazel-out/host/bin/external/zlib_archive/libzlib.a -ldl -lz -pthread -lpthread -lstdc++ -B/usr/bin/ -pie -Wl,-z,relro,-z,now -no-canonical-prefixes -pass-exit-codes '-Wl,--build-id=md5' '-Wl,--hash-style=gnu' -Wl,-S -Wl,--gc-sections): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.
/usr/bin/ld: bazel-out/host/bin/tensorflow/core/liblib_internal.a(numbers.o): undefined reference to symbol 'ceil@@GLIBC_2.2.5'
//lib/x86_64-linux-gnu/libm.so.6: error adding symbols: DSO missing from command line
collect2: error: ld returned 1 exit status
Target //tensorflow/cc:tutorials_example_trainer failed to build

This occurs when I run bazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer --verbose_failures
Environment info
Operating System: Ubuntu 16.04
Installed version of CUDA and cuDNN: 8.0, 5
ls -l /usr/local/cuda-8.0/lib64/libcud*
-rw-r--r-- 1 root root   560184 May 18 17:44 /usr/local/cuda-8.0/lib64/libcudadevrt.a
lrwxrwxrwx 1 root root       16 May 18 17:47 /usr/local/cuda-8.0/lib64/libcudart.so -> libcudart.so.8.0
lrwxrwxrwx 1 root root       19 May 18 17:47 /usr/local/cuda-8.0/lib64/libcudart.so.8.0 -> libcudart.so.8.0.27
-rw-r--r-- 1 root root   394472 May 18 17:44 /usr/local/cuda-8.0/lib64/libcudart.so.8.0.27
-rw-r--r-- 1 root root   737516 May 18 17:44 /usr/local/cuda-8.0/lib64/libcudart_static.a
-rwxr-xr-x 1 root root 78065952 Jun 23 18:54 /usr/local/cuda-8.0/lib64/libcudnn.so
-rwxr-xr-x 1 root root 78065952 Jun 23 18:54 /usr/local/cuda-8.0/lib64/libcudnn.so.5
-rwxr-xr-x 1 root root 78065952 Jun 23 18:54 /usr/local/cuda-8.0/lib64/libcudnn.so.5.0.5
-rw-r--r-- 1 root root 68709594 Jun 23 18:54 /usr/local/cuda-8.0/lib64/libcudnn_static.a

If installed from sources, provide the commit hash: 84225a2b612fe748c9c923f0c1cb8471911c3b77
Reproduce It
Follow the documnentation exactly for building from sources:

Install Cuda and Cudnn from nvidia
Install python/build dependencies
Install bazel from apt-get:


sudo apt-get install openjdk-8-jdk
sudo apt-get install pkg-config zip g++ zlib1g-dev unzip

echo "deb http://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list


curl https://storage.googleapis.com/bazel-apt/doc/apt-key.pub.gpg | sudo apt-key add -
sudo apt-get update && sudo apt-get install bazel
Then run the first install command using bazel as mentioned before.