Memory Leak when tf.Session run on the sliced tensor

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v1.5.0-0-g37aa430d84 1.5.0
Python version: 3.6
CUDA/cuDNN version: release 9.0, V9.0.176
GPU model and memory: 1070 8G

Describe the Feature Request
For current version of Tensorflow, it will leak memory if we evaluate the sliced tensor as attached code and images, which isn't intuitive and hard to debug. It seems like the unused part of tensor will leak memory because there is no python object reference on it. I am not sure whether it could fixed or not, maybe it could show warning at least.
Source code / logs
import tensorflow as tf
from pympler.tracker import SummaryTracker
tracker = SummaryTracker()
a = tf.zeros([3,4,5])
sess = tf.Session()
def leak_version():
____return sess.run(a[0,0])
def safe_version():
____return sess.run(a)[0,0]
for i in range(10):
____tracker.print_diff()
____# b = safe_version()
____b = leak_version()
Trace of the Leak

Leak Version : visualize the object reference graph on object 'b' with depth=5 by Library objgraph

Safe Version : visualize the object reference graph on object 'b' with depth=5 by Library objgraph