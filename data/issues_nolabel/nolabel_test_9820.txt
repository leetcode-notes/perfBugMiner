Unable to build TensorFlow Java native libraries for arm64-v8a Android devices

Problem
I'm trying to build TensorFlow Java and the relevant native libraries for an Android device (I'm targeting a Pixel).
What I've tried
Following the instructions on building TensorFlow Java from source here and on Android TensorFlow support here, (relative to my checked out TensorFlow repo at ~/Android/tensorflow-master) I updated my WORKSPACE to include the following
android_sdk_repository(
    name = "androidsdk",
    api_level = 25,
    build_tools_version = "25.0.3",
    path = "~/Android/Sdk/",
)

android_ndk_repository(
    name="androidndk",
    path="~/Android/android-ndk-r12b/",
    api_level=24)

I ran ./configure and supplied the following options
Please specify the location of python. [Default is /usr/bin/python]: 
Found possible Python library paths:
  /usr/local/lib/python2.7/dist-packages
  /usr/lib/python2.7/dist-packages
  /usr/local/buildtools/current/sitecustomize
Please input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]

Using python library path: /usr/local/lib/python2.7/dist-packages
Do you wish to build TensorFlow with MKL support? [y/N] n
No MKL support will be enabled for TensorFlow
Please specify optimization flags to use during compilation when bazel option "--config=opt" is specified [Default is -march=native]: -std=c++11 -march=armv8-a
Do you wish to use jemalloc as the malloc implementation? [Y/n] n
jemalloc disabled
Do you wish to build TensorFlow with Google Cloud Platform support? [y/N] n
No Google Cloud Platform support will be enabled for TensorFlow
Do you wish to build TensorFlow with Hadoop File System support? [y/N] n
No Hadoop File System support will be enabled for TensorFlow
Do you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] n
No XLA JIT support will be enabled for TensorFlow
Do you wish to build TensorFlow with VERBS support? [y/N] n
No VERBS support will be enabled for TensorFlow
Do you wish to build TensorFlow with OpenCL support? [y/N] n
No OpenCL support will be enabled for TensorFlow
Do you wish to build TensorFlow with CUDA support? [y/N] n
No CUDA support will be enabled for TensorFlow

and then I attempted to build the relevant libraries with the following command
bazel build -c opt --config opt \
 //tensorflow/java:tensorflow //tensorflow/java:libtensorflow_jni \
 --crosstool_top=//external:android/crosstool \
 --host_crosstool_top=@bazel_tools//tools/cpp:toolchain \
 --cpu=arm64-v8a

What happens
I get a bunch of warnings (stdout from the above command: log.txt) and the following linking error
ERROR: /usr/local/google/home/tsamson/Android/tensorflow-master/tensorflow/java/BUILD:142:1: Linking of rule '//tensorflow/java:libtensorflow_jni.so' failed: link_dynamic_library.sh failed: error executing command external/bazel_tools/tools/cpp/link_dynamic_library.sh no ignored ignored ignored external/androidndk/ndk/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android-gcc ... (remaining 38 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.
(I get the same errors building for armeabi-v7a. I am able to build the above targets for my Ubuntu machine by doing the above (instead using -march=native and the default --crosstool_top, --host_crosstool_top, and --cpu flags), but I want to compile for Android â˜º.)
Environment
Here's the output of tools/tf_env_collect.sh (which had to be run from a directory other than tensorflow-master to keep from getting a tensorflow import error):
== cat /etc/issue ===============================================
VERSION="14.04.5 LTS, Trusty Tahr"
VERSION_ID="14.04"

== are we in docker =============================================
No

== compiler =====================================================
c++ (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


== uname -a =====================================================

== check pips ===================================================
numpy (1.12.1)
protobuf (3.3.0)
tensorflow (1.1.0)

== check for virtualenv =========================================
False

== tensorflow import ============================================
tf.VERSION = 1.1.0
tf.GIT_VERSION = v1.1.0-rc0-61-g1ec6ed5
tf.COMPILER_VERSION = v1.1.0-rc0-61-g1ec6ed5
Sanity check: array([1], dtype=int32)

== env ==========================================================
LD_LIBRARY_PATH is unset
DYLD_LIBRARY_PATH is unset

== nvidia-smi ===================================================
Wed May 10 13:42:21 2017       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 367.57                 Driver Version: 367.57                    |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  Quadro K1200        On   | 0000:01:00.0      On |                  N/A |
| 39%   45C    P8     1W /  35W |    553MiB /  4016MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID  Type  Process name                               Usage      |
|=============================================================================|
|    0      3426    G   /usr/lib/xorg/Xorg                             331MiB |
|    0      4959    G   cinnamon                                        61MiB |
|    0      8578    G   /proc/self/exe                                 158MiB |
+-----------------------------------------------------------------------------+

== cuda libs  ===================================================