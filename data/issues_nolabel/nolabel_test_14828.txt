Eager: Can't take gradient of element-wise tf functions

Maybe I'm missing something, but taking the gradient of functions like tf.sin and tf.log in eager mode is failing on a recent master (80e7c9f):
In [1]: import tensorflow as tf

In [2]: import tensorflow.contrib.eager as tfe

In [3]: tfe.enable_eager_execution()

In [4]: g=tfe.gradients_function(tf.sin)

In [5]: g([1.0])
---------------------------------------------------------------------------
IndexError                                Traceback (most recent call last)
<ipython-input-5-e4ceb6f55b16> in <module>()
----> 1 g([1.0])

~/anaconda3/lib/python3.6/site-packages/tensorflow/python/eager/backprop.py in decorated(*args, **kwds)
    509     """Computes the gradient of the decorated function."""
    510
--> 511     _, grad = val_and_grad_function(f, params=params)(*args, **kwds)
    512     return grad
    513

~/anaconda3/lib/python3.6/site-packages/tensorflow/python/eager/backprop.py in decorated(*args, **kwds)
    608       raise ValueError("Functions to be differentiated cannot "
    609                        "receive keyword arguments.")
--> 610     val, vjp = make_vjp(f, params)(*args, **kwds)
    611     return val, vjp(dy=dy)
    612

~/anaconda3/lib/python3.6/site-packages/tensorflow/python/eager/backprop.py in decorated(*args, **kwds)
    660       args = _ensure_unique_tensor_objects(parameter_positions, args)
    661       for i in parameter_positions:
--> 662         sources.append(args[i])
    663         tape.watch(args[i])
    664       result = f(*args)

IndexError: list index out of range