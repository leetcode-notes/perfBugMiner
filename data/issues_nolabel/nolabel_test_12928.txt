Improvements to Java API handling of datatypes and arrays

This is a set of connected changes broken out from #11535 (Generic Java API) and improved
a bit further; still synergistic with that PR  and should allow whittling that PR down toward a digestible size.

Changed how datatypes are computed from arrays to not crawl over the array but instead just inspect the array's class object. This seems somewhat simpler, more efficient, and easier to maintain going forward.
Added the notion that a given array component type can correspond to more than one tensor datatype. I think that we already would like this to be able to support both uint8 and string using byte arrays, and the need will become more acute as more TensorFlow types are added.
Resurrected the test case for creating and extracting uint8 tensors (requires previous change)