2 bugs in training/input.py

In the _dtype() method in the training/input.py file, the following code for TypeError:
  raise TypeError("Expected types to be consistent: %s vs. %s." %
                  ", ".join(x.name for x in types),
                  ", ".join(x.name for x in other_types))

should be:
  raise TypeError("Expected types to be consistent: %s vs. %s." %
                  (", ".join(x.name for x in types),
                  ", ".join(x.name for x in other_types)))

Also, when using the tf.train.shuffle_batch_join() method, you are suppose to pass a list of tuples of tensors, but if you pass a list of tuple and each tuple only contains one item, python will ignore the tuples and simply make it into a list. Thus, when the _flatten method in training/inputs.py is called, a TypeError: 'Tensor' object is not iterable is thrown. I suppose it's not necessarily a bug as one should know if you want to pass a tuple containing just one item, you must put a comma at the end of the tuple, but it may still may cause confusion.
Instead, _flatten could be:
def _flatten(tensor_list_list):
        for elm in tensor_list_list:
            if not isinstance(elm, tuple):
                raise TypeError("tensor_list_list must contain tuples.")
        return [tensor for tensor_list in tensor_list_list for tensor in tensor_list]