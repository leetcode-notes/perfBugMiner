DecodeCSV outputs an unexpectedly result

I recently feel confused while using DecodeCSV operator. The meaning of record_defaults is different from that described in the documentation.
Here is the description in documentation:
record_defaults: One tensor per column of the input record, with either a
  scalar default value for that column or empty if the column is required.

Problem 1 : The size of record_defaults limit the size of output
>>> value=["a,b,c"]
>>> parts_val = parsing_ops.decode_csv(value, field_delim=",", record_defaults = [[""]])
>>> parts_val
[<tf.Tensor 'DecodeCSV_10:0' shape=(1,) dtype=string>]
Problem 2 : If record_defaults contains empty element, the type of output is always float32. In the same time, it failed to check the existence of value.
>>> value=["a,b,c"]
>>> parts_val = parsing_ops.decode_csv(value, field_delim=",", record_defaults = [[""], [], []])
>>> parts_val
[<tf.Tensor 'DecodeCSV_13:0' shape=(1,) dtype=string>, <tf.Tensor 'DecodeCSV_13:1' shape=(1,) dtype=float32>, <tf.Tensor 'DecodeCSV_13:2' shape=(1,) dtype=float32>]
Maybe I understand it in a wrong way. Any comment is appreciated. Thanks.