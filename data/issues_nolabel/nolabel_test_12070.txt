[XLA] Should we disable `REGISTER_XLA_BACKEND(GPU)` if there is no GPU installed on the machine?

I install TensorFlow from source with XLA and TF_CPP_MIN_VLOG_LEVEL enabled (without GPU), after trying XLA example, I got these logs:
...
XLA op registration: device: XLA_CPU_JIT op: AssignAddVariableOp
XLA op registration: device: XLA_GPU_JIT op: AssignAddVariableOp
XLA op registration: device: XLA_CPU_JIT op: _UnsafeReadVariable
XLA op registration: device: XLA_GPU_JIT op: _UnsafeReadVariable
XLA op registration: device: XLA_CPU_JIT op: Unpack
XLA op registration: device: XLA_GPU_JIT op: Unpack
...
But there is no GPU installed on my machine, so I don't enable CUDA option, but it still do
REGISTER_XLA_BACKEND(DEVICE_GPU_XLA_JIT, kGpuAllTypes, GpuOpFilter);
Should we disable REGISTER_XLA_BACKEND(GPU) if there is no GPU installed on the machine?
@tatatodd @hawkinsp WDYT?

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
No.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Linux Ubuntu 16.04
TensorFlow installed from (source or binary):
Source
TensorFlow version (use command below):
v1.2.1
Python version:
2.7
Bazel version (if compiling from source):
0.4.5
CUDA/cuDNN version:
N/A
GPU model and memory:
N/A
Exact command to reproduce: