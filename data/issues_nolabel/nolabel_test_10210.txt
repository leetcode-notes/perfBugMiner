tf.summary.image bug with input_queues

System information

Have I written custom code: yes
OS Platform and Distribution: Windows 10, Linux Ubuntu 14.04.02
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): 1.1.0
CUDA/cuDNN version: 8.0
Exact command to reproduce: python error_reading_with_summary.py

Describe the problem
When creating tf.summary.image() summaries when using tf.train.slice_input_producer() for generating the images, the input queue gets emptied very fast and I end up with less data for training...
For example: When having 5 images, the first image gets read but when I try collecting the second image I get a tf.errors.OutOfRangeError error. This is not a problem with how I input the images because when I leave out the summaries I can read all images.
I get multiple warnings like
2017-05-26 08:33:43.017260: W c:\tf_jenkins\home\workspace\release-win\device\gpu\os\windows\tensorflow\core\framework\op_kernel.cc:1152] Out of range: FIFOQueue '_6_input_producer/input_producer' is closed and has insufficient elements (requested 1, current size 0)
	 [[Node: input_producer/input_producer_Dequeue = QueueDequeueV2[component_types=[DT_INT32], timeout_ms=-1, _device="/job:localhost/replica:0/task:0/cpu:0"](input_producer/input_producer)]]

when I create the summary operation and then run the summary operation.
Interestingly enough, I also get this warning when I run the summary operation without any summaries created. But at least then all my images get read.
When I don't have any summaries and don't run any summary operation this warning doesn't appear at all.
The attached archive contains a minimal replicating example. The tf.summary.image() is at line 15-16 in the get_batch() function and the merged_summary_op is created at line 31 and run at line 45 in the test_read_images_summary() function.
Run python error_reading_with_summaries to execute all 4 cases:

When the summary isn't created and the summary operation isn't executed.
When the summary is created but the summary operation isn't executed.
When the summary isn't created but the summary operation is executed.
When the summary is created and the summary operation is executed.

Use the option -s for only creating the summary and -r only for executing the summary operation and use both -r -s for creating and executing the summary operation.
Source code / logs
Source code, traceback and images are included: error_reading_with_summary.zip
Run python error_reading_with_summaries.py or python error_reading_with_summaries.py -h for help.