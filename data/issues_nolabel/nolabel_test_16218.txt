[feature request ? ]  How to return SparseTensor when custom ops

Describe the problem
there exists some ops (eg: decode_libsvm) that can return SparseTensor by three dense tensor
#see: tensorflow/tensorflow/contrib/libsvm/
REGISTER_OP("DecodeLibsvm")
    .Input("input: string")
    .Output("label: label_dtype")
    .Output("feature_indices: int64")
    .Output("feature_values: dtype")
    .Output("feature_shape: int64")
    .Attr("dtype: {float, double, int32, int64} = DT_FLOAT")
    .Attr("label_dtype: {float, double, int32, int64} = DT_INT64")
    .Attr("num_features: int >= 1")

Can I define my custom ops which can return SparseTensor directly? ,
What I want to do is modify tf.decode_csv ,  some column can return Tensor,  some column can return SparseTensor.
If i return SparseTensor by (indices,values, shape) dense tensor,  it would be  diffcult .
does there exists SparseTensor class in c++ api ?
@ALL, @mrry @yongtang
Thanks
  def parse_csv(value):
    print('Parsing', data_file)
    columns = tf.decode_csv(value, record_defaults=_CSV_COLUMN_DEFAULTS)
    features = dict(zip(_CSV_COLUMNS, columns))
    labels = features.pop('income_bracket')
    return features, tf.equal(labels, '>50K')

Have I written custom code
OS Platform and Distribution
TensorFlow installed from
TensorFlow version
Bazel version
CUDA/cuDNN version
GPU model and memory
Exact command to reproduce