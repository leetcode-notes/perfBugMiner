sigmoid_cross_entropy shape compatible check bug (setting n_classes=2 in DNNClassifier)

Environment info
Operating System: Ubuntu 16.04
Installed version of CUDA and cuDNN:
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
-rw-r--r-- 1 root root    558720 Sep 15 07:02 /usr/local/cuda/lib64/libcudadevrt.a
lrwxrwxrwx 1 root root        16 Sep 15 07:05 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.8.0
lrwxrwxrwx 1 root root        19 Sep 15 07:05 /usr/local/cuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.44
-rw-r--r-- 1 root root    415432 Sep 15 07:02 /usr/local/cuda/lib64/libcudart.so.8.0.44
-rw-r--r-- 1 root root    775162 Sep 15 07:02 /usr/local/cuda/lib64/libcudart_static.a
lrwxrwxrwx 1 xj   users       13 Jul 27 13:55 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.5
lrwxrwxrwx 1 xj   users       17 Jul 27 13:55 /usr/local/cuda/lib64/libcudnn.so.5 -> libcudnn.so.5.1.5
-rwxr-xr-x 1 xj   xj    78065952 Apr 23 03:17 /usr/local/cuda/lib64/libcudnn.so.5.0.5
-rwxrwxr-x 1 xj   users 79337624 Jul 27 13:53 /usr/local/cuda/lib64/libcudnn.so.5.1.5
-rw-rw-r-- 1 xj   users 69756172 Jul 27 13:53 /usr/local/cuda/lib64/libcudnn_static.a
If installed from source, provide

The commit hash (git rev-parse HEAD)
bad7c50
The output of bazel version
.
Build label: 0.3.1
Build target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar
Build time: Fri Jul 29 09:09:52 2016 (1469783392)
Build timestamp: 1469783392
Build timestamp as int: 1469783392

If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)
from future import absolute_import
from future import division
from future import print_function
import tensorflow as tf
import tensorflow.contrib as contrib
import numpy as np
Data sets
IRIS_TRAINING = "iris_training.csv"
IRIS_TEST = "iris_test.csv"
Load datasets.
training_set = contrib.learn.datasets.base.load_csv_with_header(filename=IRIS_TRAINING,
target_dtype=np.int,
features_dtype=np.float32)
test_set = contrib.learn.datasets.base.load_csv_with_header(filename=IRIS_TEST,
target_dtype=np.int,
features_dtype=np.float32)
Specify that all features have real-value data
feature_columns = [contrib.layers.real_valued_column("", dimension=4)]
Build 3 layer DNN with 10, 20, 10 units respectively.
classifier = contrib.learn.DNNClassifier(feature_columns=feature_columns,
hidden_units=[10, 20, 10],
n_classes=2,
model_dir="/tmp/iris_model")
Fit model.
classifier.fit(x=training_set.data,
y=training_set.target.astype(np.int),
steps=200)