Looking for a way to compile TF without SSE.

Please go to Stack Overflow for help and support:
https://stackoverflow.com/questions/tagged/tensorflow
If you open a GitHub issue, here is our policy:

It must be a bug or a feature request.
The form below must be filled out.
It shouldn't be a TensorBoard issue. Those go here.

Here's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.

System information


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
NO.


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Linux Slackware 14.2 (32bit)


TensorFlow installed from (source or binary):
source


TensorFlow version (use command below):
1.5.0


Python version:
3.6.4


Bazel version (if compiling from source):
0.5.4


GCC/Compiler version (if compiling from source):
5.3.0


CUDA/cuDNN version:
N/A


GPU model and memory:
N/A


Exact command to reproduce:
bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package


You can collect some of this information using our environment capture script:
https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh
You can obtain the TensorFlow version with
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
Describe the problem
Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.
Problem
Pardon me first to bother you. This is neither about a bug, nor a feature request. This is about the 32-bit architecture, and I know that TF do not officially support 32-bit machines.
I also use decent NVIDIA workstations at my lab. Thank you for your work. However, sometimes, I open my old laptop to write some code, and it is a 32-bit machine.
So far, (up to TF 1.4.1), I could somehow manage to compile the source code to get the things right. But, in TF 1.5, I receive next error messages here and there:
"The TensorFlow library was compiled to use " << SSE
" instructions, but these aren't available on your machine."
I think that if __SSE__ flag is disabled, then TF 1.5 can be available to the 32-bit architecuture, so I append -march=i686 to the configure script and bazel argument, but it's no worth. I'm trying to figure out what turns on SSE flag, but still I got no effort.
Currently I add to the bazel command this:
bazel build --config=opt --copt=-march="i686" //tensorflow/tools/pip_package:build_pip_package
Source code / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.