在Windows上安装TensorFlow

本份指导将告诉您如何在 Windows 上安装 TensorFlow。
选择准备安装的 TensorFlow 类型
您需要在以下两种 TensorFlow 类型中选择您想安装的类型：


仅支持 CPU 的 TensorFlow。 如果您的系统并没有 NVIDIA® GPU 这样的 GPU，那么您只能安装仅支持 CPU 的 TensorFlow。需要特别说明的是，相比起另外一个版本的 TensorFlow，该版本的 TensorFlow 通常更加容易安装（一般而言5到10分钟即可完成安装），所以即使您拥有一个 NVIDIA 的 GPU，我们也更推荐您优先安装这个版本。


支持 GPU 的 TensorFlow。 一般而言，TensorFlow 的程序在 GPU 上的运行速度要明显高于在 CPU 上的。因此，如果您的系统拥有符合以下要求的 NVIDIA ® GPU，且您需要运行的应用注重性能，那么您最终需要安装此版本的TensorFlow。


运行支持 GPU TensorFlow 版本的需求
不论您采用本份指导提供的哪种方式进行安装，如果您需要安装 GPU 的 TensorFlow，您必须在您的设备上安装以下NVIDIA软件：


CUDA® Toolkit 8.0。关于它的详细说明请看 NVIDIA 官方文档。请确保您讲 Cuda 相关的路径名都按照 NVIDIA 文档的描述方法加入到了%PATH%系统变量中。


与 CUDA Toolkit 8.0 相关的 NVIDIA 驱动。


cuDNN v6.1版本。关于它的详细说明请看 NVIDIA 官方文档。需要注意的是，一般而言，cuDNN的安装地址和其他CUDA DLL是不同的。同时，请确认您把您安装cuDNN DLL的安装地址加入到了%PATH%系统变量中。


带有 CUDA Compute Capability 3.0 或更高版本的 GPU 卡。请在 NVIDIA 官方文档中查询具有条件的GPU清单。


如果您的版本与上述包所要求的版本不同，请改到我们所要求的版本。特别说明的是，cuDNN 的版本必须与要求的一致：如果无法找到 cuDNN64_6.dll，那么 TensorFlow 将无法加载。如果您想使用其他版本的 cuDNN，您需要从源代码开始重新编译。
安装 TensorFlow 的方式
您需要选择安装 TensorFlow 的方式。当前的可选方式如下：

原生的 pip 方法
使用 Anaconda

原生的 pip 方法可以直接在您的系统上安装 TensorFlow 而并不需要虚拟环境（virtual environment）。由于原生的一个pip安装应用并没有被隔离在一个独立的应用中，使用 pip 安装方法可能会影响到系统里其他基于Python的安装。但是，如果您了解您系统里的 pip 和 Python 环境，那么使用原生pip安装仅仅只需要一条命令就够了。而且，如果您使用原生的 pip 安装方法，那么用户可以从系统的任何路径去运行 TensorFlow 程序。
在 Anaconda 中，你可以使用 conda 去创建一个虚拟环境（virtural environment）。但是，如果是使用 Anaconda 方式，我们依然推荐使用 pip 安装命令来安装 TensorFlow，而不是 conda 安装命令。
注意： conda 包是由社区提供的，而不是官方。也就是说，TensorFlow 团队并不会测试也不会维护 conda 包。使用 conda 包需要您自己承担风险。
使用原生pip安装
如果您的机器上没有安装以下版本的Python，请立刻安装：

Python 3.5.x 64-bit from python.org
Python 3.6.x 64-bit from python.org

在 Windows 上，TensorFlow 支持 Python3.5.x 版本和 Python 3.6.x 版本。需要注意的是， Python 3 使用的是 pip3 包管理， 这也您用来安装 TensorFlow 的程序。
在安装 TensorFlow 时，请打开一个终端。然后在终端上运行正确的 pip3 安装命令。 如果是安装仅支持 CPU 的 TensorFlow 版本，请输入下面的命令：
C:\> pip3 install --upgrade tensorflow
如果是安装支持 GPU 的 TensorFlow 版本，请输入下面的命令：
C:\> pip3 install --upgrade tensorflow-gpu
使用 Anaconda 进行安装
Anaconda 的安装包是由社区提供，并非官方提供的。
在 Anaconda 的环境下，按照以下步骤进行 TensorFlow 的安装：
1.遵循 Anaconda 下载站点里的说明进行 Anaconda 的下载和安装。
2.请通过使用以下命令来创建一个名为 tensorflow 的 conda 环境：
C:\> conda create -n tensorflow pip python=3.5
3.通过输入以下命令来激活一个 conda 环境：
C:\> activate tensorflow
(tensorflow)C:\> # Your prompt should change
4.在您的 conda 环境里输入正确的命令来安装 TensorFlow。 如果是安装仅支持 CPU 的 TensorFlow 版本，请输入下面的命令：
(tensorflow)C:\> pip install --ignore-installed --upgrade tensorflow
如果是安装支持 GPU 的 TensorFlow 版本，请输入下面的命令：
(tensorflow)C:\> pip install --ignore-installed --upgrade tensorflow-gpu
常见安装问题
我们使用 Stack Overflow 来记录 TensorFlow 的安装问题和修正方法。下表中包含有一些常见安装问题在 Stack Overflow 上的回答链接。如果您遇到的错误消息或安装问题不在下表中，请在 Stack Overflow 上搜索它的答案。如果 Stack Overflow 上并没有显示这个错误消息或者安装问题的答案，请在 Stack Overflow 上提一个关于这个错误消息或者安装问题的新问题，并给这个问题指定一个 tensorflow 的标签。



Stack Overflow 链接
错误消息




41007279
[...\stream_executor\dso_loader.cc] Couldn't open CUDA library nvcuda.dll


41007279
[...\stream_executor\cuda\cuda_dnn.cc] Unable to load cuDNN DSO


42006320
ImportError: Traceback (most recent call last):  File "...\tensorflow\core\framework\graph_pb2.py", line 6, in  from google.protobuf import descriptor as _descriptor  ImportError: cannot import name 'descriptor'


42011070
No module named "pywrap_tensorflow"


42217532
OpKernel ('op: "BestSplits" device_type: "CPU"') for unknown op: BestSplits


43134753
The TensorFlow library wasn't compiled to use SSE instructions