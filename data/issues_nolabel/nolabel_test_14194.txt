Make CMake on TensorFlow Incrementally Compile on Windows

I'm working with the tensorflow r1.4 branch on Windows 7 with Visual Studio 2015.   When I configure
cmake C:\Users\Kevin\dev\tensorflow-r1.4\tensorflow\contrib\cmake -A x64 -DCMAKE_BUILD_TYPE=Release -DSWIG_EXECUTABLE=C:/Users/Kevin/dev/swigwin-3.0.12/swig.exe -DPYTHON_EXECUTABLE=C:/ProgramData/Anaconda3/python.exe -DPYTHON_LIBRARIES=C:/ProgramData/Anaconda3/libs/python35.lib -DPYTHON_INCLUDE_DIR=C:\ProgramData\Anaconda3\include -DNUMPY_INCLUDE_DIR=C:\ProgramData\Anaconda3\Lib\site-packages\numpy\core\include -Dtensorflow_ENABLE_GPU=ON -DCUDNN_HOME="C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0"

and run
powershell "MSBuild /m /p:Configuration=Release tf_python_build_pip_package.vcxproj | tee msbuild.txt"

the build always compiles all the projects, even the projects already compiled.
Looking at the first few lines of msbuild.txt I see
Microsoft (R) Build Engine version 14.0.25420.1
Copyright (C) Microsoft Corporation. All rights reserved.

Build started 11/2/2017 4:35:58 PM.
     1>Project "C:\users\kevin\dev\tensorflow-r1.4\tensorflow\contrib\cmake\tf_python_build_pip_package.vcxproj" on node 1 (default targets).
     1>Project "C:\users\kevin\dev\tensorflow-r1.4\tensorflow\contrib\cmake\tf_python_build_pip_package.vcxproj" (1) is building "C:\Users\Kevin\dev\tensorflow-r1.4\tensorflow\contrib\cmake\ZERO_CHECK.vcxproj" (2) on node 1 (default targets).
     2>InitializeBuildStatus:
         Creating "x64\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
       CustomBuild:
         Checking Build System
         CMake is re-running because C:/Users/Kevin/dev/tensorflow-r1.4/tensorflow/contrib/cmake/CMakeFiles/generate.stamp is out-of-date.
           the file 'C:/Users/Kevin/dev/tensorflow-r1.4/tensorflow/contrib/cmake/CMakeFiles/tf_core_gpu_kernels.dir/__/__/core/kernels/tf_core_gpu_kernels_generated_cwise_op_gpu_igammas.cu.cc.obj.depend'
           is newer than 'C:/Users/Kevin/dev/tensorflow-r1.4/tensorflow/contrib/cmake/CMakeFiles/generate.stamp.depend'
           result='-1'
         -- Configuring done

The issue isn't the multicore builds, I'm just using multicore builds to speed up the overall build, which takes 5 hours on one core.
The problem appears to be that the generate.stamp isn't what's expected.