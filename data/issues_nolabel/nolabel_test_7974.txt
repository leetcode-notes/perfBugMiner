InvalidArgumentError for tf.gather_nd() function

When I use tf.gather_nd(im, idx), I encountered the following error:
  File "model.py", line 86, in <module>
    num=len(up_outputs) - 1, pixels_count=pixels_count)(up_outputs)
  File "/home/dl/gds/dl_modules/keras/keras/engine/topology.py", line 572, in __call__
    self.add_inbound_node(inbound_layers, node_indices, tensor_indices)
  File "/home/dl/gds/dl_modules/keras/keras/engine/topology.py", line 635, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/dl/gds/dl_modules/keras/keras/engine/topology.py", line 172, in create_node
    output_tensors = to_list(outbound_layer.call(input_tensors, mask=input_masks))
  File "/home/dl/gds/important/key_frame/frame_propagation/lib/layer_utils_tf.py", line 101, in call
    results.append(_interpolate(vects[i], ori_loc, stride=self.strides[i], ori_shp=self.ori_shp))
  File "/home/dl/gds/important/key_frame/frame_propagation/lib/layer_utils_tf.py", line 65, in _interpolate
    Id = tf.gather_nd(im, idx_d)
  File "/home/dl/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py", line 1473, in gather_nd
    name=name)
  File "/home/dl/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py", line 763, in apply_op
    op_def=op_def)
  File "/home/dl/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 2395, in create_op
    original_op=self._default_original_op, op_def=op_def)
  File "/home/dl/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 1264, in __init__
    self._traceback = _extract_stack()

InvalidArgumentError (see above for traceback): Must have updates.shape = indices.shape[:IXDIM] + params_shape[IXDIM:], got updates.shape [1,200,256], indices.shape [1,200,3], params_shape [1,128,128,256]
	 [[Node: gradients/GatherNd_3_grad/ScatterNd = ScatterNd[T=DT_FLOAT, Tindices=DT_INT32, _class=["loc:@GatherNd_3"], _device="/job:localhost/replica:0/task:0/cpu:0"](stack_3/_1441, gradients/mul_10_grad/Reshape_1/_1525, gradients/GatherNd_3_grad/Shape)]]

The shape of tensor im is (batch, row, col, channel) (1, 128, 128, 256), and the shape of indices tensor ind is (batch, 200, 3), of which the 3 values in the third dimension represent (batch, row, col).
Thus we get a tensor of shape (1, 200, 256), however, why it said that:
Must have updates.shape = indices.shape[:IXDIM] + params_shape[IXDIM:], got updates.shape [1,200,256], indices.shape [1,200,3], params_shape [1,128,128,256]

It's weird, what does IXDIM represents here ? Anyone knows ?