Feature request: Patch extracting given location implementation needed.

Hello there,
Feature
I consider a lot but finally decide put this request here.
I know there are some matrix operation and image operations like image_patch_extract and image.extract_glimpse().
But what I want is extract the patches given several locations.
Input Tensor:
         batch image: [batch_size, image_height, image_width, image_channel]
         batch locations: [batch_size, num_patches, 2]
Output Tensor:
        [batch_size, num_patches, patch_height, patch_width, image_channel]
or 
        [batch_size * num_patches, patch_height, patch_width, image_channel]
Reference:
Georgis have done the similar thing and he made the a patch in v0.8.0 and only cpu supports.
https://github.com/trigeorgis/tensorflow

But when I use it in v0.10.0, it requires me to define a shape function.
I really want to use it in the future, so I am glad it can be added as a new feature.
Other solution I tried
I have tried use extract_glimpse() instead.
output_list = [[] for _ in range(batch_size)]   # create n_patch list
locations = locations/image_size  # normalize the location
for j in range(n_patch):
    patch_one = tf.image.glimpse(batch_image, tf.constant([20, 20]), locations[:, j, :], centered=False)
    for i in range(batch_size):
          output_list[i].append(patch_one[j])  # add tensor to each list
patches = tf.pack(output_list)  # pack the list to tensor, size = [batch_size, n_patch, patch_size, patch_height, image_channel]