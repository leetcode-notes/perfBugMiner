'utf-8' codec can't decode byte (in tutorial)

I'm getting an error "'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte" error when I try to run the MNIST tutorial (specifically, the dataset import).
Environment info
Operating System: Ubuntu 15.04
Python: 3.4.3
Tensorflow from source, commit: 03bff43
Steps to reproduce

Install fresh python3 venv (pyvenv venv)
Activate venv
uninstall and re-install protobuf 3.0.0a3 to fix 487
pip install "built whl file"
In a python terminal, run:

from tensorflow.examples.tutorials.mnist import input_data
mnist = input_data.read_data_sets('MNIST_data', one_hot=True)
Full Error Output
UnicodeDecodeError                        Traceback (most recent call last)
 in ()
1 import tensorflow
2 from tensorflow.examples.tutorials.mnist import input_data
----> 3 mnist = input_data.read_data_sets('MNIST_data', one_hot=True)
/home/ubuntu/venv/standard/lib/python3.4/site-packages/tensorflow/examples/tutorials/mnist/input_data.py in read_data_sets(train_dir, fake_data, one_hot, dtype)
197
198   local_file = maybe_download(TRAIN_IMAGES, train_dir)
--> 199   train_images = extract_images(local_file)
200
201   local_file = maybe_download(TRAIN_LABELS, train_dir)
/home/ubuntu/venv/standard/lib/python3.4/site-packages/tensorflow/examples/tutorials/mnist/input_data.py in extract_images(filename)
56   print('Extracting', filename)
57   with tf.gfile.Open(filename) as f, gzip.GzipFile(fileobj=f) as bytestream:
---> 58     magic = _read32(bytestream)
59     if magic != 2051:
60       raise ValueError(
/home/ubuntu/venv/standard/lib/python3.4/site-packages/tensorflow/examples/tutorials/mnist/input_data.py in _read32(bytestream)
49 def _read32(bytestream):
50   dt = numpy.dtype(numpy.uint32).newbyteorder('>')
---> 51   return numpy.frombuffer(bytestream.read(4), dtype=dt)[0]
52
53
/usr/lib/python3.4/gzip.py in read(self, size)
363         else:               # just get some more of it
364             while size > self.extrasize:
--> 365                 if not self._read(readsize):
366                     if size > self.extrasize:
367                         size = self.extrasize
/usr/lib/python3.4/gzip.py in _read(self, size)
431             # jump to the next member, if there is one.
432             self._init_read()
--> 433             if not self._read_gzip_header():
434                 return False
435             self.decompress = zlib.decompressobj(-zlib.MAX_WBITS)
/usr/lib/python3.4/gzip.py in _read_gzip_header(self)
290
291     def _read_gzip_header(self):
--> 292         magic = self.fileobj.read(2)
293         if magic == b'':
294             return False
/usr/lib/python3.4/gzip.py in read(self, size)
88             self._read = None
89             return self._buffer[read:] + 
---> 90                    self.file.read(size-self._length+read)
91
92     def prepend(self, prepend=b'', readprevious=False):
/home/ubuntu/venv/standard/lib/python3.4/site-packages/tensorflow/python/platform/default/_gfile.py in sync(self, _args, *_kwargs)
43       if hasattr(self, '_locker'): self._locker.lock()
44       try:
---> 45         return fn(self, _args, *_kwargs)
46       finally:
47         if hasattr(self, '_locker'): self._locker.unlock()
/home/ubuntu/venv/standard/lib/python3.4/site-packages/tensorflow/python/platform/default/_gfile.py in read(self, n)
197       A string of the bytes read, up to the end of file.
198     """
--> 199     return self._fp.read(n)
200
201   @_synchronized
/usr/lib/python3.4/codecs.py in decode(self, input, final)
317         # decode input (taking the buffer into account)
318         data = self.buffer + input
--> 319         (result, consumed) = self._buffer_decode(data, self.errors, final)
320         # keep undecoded input until the next call
321         self.buffer = data[consumed:]
UnicodeDecodeError: 'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte