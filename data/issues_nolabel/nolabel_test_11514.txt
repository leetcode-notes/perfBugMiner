tf.assign is much slower than tf.assign_add on CPU

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): ubuntu 14.04
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): ('v0.8.0rc0-16474-gac98d11', '1.2.1')
Python version: Python 2.7.13 :: Anaconda custom (64-bit)
Bazel version (if compiling from source): 0.4.5
CUDA/cuDNN version:cuda8.0/cudnn6.0
GPU model and memory:old titan x / 12GB
Exact command to reproduce: a python script

Describe the problem
tf.assign is much slower than tf.assign_add on CPU when intra_op_parallelism_threads set to 10. Although tensorflow treats these two operations a little different(maybe because tf.assign allows uninitialized tensor, accepts more tensor types), they all use a same class in eigen. I find this problem when doing some test about #11411.
Source code / logs
script is on gist,
dtype is <dtype: 'float32'>
use tf.assign: 3480.53776469 MB/s
use tf.assign_add: 10737.1193186 MB/s

set intra_op_parallelism_threads to 1,
dtype is <dtype: 'float32'>
use tf.assign: 3481.3296105 MB/s
use tf.assign_add: 4244.41816359 MB/s

on GPU,
dtype is <dtype: 'float32'>
use tf.assign: 120361.172131 MB/s
use tf.assign_add: 77835.7152633 MB/s