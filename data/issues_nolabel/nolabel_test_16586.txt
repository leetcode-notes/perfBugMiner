Force sorting of CUDA/Python headers to avoid spurious rebuilds

If one does try to re-use Bazel cache of a TensorFlow CUDA-enabled
build, then it might happen that readdir() syscall behind the use of
find in _read_dir() will generate a different ordering of the very same
list of headers. This will make new genrules for symlinking the CUDA
headers and in the end it will result in different actionKey computed by
Bazel, hence invalidating the action cache.
Fixes #16585