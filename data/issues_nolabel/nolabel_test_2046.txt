Segment fault after upgrade the protobuf for >64MB limit

Environment info
Operating System:  CentOS Linux release 7.2.1511 (Core)
Installed version of CUDA and cuDNN:
-rw-r--r--. 1 root root   322936 4月   5 01:42 /usr/local/cuda/lib64/libcudadevrt.a
lrwxrwxrwx. 1 root root       16 4月   5 01:42 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.7.5
lrwxrwxrwx. 1 root root       19 4月   5 01:42 /usr/local/cuda/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18
-rwxr-xr-x. 1 root root   383336 4月   5 01:42 /usr/local/cuda/lib64/libcudart.so.7.5.18
-rw-r--r--. 1 root root   720192 4月   5 01:42 /usr/local/cuda/lib64/libcudart_static.a
-rwxr-xr-x. 1 root root 61453024 4月  19 05:36 /usr/local/cuda/lib64/libcudnn.so
-rwxr-xr-x. 1 root root 61453024 4月  19 05:36 /usr/local/cuda/lib64/libcudnn.so.4
-rwxr-xr-x. 1 root root 61453024 4月  19 05:36 /usr/local/cuda/lib64/libcudnn.so.4.0.7
-rwxr-xr-x. 1 root root 11172416 4月  12 01:12 /usr/local/cuda/lib64/libcudnn.so.6.5
-rwxr-xr-x. 1 root root 11172416 4月  12 01:12 /usr/local/cuda/lib64/libcudnn.so.6.5.48
-rwxr-xr-x. 1 root root 48217000 4月  19 05:36 /usr/local/cuda/lib64/libcudnn.so.7.0
-rwxr-xr-x. 1 root root 48217000 4月  19 05:36 /usr/local/cuda/lib64/libcudnn.so.7.0.64
-rw-r--r--. 1 root root 62025862 4月  19 05:36 /usr/local/cuda/lib64/libcudnn_static.a


Steps to reproduce

Install the tensorflow 0.8.0rc0
pip install --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp27-none-linux_x86_64.whl
Upgrade the protobuf
pip install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/protobuf-3.0.0b2.post2-cp27-none-linux_x86_64.whl
"import tensorflow" will have segment fault
No segment fault if not upgrade the protobuf.

The core info is:
`(gdb) bt
#0  0x00007f9606e2a2f1 in std::__detail::_Map_base<google::protobuf::Descriptor const*, std::pair<google::protobuf::Descriptor const* const, google::protobuf::DynamicMessage::TypeInfo const*>, std::allocator<std::pair<google::protobuf::Descriptor const* const, google::protobuf::DynamicMessage::TypeInfo const*> >, std::__detail::_Select1st, std::equal_to<google::protobuf::Descriptor const*>, google::protobuf::hash<google::protobuf::Descriptor const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](google::protobuf::Descriptor const* const&) () from /usr/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow.so
#1  0x00007f9606e2a3d3 in google::protobuf::DynamicMessageFactory::GetPrototypeNoLock(google::protobuf::Descriptor const*) ()
from /usr/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow.so
#2  0x00007f9606e2b02a in google::protobuf::DynamicMessageFactory::GetPrototype(google::protobuf::Descriptor const*) () from /usr/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow.so
#3  0x00007f95ee4f5129 in google::protobuf::python::cmessage::New (cls=, unused_args=, unused_kwargs=) at google/protobuf/pyext/message.cc:1255
#4  0x00007f9618131d23 in type_call () from /lib64/libpython2.7.so.1.0
#5  0x00007f96180dc0b3 in PyObject_Call () from /lib64/libpython2.7.so.1.0
#6  0x00007f961817025c in PyEval_EvalFrameEx () from /lib64/libpython2.7.so.1.0
#7  0x00007f96181740bd in PyEval_EvalCodeEx () from /lib64/libpython2.7.so.1.0
#8  0x00007f96181741c2 in PyEval_EvalCode () from /lib64/libpython2.7.so.1.0
#9  0x00007f9618183fac in PyImport_ExecCodeModuleEx () from /lib64/libpython2.7.so.1.0
#10 0x00007f9618184228 in load_source_module () from /lib64/libpython2.7.so.1.0`
I also reported the problem here: tensorflow_serving issue