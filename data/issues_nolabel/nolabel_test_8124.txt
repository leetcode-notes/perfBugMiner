Build failure, XLA, OS/X

I've written OS/X, but I'm pretty sure this is going to fail on all platforms:
tensorflow/compiler/tf2xla/xla_compiler.cc:228:44: error: no type named 'size_typ' in 'std::__1::vector<tensorflow::XlaCompiler::Argument, std::__1::allocator<tensorflow::XlaCompiler::Argument> >'; did you mean 'size_type'?
  for (std::vector<XlaCompiler::Argument>::size_typ i = 0;
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
                                           size_type
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/vector:470:54: note: 'size_type' declared here
    typedef typename __base::size_type               size_type;
                                                     ^
tensorflow/compiler/tf2xla/xla_compiler.cc:480:33: error: no member named 'VariableWrite' in 'tensorflow::XlaCompiler'
  for (std::vector<XlaCompiler::VariableWrite>::size_type  i = 0;
                   ~~~~~~~~~~~~~^
tensorflow/compiler/tf2xla/xla_compiler.cc:480:47: error: no template named 'size_type' in the global namespace; did you mean 'std::__size_type'?
  for (std::vector<XlaCompiler::VariableWrite>::size_type  i = 0;
                                              ^~~~~~~~~~~
                                              std::__size_type
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/memory:1090:8: note: 'std::__size_type' declared here
struct __size_type
       ^
tensorflow/compiler/tf2xla/xla_compiler.cc:480:49: error: use of class template '::__size_type' requires template arguments
  for (std::vector<XlaCompiler::VariableWrite>::size_type  i = 0;
                                                ^
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/memory:1090:8: note: template is declared here
struct __size_type
       ^
4 errors generated.