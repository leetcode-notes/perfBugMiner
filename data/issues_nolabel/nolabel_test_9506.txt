No supported kernel for GPU devices is available for assigning a variable of int32 type

tensorflow version  v1.1.0-rc0-61-g1ec6ed5
code to reproduce
#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import tensorflow as tf
print(tf.GIT_VERSION, tf.VERSION)

for device in ['cpu', 'gpu']:
    print(device)
    with tf.device('/{}:0'.format(device)):
        var = tf.get_variable('var{}'.format(device), shape=[1], dtype='int32')
        vari = tf.assign(var, [23])

    sess = tf.Session()
    sess.run(vari)
error
tensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device to node 'vargpu': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.

This should be caused by TF_CALL_GPU_NUMBER_TYPES only iterating over float types, and it is used to generate the assign kernels. However TF_CALL_NUMBER_TYPES iterates over all types including integers. Is this asymmetry a deliberate design choice?