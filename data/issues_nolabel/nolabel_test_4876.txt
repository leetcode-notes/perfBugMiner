Eigen::TensorEvaluator `m_impl` is private, compiling cxx11_tensor_cuda.cu

i know this is a bug for Eigen repo, but the owner of the file seems to be Benoit Steiner, so tentatively thinking here might be a good place to file it?
If I build cxx11_tensor_cuda.cu using standard eigen build process, it does in fact compile.
However, if I build using clang, I get the following error:
In file included from test/eigen/cxx11_tensor_cuda.cu:19:
In file included from /usr/local/eigen/unsupported/Eigen/CXX11/Tensor:95:
/usr/local/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReductionCuda.h:687:50: error: 
      'm_impl' is a private member of 'Eigen::TensorEvaluator<const
      Eigen::TensorReductionOp<Eigen::internal::MaxReducer<float>, const
      Eigen::array<long, 2>, const Eigen::TensorMap<Eigen::Tensor<float, 4, 0,
      long>, 0> >, Eigen::GpuDevice>'
      typename Self::CoeffReturnType val = input.m_impl.coeff(j * num_pr...
...
test/eigen/cxx11_tensor_cuda.cu:234:30: note: in instantiation of function
      template specialization
      'Eigen::TensorDevice<Eigen::TensorMap<Eigen::Tensor<float, 2, 0, long>,
      0>,
      Eigen::GpuDevice>::operator=<Eigen::TensorReductionOp<Eigen::internal::MaxReducer<float>,
      const Eigen::array<long, 2>, const Eigen::TensorMap<Eigen::Tensor<float,
      4, 0, long>, 0> > >' requested here
  gpu_out.device(gpu_device) = gpu_in1.maximum(reduction_axis);
                             ^
/usr/local/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h:732:36: note: 
      declared private here
  TensorEvaluator<ArgType, Device> m_impl;

I'm building as follows:

(optional) comment out lines 15-17, to disable fp16
run, from cloned eigen repo:

 clang++-3.8 -std=c++11 -I. -Itest -Ibuild/test -I/usr/local/cuda-7.5/include unsupported/test/cxx11_tensor_cuda.cu --cuda-host-only -emit-llvm  -O3 -S -o cxx11_tensor_cuda-hostraw.ll

Thoughts?  @benoitsteiner
(edited to have a correct commandline, tested from root of cloned eigen repo)