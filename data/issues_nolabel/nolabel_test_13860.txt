cudnnGRU is_training placeholder

When creating a model with batch normalisation I can supply a place-holder for the is_training param like so:
training = tf.placeholder(tf.bool)  
sym = create_symbol(training)
# ....
# Training: sess.run(model, feed_dict={X: data, y: label, training: True})
# Inference: sess.run(pred, feed_dict={X: data, training: False})

However when I do this for a symbol that contains cudnnGRU (or cudnnLSTM), it doesn't like the place-holder:
cudnn_cell = tf.contrib.cudnn_rnn.CudnnGRU(num_layers=1, 
                                           num_units=NUMHIDDEN, 
                                           input_size=EMBEDSIZE)    # Set params
params_size_t = cudnn_cell.params_size()
params = tf.Variable(tf.random_uniform([params_size_t]), validate_shape=False)   
input_h = tf.Variable(tf.zeros([1, BATCHSIZE, NUMHIDDEN]))
outputs, states = cudnn_cell(is_training=training ,
                             input_data=word_list,
                             input_h=input_h,
                             params=params)

Error message:


TypeError: Expected bool for argument 'is_training' not <tf.Tensor 'Placeholder_2:0' shape= dtype=bool>.