Android example fails to build with AndroidResourceProcessingAction: No such file or directory

Environment info
Operating System:
Ubuntu 16.04 LTS
Installed version of CUDA and cuDNN:
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
-rw-r--r-- 1 root root 189170 May 18 19:42 /usr/local/cuda/lib/libcudadevrt.a
lrwxrwxrwx 1 root root     16 May 18 19:42 /usr/local/cuda/lib/libcudart.so -> libcudart.so.7.5
lrwxrwxrwx 1 root root     19 May 18 19:42 /usr/local/cuda/lib/libcudart.so.7.5 -> libcudart.so.7.5.18
-rwxr-xr-x 1 root root 311596 May 18 19:42 /usr/local/cuda/lib/libcudart.so.7.5.18
-rw-r--r-- 1 root root 558020 May 18 19:42 /usr/local/cuda/lib/libcudart_static.a

If installed from binary pip package, provide:

Which pip package you installed.:
Compiled python wheel from source and installed it. But I don't think that is relevant for building the Android demo. I maybe wrong.
The output from python -c "import tensorflow; print(tensorflow.__version__)".
0.8.0

If installed from sources, provide the commit hash:
Don't have it
Steps to reproduce
$ git clone https://github.com/tensorflow/tensorflow.git
$ cd tensorflow
$ # Edit WORKSPACE file
$ head -n 20 WORKSPACE 
workspace(name = "org_tensorflow")


android_sdk_repository(
    name = "androidsdk",
    api_level = 23,
    build_tools_version = "23.0.1",
    # Replace with path to Android SDK on your system
    path = "/home/username/Android/Sdk",
)

android_ndk_repository(
    name="androidndk",
    path="/home/username/software/android-ndk-r10e",
    api_level=21)

# Please add all new TensorFlow dependencies in workspace.bzl.
load("//tensorflow:workspace.bzl", "tf_workspace")
tf_workspace()

$ ls ~/Android/Sdk/
add-ons  build-tools  extras  licenses  ndk-bundle  platforms  platform-tools  SDK Readme.txt  sources  system-images  temp  tools
$ ls ~/software/android-ndk-r10e/
build  find-win-host.cmd  ndk-build      ndk-depends  ndk-gdb-py  ndk-gdb-py.cmd  ndk-which  prebuilt    RELEASE.TXT                samples  tests
docs   GNUmakefile        ndk-build.cmd  ndk-gdb      ndk-gdb.py  ndk-stack       platforms  README.TXT  remove-windows-symlink.sh  sources  toolchains

$ bazel build //tensorflow/examples/android:tensorflow_demo

What have you tried?
Nothing yet.
Logs or other output that would be helpful
ERROR: /home/username/tmp/tensorflow/tensorflow/examples/android/BUILD:47:1: Processing resources failed: namespace-sandbox failed: error executing command /home/username/.cache/bazel/_bazel_username/2b0ff57a0352a92ef031f8d7910813fd/tensorflow/_bin/namespace-sandbox ... (remaining 26 argument(s) skipped).
bazel-out/host/bin/external/bazel_tools/tools/android/resources_processor: line 21: /home/username/.cache/bazel/_bazel_username/2b0ff57a0352a92ef031f8d7910813fd/tensorflow/bazel-out/host/bin/external/bazel_tools/tools/android/resources_processor.runfiles/external/bazel_tools/src/tools/android/java/com/google/devtools/build/android/AndroidResourceProcessingAction: No such file or directory

I notice that although the file bazel is looking for does not exist, this file seems to be there
~/.cache/bazel/_bazel_username/2b0ff57a0352a92ef031f8d7910813fd/tensorflow/bazel-out/host/bin/external/bazel_tools/tools/android/resources_processor.runfiles/org_tensorflow/external/bazel_tools/src/tools/android/java/com/google/devtools/build/android/AndroidResourceProcessingAction

It looks to me that some component is not attaching "org_tensorflow" to some path
I did a fresh clone and tried compiling the Android example without compiling the rest of tensorflow. My assumption is that bazel would build whatever was necessary. I will attach the full log if it's required.