dso_loader on MacOS opens libcudnn.dylib instead of libcudnn.5.dylib

I'm getting error below after syncing. Was there something in last 24 hours that affected how libcudnn filename is resolved?
Couldn't open CUDA library libcudnn.dylib. LD_LIBRARY_PATH: /usr/local/cuda/lib
Instead I have these files
-rwxr-xr-x@ 1 yaroslavvb  staff  58270280 Apr 22 17:19 libcudnn.5.dylib
-rw-r--r--@ 1 yaroslavvb  staff  55551064 Apr 22 17:19 libcudnn_static.a

This worked for me as a work-around:
bash-3.2$ cd /usr/local/cuda/lib
bash-3.2$ ln -s libcudnn.5.dylib libcudnn.dylib


PS: my configure run is below.
bash-3.2$ ./configure
Please specify the location of python. [Default is /usr/bin/python]: 
Do you wish to build TensorFlow with Google Cloud Platform support? [y/N] n
No Google Cloud Platform support will be enabled for TensorFlow
Do you wish to build TensorFlow with GPU support? [y/N] y
GPU support will be enabled for TensorFlow
Please specify which gcc nvcc should use as the host compiler. [Default is /usr/bin/gcc]: 
Please specify the Cuda SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 7.5
Please specify the location where CUDA 7.5 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: 
Please specify the Cudnn version you want to use. [Leave empty to use system default]: 5
Please specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: 
Please specify a list of comma-separated Cuda compute capabilities you want to build with.
You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.
Please note that each additional compute capability significantly increases your build time and binary size.
[Default is: "3.5,5.2"]: 3.0


Note: oneÂ productivity sink is that git pull overwrites files that are written by ./configure because they are checked in, so at each pull you need to run ./configure or stash/merge. Also, Bazel is not fully hermetic, so if you bazel build with incorrect configure once, you will then need to bazel clean. This issue can be non obvious -- things run but give numerically incorrect results