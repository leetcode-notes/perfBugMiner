Unable to build label_image example, master branch

I am on OSX 10.11.12 (El Capitan)
Installed from source, on master branch
git rev-parse HEAD: a566a7701381a5cf7f70fce397759483764e482
bazel version: 0.3.2-homebrew
I am getting a series of errors when trying to build the label_image example from a freshly downloaded and configured (all default options, no CUDA, GPU, or Hadoop support) tensorflow source.
bazel build tensorflow/examples/label_image ...
output:
ERROR: /Users/corey/Documents/school/hpc/tensorflow/tensorflow/core/BUILD:353:1: C++ compilation of rule '//tensorflow/core:string_ops_op_lib' failed: cc_wrapper.sh failed: error executing command external/local_config_cc/cc_wrapper.sh -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -Wall -Wthread-safety -Wself-assign -fcolor-diagnostics -fno-omit-frame-pointer '-std=c++0x' -MD -MF ... (remaining 92 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.
tensorflow/core/ops/string_ops.cc:186:11: error: return type 'const ::tensorflow::Status' must match previous return type 'tensorflow::Status' when lambda expression has unspecified explicit return type
TF_RETURN_IF_ERROR(c->Merge(out, c->input(i), &out));
^
./tensorflow/core/lib/core/errors.h:43:42: note: expanded from macro 'TF_RETURN_IF_ERROR'
if (TF_PREDICT_FALSE(!_status.ok())) return status; 
^
tensorflow/core/ops/string_ops.cc:216:7: error: return type 'tensorflow::Status' must match previous return type 'const ::tensorflow::Status' when lambda expression has unspecified explicit return type
return Status::OK();
^
tensorflow/core/ops/string_ops.cc:208:17: error: no viable conversion from 'tensorflow::(lambda at tensorflow/core/ops/string_ops.cc:208:17)' to 'tensorflow::Status ()(shape_inference::InferenceContext )'
.SetShapeFn([](InferenceContext c) {
^~~~~~~~~~~~~~~~~~~~~~~~~
tensorflow/core/ops/string_ops.cc:208:17: note: candidate function
./tensorflow/core/framework/op.h:247:16: note: passing argument to parameter 'fn' here
Status (_fn)(shape_inference::InferenceContext*)) {
^
3 errors generated.
Thanks for any advice or help!