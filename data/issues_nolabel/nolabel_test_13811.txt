fix the issue: "libcuda.so.1 not found" and add some minor changes.

The newer version of Bazel, i.e. BAZEL_VERSION=0.6.1 won't cause any trouble. I've built the image that uses this version of Bazel successfully.


python-wheel has to be installed, otherwise

error: invalid command 'bdist_wheel'

pops out while building the docker image.


I add Compute Capability7.0 in order to support NVIDIA Tesla V100.


Currently, ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 is necessary, otherwise you will see the following warning while building the image:

/usr/bin/ld: warning: libcuda.so.1, needed by bazel-out/host/bin/_solib_local/_U_S_Stensorflow_Scc_Cops_Simage_Uops_Ugen_Ucc___Utensorflow/libtensorflow_framework.so, not found (try using -rpath or -rpath-link)

and the installation of TensorFlow will fail due to this.


I prefer tensorflow/tools/ci_build/builds/configured GPU rather than yes "" | ./configure when it comes to configure TensorFlow, since it outputs more information that sometimes could be helpful, such as:

TF_BUILD_INFO = {container_type: "gpu", command: "", source_HEAD: "bedfe8ac14bddbf21c5acf80d55abff9df4a7967", source_remote_origin: "https://github.com/tensorflow/tensorflow.git", OS: "Linux", kernel: "4.4.0-92-generic", architecture: "x86_64", processor: "Intel(R) Xeon(R) CPU E5-2698 v4 @ 2.20GHz", processor_count: "80", memory_total: "528276076 kB", swap_total: "0 kB", Bazel_version: "Build label: 0.6.1", Java_version: "1.8.0_131", Python_version: "2.7.12", gpp_version: "g++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609", swig_version: "", NVIDIA_driver_version: "384.81", CUDA_device_count: "0", CUDA_device_names: "", CUDA_toolkit_version: "V9.0.176"}