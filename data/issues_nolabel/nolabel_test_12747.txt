How to build a full C++ API libtensorflow_cc.so for Android?

Describe the problem
When I use
bazel build -c opt //tensorflow:libtensorflow_cc.so --crosstool_top=//external:android/crosstool --cpu=armeabi-v7a --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --verbose_failures

to compile the full C++ API libtensorflow_cc.so for Android, but It can not work.
Source code / logs
C++ compilation of rule '@highwayhash//:sip_hash' failed (Exit 1): arm-linux-androideabi-gcc failed: error executing command 
  (exec env - \
    PATH=/home/mlin2/.cargo/bin:/home/mlin2/bin:/home/mlin2/anaconda2/bin:/usr/lib64/qt-3.3/bin:/home/mlin2/perl5/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/go/bin:/opt/gopath/bin:/home/mlin2/software/android-ndk-r12b/:/home/mlin2/.fzf/bin:/home/mlin2/.local/bin:/home/mlin2/bin \
    PWD=/proc/self/cwd \
    PYTHON_BIN_PATH=/home/mlin2/anaconda2/bin/python \
    PYTHON_LIB_PATH=/home/mlin2/anaconda2/lib/python2.7/site-packages \
    TF_NEED_CUDA=0 \
    TF_NEED_OPENCL=0 \
  external/androidndk/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-gcc -fstack-protector-strong -fpic -ffunction-sections -funwind-tables -no-canonical-prefixes -fno-canonical-system-headers '-march=armv7-a' '-mfpu=vfpv3-d16' '-mfloat-abi=softfp' -mthumb -Os -g -DNDEBUG -MD -MF bazel-out/arm-linux-androideabi-4.9-v7a-gnu-libstdcpp-opt/bin/external/highwayhash/_objs/sip_hash/external/highwayhash/highwayhash/sip_hash.d '-frandom-seed=bazel-out/arm-linux-androideabi-4.9-v7a-gnu-libstdcpp-opt/bin/external/highwayhash/_objs/sip_hash/external/highwayhash/highwayhash/sip_hash.o' -iquote external/highwayhash -iquote bazel-out/arm-linux-androideabi-4.9-v7a-gnu-libstdcpp-opt/genfiles/external/highwayhash -iquote external/bazel_tools -iquote bazel-out/arm-linux-androideabi-4.9-v7a-gnu-libstdcpp-opt/genfiles/external/bazel_tools -isystem external/bazel_tools/tools/cpp/gcc3 '--sysroot=external/androidndk/ndk/platforms/android-14/arch-arm' -isystem external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include -isystem external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/libs/armeabi-v7a/include -isystem external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/backward -c external/highwayhash/highwayhash/sip_hash.cc -o bazel-out/arm-linux-androideabi-4.9-v7a-gnu-libstdcpp-opt/bin/external/highwayhash/_objs/sip_hash/external/highwayhash/highwayhash/sip_hash.o).
In file included from external/highwayhash/highwayhash/arch_specific.h:23:0,
                 from external/highwayhash/highwayhash/sip_hash.h:23,
                 from external/highwayhash/highwayhash/sip_hash.cc:15:
external/highwayhash/highwayhash/state_helpers.h: In function 'void highwayhash::PaddedUpdate(highwayhash::HH_U64, const char*, highwayhash::HH_U64, State*)':
external/highwayhash/highwayhash/compiler_specific.h:50:30: error: expected initializer before 'alignas'
 #define HH_ALIGNAS(multiple) alignas(multiple)  // C++11
                              ^
external/highwayhash/highwayhash/state_helpers.h:49:41: note: in expansion of macro 'HH_ALIGNAS'
   char final_packet[State::kPacketSize] HH_ALIGNAS(32) = {0};
                                         ^
In file included from external/highwayhash/highwayhash/sip_hash.h:25:0,
                 from external/highwayhash/highwayhash/sip_hash.cc:15:
external/highwayhash/highwayhash/state_helpers.h:64:10: error: 'final_packet' was not declared in this scope
   memcpy(final_packet, remaining_bytes, remaining_size - remainder_mod4);
          ^
external/highwayhash/highwayhash/state_helpers.h: In function 'void highwayhash::UpdateState(const char*, highwayhash::HH_U64, State*)':
external/highwayhash/highwayhash/state_helpers.h:76:76: error: there are no arguments to 'static_assert' that depend on a template parameter, so a declaration of 'static_assert' must be available [-fpermissive]
   static_assert((kPacketSize & (kPacketSize - 1)) == 0, "Size must be 2^i.");
                                                                            ^
external/highwayhash/highwayhash/state_helpers.h:76:76: note: (if you use '-fpermissive', G++ will accept your code, but allowing the use of an undeclared name is deprecated)
In file included from external/highwayhash/highwayhash/sip_hash.cc:15:0:
external/highwayhash/highwayhash/sip_hash.h: At global scope:
external/highwayhash/highwayhash/sip_hash.h:33:9: error: expected nested-name-specifier before 'Key'
   using Key = HH_U64[2];
         ^
external/highwayhash/highwayhash/sip_hash.h:36:42: error: 'Key' does not name a type
   explicit HH_INLINE SipHashStateT(const Key& key) {
                                          ^
external/highwayhash/highwayhash/sip_hash.h: In constructor 'highwayhash::SipHashStateT<kUpdateIters, kFinalizeIters>::SipHashStateT(const int&)':
external/highwayhash/highwayhash/sip_hash.h:37:39: error: invalid types 'const int[int]' for array subscript
     v0 = 0x736f6d6570736575ull ^ key[0];
                                       ^
external/highwayhash/highwayhash/sip_hash.h:38:39: error: invalid types 'const int[int]' for array subscript
     v1 = 0x646f72616e646f6dull ^ key[1];
                                       ^
external/highwayhash/highwayhash/sip_hash.h:39:39: error: invalid types 'const int[int]' for array subscript
     v2 = 0x6c7967656e657261ull ^ key[0];
                                       ^
external/highwayhash/highwayhash/sip_hash.h:40:39: error: invalid types 'const int[int]' for array subscript
     v3 = 0x7465646279746573ull ^ key[1];
                                       ^
external/highwayhash/highwayhash/sip_hash.h: At global scope:
external/highwayhash/highwayhash/sip_hash.h:104:7: error: expected nested-name-specifier before 'SipHashState'
 using SipHashState = SipHashStateT<2, 4>;
       ^
external/highwayhash/highwayhash/sip_hash.h:105:7: error: expected nested-name-specifier before 'SipHash13State'
 using SipHash13State = SipHashStateT<1, 3>;
       ^
external/highwayhash/highwayhash/sip_hash.h:110:29: error: 'SipHashState' was not declared in this scope
 HH_INLINE void PaddedUpdate<SipHashState>(const HH_U64 size,
                             ^
external/highwayhash/highwayhash/sip_hash.h:113:43: error: 'SipHashState' has not been declared
                                           SipHashState* state) {
                                           ^
external/highwayhash/highwayhash/sip_hash.h:110:16: error: template-id 'PaddedUpdate<<expression error> >' for 'void highwayhash::PaddedUpdate(highwayhash::HH_U64, const char*, highwayhash::HH_U64, int*)' does not match any template declaration
 HH_INLINE void PaddedUpdate<SipHashState>(const HH_U64 size,
                ^
external/highwayhash/highwayhash/sip_hash.h:122:29: error: 'SipHash13State' was not declared in this scope
 HH_INLINE void PaddedUpdate<SipHash13State>(const HH_U64 size,
                             ^
external/highwayhash/highwayhash/sip_hash.h:125:45: error: 'SipHash13State' has not been declared
                                             SipHash13State* state) {
                                             ^
external/highwayhash/highwayhash/sip_hash.h:122:16: error: template-id 'PaddedUpdate<<expression error> >' for 'void highwayhash::PaddedUpdate(highwayhash::HH_U64, const char*, highwayhash::HH_U64, int*)' does not match any template declaration
 HH_INLINE void PaddedUpdate<SipHash13State>(const HH_U64 size,
                ^
external/highwayhash/highwayhash/sip_hash.h:146:39: error: 'SipHashState' does not name a type
 static HH_INLINE HH_U64 SipHash(const SipHashState::Key& key, const char* bytes,
                                       ^
external/highwayhash/highwayhash/sip_hash.h:146:56: error: expected unqualified-id before '&' token
 static HH_INLINE HH_U64 SipHash(const SipHashState::Key& key, const char* bytes,
                                                        ^
external/highwayhash/highwayhash/sip_hash.h:146:56: error: expected ')' before '&' token
external/highwayhash/highwayhash/sip_hash.h:146:58: error: expected initializer before 'key'
 static HH_INLINE HH_U64 SipHash(const SipHashState::Key& key, const char* bytes,
                                                          ^
external/highwayhash/highwayhash/sip_hash.h:152:41: error: 'SipHash13State' does not name a type
 static HH_INLINE HH_U64 SipHash13(const SipHash13State::Key& key,
                                         ^
external/highwayhash/highwayhash/sip_hash.h:152:60: error: expected unqualified-id before '&' token
 static HH_INLINE HH_U64 SipHash13(const SipHash13State::Key& key,
                                                            ^
external/highwayhash/highwayhash/sip_hash.h:152:60: error: expected ')' before '&' token
external/highwayhash/highwayhash/sip_hash.h:152:62: error: expected initializer before 'key'
 static HH_INLINE HH_U64 SipHash13(const SipHash13State::Key& key,
                                                              ^
external/highwayhash/highwayhash/sip_hash.cc:18:20: error: 'highwayhash::SipHash' has not been declared
 using highwayhash::SipHash;
                    ^
external/highwayhash/highwayhash/sip_hash.cc:19:20: error: 'highwayhash::SipHash13' has not been declared
 using highwayhash::SipHash13;
                    ^
external/highwayhash/highwayhash/sip_hash.cc:20:7: error: expected nested-name-specifier before 'Key'
 using Key = highwayhash::SipHashState::Key;
       ^
external/highwayhash/highwayhash/sip_hash.cc:21:7: error: expected nested-name-specifier before 'Key13'
 using Key13 = highwayhash::SipHash13State::Key;
       ^
external/highwayhash/highwayhash/sip_hash.cc: In function 'highwayhash::HH_U64 SipHashC(const HH_U64*, const char*, highwayhash::HH_U64)':
external/highwayhash/highwayhash/sip_hash.cc:26:42: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   return SipHash(*reinterpret_cast<const Key*>(key), bytes, size);
                                          ^
external/highwayhash/highwayhash/sip_hash.cc:26:42: error: expected '>' before 'Key'
external/highwayhash/highwayhash/sip_hash.cc:26:42: error: expected '(' before 'Key'
external/highwayhash/highwayhash/sip_hash.cc:26:42: error: 'Key' was not declared in this scope
external/highwayhash/highwayhash/sip_hash.cc:26:46: error: expected primary-expression before '>' token
   return SipHash(*reinterpret_cast<const Key*>(key), bytes, size);
                                              ^
external/highwayhash/highwayhash/sip_hash.cc: In function 'highwayhash::HH_U64 SipHash13C(const HH_U64*, const char*, highwayhash::HH_U64)':
external/highwayhash/highwayhash/sip_hash.cc:30:44: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   return SipHash13(*reinterpret_cast<const Key13*>(key), bytes, size);
                                            ^
external/highwayhash/highwayhash/sip_hash.cc:30:44: error: expected '>' before 'Key13'
external/highwayhash/highwayhash/sip_hash.cc:30:44: error: expected '(' before 'Key13'
external/highwayhash/highwayhash/sip_hash.cc:30:44: error: 'Key13' was not declared in this scope
external/highwayhash/highwayhash/sip_hash.cc:30:50: error: expected primary-expression before '>' token
   return SipHash13(*reinterpret_cast<const Key13*>(key), bytes, size);
                                                  ^
Target //tensorflow:libtensorflow_cc.so failed to build
INFO: Elapsed time: 1.812s, Critical Path: 0.14s