File object not being closed properly in 6_lstm.ipynb

The 6_lstm.ipynb file contains the following code:
def read_data(filename):
  f = zipfile.ZipFile(filename)
  for name in f.namelist():
    return tf.compat.as_str(f.read(name))
  f.close()
This code has the following issues:

The file object f does not get to close properly, since the function is
exited before the f.close() method ever gets to be called.
The for loop is uneccesary, since there is only one item in the zip file,
and since the return operator forces the loop to end on the first
loop anyway.

I propose the following code instead:
def read_data(filename):
  with zipfile.ZipFile(filename) as f:
    name = f.namelist()[0]
    data = tf.compat.as_str(f.read(name))
  return data
This code fixes the issues in the following ways:

The with statement will handle the file f being closed automatically, even
if there is an unexpected early termination.
Since there is actually only one item in the zip file, then we can just get
the zeroeth element in f.namelist()

I will create a pull request with this suggested code shortly.