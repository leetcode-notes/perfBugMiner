Cross Compiled For Rpi Successfully on Gentoo. No Scope and Session support.

Hello everyone.
I cross compiled from tensorflow master using armv7a-hardfloat-linux-gnueabi-gcc built using crossdev on Gentoo AMD64
make -j9 -f tensorflow/contrib/makefile/Makefile HOST_OS=LINUX TARGET=PI OPTFLAGS="-Os -mfpu=neon-vfpv4 -funsafe-math-optimizations -ftree-vectorize" CXX=armv7a-hardfloat-linux-gnueabi-g++
I am able to execute on Rpi, the sample label_image.cc program by compiling it manually using
armv7a-hardfloat-linux-gnueabi-g++ -Wl,--whole-archive lib/libtensorflow-core.a -Wl,--whole-archive lib/libnsync.a -Wl,--no-whole-archive lib/libprotobuf.a -ldl -lm -lpthread -lz -I include/ -I include/public/ label_image.cc -std=c++11 armv7a-hardfloat-linux-gnueabi-pkg-config --cflags --libs libjpeg -o test
However, when trying to compile a program that uses tensorflow::Scope and tensorflow::ClientSession, i get undefined references to them
$ armv7a-hardfloat-linux-gnueabi-g++ -Wl,--whole-archive lib/libtensorflow-core.a -Wl,--whole-archive lib/libnsync.a -Wl,--no-whole-archive lib/libprotobuf.a -ldl -lm -lpthread -lz -I include/ -I include/public/ test.cpp -std=c++11 -o test
/tmp/ccZyvm2X.o: In function main': test.cpp:(.text+0x9c): undefined reference totensorflow::Scope::NewRootScope()'
test.cpp:(.text+0x114): undefined reference to tensorflow::Input::Initializer::Initializer(std::initializer_list<tensorflow::Input::Initializer> const&)' test.cpp:(.text+0x128): undefined reference totensorflow::ops::Const(tensorflow::Scope const&, tensorflow::Input::Initializer const&)'
test.cpp:(.text+0x1a4): undefined reference to tensorflow::Input::Initializer::Initializer(std::initializer_list<tensorflow::Input::Initializer> const&)' test.cpp:(.text+0x1b8): undefined reference totensorflow::ops::Const(tensorflow::Scope const&, tensorflow::Input::Initializer const&)'
test.cpp:(.text+0x220): undefined reference to tensorflow::Scope::WithOpName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' test.cpp:(.text+0x280): undefined reference totensorflow::ops::MatMul::MatMul(tensorflow::Scope const&, tensorflow::Input, tensorflow::Input, tensorflow::ops::MatMul::Attrs const&)'
test.cpp:(.text+0x2a4): undefined reference to tensorflow::Scope::~Scope()' test.cpp:(.text+0x2dc): undefined reference totensorflow::ClientSession::ClientSession(tensorflow::Scope const&)'
test.cpp:(.text+0x334): undefined reference to tensorflow::ClientSession::Run(std::vector<tensorflow::Output, std::allocator<tensorflow::Output> > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*) const' test.cpp:(.text+0x448): undefined reference totensorflow::ClientSession::~ClientSession()'
test.cpp:(.text+0x484): undefined reference to tensorflow::Scope::~Scope()' test.cpp:(.text+0x53c): undefined reference totensorflow::Scope::~Scope()'
test.cpp:(.text+0x5e4): undefined reference to tensorflow::ClientSession::~ClientSession()' test.cpp:(.text+0x62c): undefined reference totensorflow::Scope::~Scope()'
collect2: error: ld returned 1 exit status
Has support for Scope and ClientSession intentionally been left out of the Makefile?
Is there a way to add support for it?
Regards
Mandar Joshi