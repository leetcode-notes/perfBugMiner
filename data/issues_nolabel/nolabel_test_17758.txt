tensorflow.contrib.mpi import fails even though tensorflow is compiled with mpi

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): 4.9.85-37.55.amzn1.x86_64 (centOS)
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): 1.6
Python version: 3.5
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source): 4.8.5
CUDA/cuDNN version: 9.0/7.0
GPU model and memory:
Exact command to reproduce: import tensorflow.contrib.mpi

Describe the problem
I have compiled tensorflow from source and used the following configuration -
export JAVA_HOME=/usr/java/jdk1.8.0_121/
export TF_NEED_JEMALLOC=1
export TF_NEED_GCP=0
export TF_NEED_HDFS=1
export TF_NEED_S3=1
export TF_ENABLE_XLA=0
export TF_NEED_GDR=0
export TF_NEED_VERBS=0
export TF_NEED_OPENCL_SYCL=0
export TF_NEED_COMPUTECPP=0
export TF_NEED_CUDA=1
export CUDA_TOOLKIT_PATH=/usr/local/cuda
export CUDNN_INSTALL_PATH=/usr/local/cuda
export TF_CUDA_COMPUTE_CAPABILITIES=3.0,3.5,5.2
export TF_CUDA_CLANG=0
export TF_NEED_MPI=1
export MPI_HOME=/usr/local/mpi
export GCC_HOST_COMPILER_PATH=$(which gcc)
export CC_OPT_FLAGS="-march=native"
export TF_NEED_MKL=0
export TF_DOWNLOAD_MKL=0
export TF_CUDA_VERSION="$(nvcc --version | sed -n 's/^.*release \(.*\),.*/\1/p')"
export TF_CUDNN_VERSION="$(sed -n 's/^#define CUDNN_MAJOR\s*\(.*\).*/\1/p' $CUDNN_INSTALL_PATH/include/cudnn.h)"
export PYTHON_BIN_PATH=/usr/lib/python/bin/python
export PYTHON_LIB_PATH="$($PYTHON_BIN_PATH -c 'import site; print(site.getsitepackages()[0])')"

export OMPI_SKIP_MPICXX=1
export CC_OPT_FLAGS="-DOMPI_SKIP_MPICXX=1 -march=native"

I installed tf using the wheel file generated after compiling. However, when I try to run import tensorflow.contrib.mpi it throws an import error -
ImportError: No module named 'tensorflow.mpi'