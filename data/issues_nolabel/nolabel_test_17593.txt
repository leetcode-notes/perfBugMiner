tf.TensorShape equality comparison can return True for non-fully defined shapes

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes, but trivial one-liner code.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): platform independent problem
TensorFlow installed from (source or binary): either
TensorFlow version (use command below): v1.6.0-0-gd2e24b6039 1.6.0
Python version:  tested in 3.5 and 3.6
Bazel version (if compiling from source): not relevant
GCC/Compiler version (if compiling from source): not relevant
CUDA/cuDNN version: not relevant
GPU model and memory: not relevant
Exact command to reproduce: see source one-liner below

Describe the problem
tf.TensorShape equality comparison is designed to return None if any of its dimensions has a value of None. However, there is one case when this behavior fails and returns True when it shouldn't.
Source code / logs
dim = tf.Dimension(None)
tf.TensorShape(dim) == tf.TensorShape(dim) # Returns True instead of None.
tf.TensorShape([None]) == tf.TensorShape([None]) # Correctly returns None.
This can, of course, inadvertently appear in more complex shape manipulation codes and lead to unexpected results.
A bit of debugging suggests that if the dimension objects inside the TensorShape have the same id, they are skipped when invoking tf.Dimension.__eq__. This might be because dimension comparison is triggered through the list containing them rather than individually iterating them.