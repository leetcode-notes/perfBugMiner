StatSummarizer logs error messages for graph with a while loop

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes, see Python script below
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
TensorFlow installed from (source or binary): Built from source
TensorFlow version (use command below): From command below: "b'unknown' 1.1.0-rc2", commit: 69433c1
Bazel version (if compiling from source): Used CMake 3.6.3
CUDA/cuDNN version: Built without GPU support
GPU model and memory: Built without GPU support
Exact command to reproduce:

  <create graph.pb with Python script below>
  <path to build output>/benchmark_model.exe --graph="graph.pb" --input_layer="" --input_layer_shape="" --input_layer_type=""

You can collect some of this information using our environment capture script:
https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh
You can obtain the TensorFlow version with
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
Describe the problem
Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.
When running a graph containing a while loop with benchmark_model.exe, StatSummarizer reports numerous errors like this:
E c:\source\tensorflow\tensorflow\core\util\stat_summarizer.cc:146] Bad output slot '1' for 'loop_op/Switch'
It looks like StatSummarizer determines that something about the step stats produced for the Switch node in this case is invalid. This is reproducible with the simple graph in the Python script below, which does not seem like it should be an invalid graph.
Source code / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.
Python script:
import tensorflow as tf

initial_value = tf.constant(1)
loop_cond = lambda i: tf.less(i, 10)
loop_body = lambda i: tf.add(i, 1)
loop_op = tf.while_loop(loop_cond, loop_body, [initial_value], name="loop_op")
output = tf.identity(loop_op, name="output")

with tf.Session() as sess:
  tf.train.write_graph(sess.graph, ".", "graph.pb", as_text=False)