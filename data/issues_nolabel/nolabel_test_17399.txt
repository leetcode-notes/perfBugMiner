Eager: Using tfe.gradients_function with the params keyword returns a function which cannot be called with lists of values

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Debian Stretch
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.6.0
Python version: 3.6.2
CUDA/cuDNN version: N/A
GPU model and memory: N/A
Bazel version (if compiling from source): N/A
Exact command to reproduce:

import tensorflow as tf
import tensorflow.contrib.eager as tfe

tfe.enable_eager_execution()

def f(a, b):
    return a**2 + b**3

partial_grad = tfe.gradients_function(f, params=[0])
partial_grad([1., 2., 3.], [1., 2., 3.])
When I try to use tfe.gradients_function with the keyword params, it is not possible to call the resulting function partial_gradwith a list of values.
Workarounds:
Using np.array([1., 2., 3.]) as input for partial_grad works.
Traceback:
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-4-cb367c5f1046> in <module>()
      1 partial_grad = tfe.gradients_function(f, params=[0])
----> 2 partial_grad([1., 2., 3.], [1., 2., 3.])

~/programs/miniconda3/envs/gym/lib/python3.6/site-packages/tensorflow/python/eager/backprop.py in decorated(*args, **kwds)
    512     """Computes the gradient of the decorated function."""
    513 
--> 514     _, grad = val_and_grad_function(f, params=params)(*args, **kwds)
    515     return grad
    516 

~/programs/miniconda3/envs/gym/lib/python3.6/site-packages/tensorflow/python/eager/backprop.py in decorated(*args, **kwds)
    611       raise ValueError("Functions to be differentiated cannot "
    612                        "receive keyword arguments.")
--> 613     val, vjp = make_vjp(f, params)(*args, **kwds)
    614     return val, vjp(dy=dy)
    615 

~/programs/miniconda3/envs/gym/lib/python3.6/site-packages/tensorflow/python/eager/backprop.py in decorated(*args, **kwds)
    665         sources.append(args[i])
    666         tape.watch(args[i])
--> 667       result = f(*args)
    668       if result is None:
    669         raise ValueError("Cannot differentiate a function that returns None; "

<ipython-input-2-159855d98f00> in f(a, b)
      1 def f(a, b):
----> 2     return a**2 + b**3

TypeError: unsupported operand type(s) for ** or pow(): 'list' and 'int'