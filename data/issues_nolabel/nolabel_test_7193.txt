ImportError: No module named 'tensorflow.python' Mac GPU

Running 2 Jupyter kernels reflecting conda envs:

tensorflow CPU
tensorflow GPU
Both are configured with 0.12.1 for Mac.

CPU VERSION (tensorflow 0.12.1) works well as expected:
import tensorflow as tf
print("OUT: tensorflow imported")

OUT: tensorflow imported
from tensorflow.python.client import device_lib
def get_available_CPU_GPU():
    devices = device_lib.list_local_devices()
    #return [x.name for x in devices if x.device_type == 'CPU']
    return [x.name for x in devices ]
print(get_available_CPU_GPU())

['/cpu:0']  - as expected only CPU shows
SAME CODE GPU VERSION (tensorflow-gpu 0.12.1 ):
OUT: tensorflow imported
So it sees the TensorFlow correctly, but then only a part of it.
---------------------------------------------------------------------------
ImportError                               Traceback (most recent call last)
 in ()
----> 1 **from tensorflow.python.client import device_lib**
      2 
      3 def get_available_CPU_GPU():
      4     devices = device_lib.list_local_devices()
      5     #return [x.name for x in devices if x.device_type == 'CPU']

ImportError: No module named 'tensorflow.python'

features = tf.placeholder(tf.float32, (None, 32, 32, 3))
AttributeError: module 'tensorflow' has no attribute 'placeholder'