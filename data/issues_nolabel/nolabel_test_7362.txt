Clean up SegmentReduction Ops

The segment reduction ops are currently inconsistent, they include different ops for sorted/unsorted/ and sparse/dense tensors.
I guess it would make sense to provide the same reduction ops  for these - I'd be happy to work on this and build on nikste's work.
For similar previous issues @andydavis1, @drpngx were responsible for reviewing, so I link you here.
Things to possibly consider:

Replace the sorted segment options by the more general unsorted options. I did a quick, non-extensive benchmark for  unsorted_segment_max vs  segment_max, the processing time is about the same (with the unsorted op even being a bit faster sometimes).
The drawback would be, that num_segments needs to be specified or needs to be computed before the reduction.
Include the feature request "Extend tf.unsorted_segment_sum to allow 'rejecting' entries" #478
Address the ToDo in UnsortedSegmentMax: // todo: Remove duplicate code in UnsortedSegmentSumFunctor and UnsortedSegmentMaxFunctor.
To sum up, I'd suggest to replace and extend the currently provided functions

tf.segment_sum(data, segment_ids, name=None)
tf.segment_prod(data, segment_ids, name=None)
tf.segment_min(data, segment_ids, name=None)
tf.segment_max(data, segment_ids, name=None)
tf.segment_mean(data, segment_ids, name=None)
tf.unsorted_segment_sum(data, segment_ids, num_segments, name=None)
tf.sparse_segment_sum(data, indices, segment_ids, name=None)
tf.sparse_segment_mean(data, indices, segment_ids, name=None)
tf.sparse_segment_sqrt_n(data, indices, segment_ids, name=None)

with
# all dense/sparse ops support unsorted segments
tf.segment_sum(data, segment_ids, num_segements=None, name=None) 
tf.segment_prod(data, segment_ids, num_segements=None, name=None)
tf.segment_min(data, segment_ids, num_segements=None, name=None)
tf.segment_max(data, segment_ids, num_segements=None, name=None) 
tf.segment_mean(data, segment_ids, num_segements=None, name=None)
tf.segment_sqrt_n(data, segment_ids, num_segements=None, name=None)  # new

tf.sparse_segment_sum(data, indices, segment_ids, name=None)
tf.sparse_segment_prod(data, indices, segment_ids, name=None)  # new
tf.sparse_segment_min(data, indices, segment_ids, name=None)  # new
tf.sparse_segment_max(data, indices, segment_ids, name=None)  # new
tf.sparse_segment_mean(data, indices, segment_ids, name=None)
tf.sparse_segment_sqrt_n(data, indices, segment_ids, name=None)

(Or tf.unsorted_segment_reduce_op instead of tf.segement_reduceop to not break backward compability)