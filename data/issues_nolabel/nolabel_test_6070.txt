tf.contrib.learn.LinearRegressor builds bad model for a data with one feature

Reproduce steps:
csv with data. Data includes weight and height values of some people. Overall learning process is very simple:
MAX_STEPS = 2000
# ...
features = [tf.contrib.layers.real_valued_column(feature_name) for feature_name in FEATURES_COL]
# ...
linear_regressor = tf.contrib.learn.LinearRegressor(feature_columns=features)
linear_regressor.fit(input_fn=prepare_input, max_steps=MAX_STEPS)

However, the model that is built by the regressor is, unexpectedly, bad. Result could be illustrated with the next picture:

Visualization code(just in case):
plt.plot(height_and_weight_df_filtered[WEIGHT_COL], 
         linear_regressor.predict(input_fn=prepare_full_input), 
         color='blue',
         linewidth=3)

Why I think the model is bad? Here is the same data been given to the LinearRegression class from the scikit-learn:
lr_updated = linear_model.LinearRegression()
lr_updated.fit(weight_filtered_reshaped, height_filtered)

And the visualization:

Increasing amount of steps has no effect. I would assume I'm using regressor from the TensorFlow in a wrong way.
iPython notebook with the code.
Env details

A link to the pip package you installed:
The output from python -c "import tensorflow; print(tensorflow.__version__)".
0.11.0rc0

What other attempted solutions have you tried?
The issue was opened originally as a question on the stackoverflow.