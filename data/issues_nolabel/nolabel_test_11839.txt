tf.train.ExponentialMovingAverage.variables_to_restore

When I view the API doc, tf.train.ExponentialMovingAverage.variables_to_restore. It said If a variable has a moving average, use the moving average variable name as the restore name; otherwise, use the variable name., but I test it is wrong.
Look the code:
import tensorflow as tf

a = tf.Variable(tf.constant(1.0),name='a')
b = tf.Variable(tf.constant(3.0),name='b')
c = tf.Variable(tf.constant(5.0),name='c')
ema = tf.train.ExponentialMovingAverage(decay=0.9999)
ema.apply([a,b])

print(tf.get_default_graph().get_all_collection_keys())
print(tf.get_collection('moving_average_variables'))
print(tf.global_variables())
variables_to_restore = ema.variables_to_restore()
print(variables_to_restore)

And the output is:
['trainable_variables', 'moving_average_variables', 'cond_context', 'variables']
[<tf.Variable 'a:0' shape=() dtype=float32_ref>, <tf.Variable 'b:0' shape=() dtype=float32_ref>]
[<tf.Variable 'a:0' shape=() dtype=float32_ref>, <tf.Variable 'b:0' shape=() dtype=float32_ref>, <tf.Variable 'c:0' shape=() dtype=float32_ref>, <tf.Variable 'a/ExponentialMovingAverage:0' shape=() dtype=float32_ref>, <tf.Variable 'b/ExponentialMovingAverage:0' shape=() dtype=float32_ref>]
{'a/ExponentialMovingAverage': <tf.Variable 'a:0' shape=() dtype=float32_ref>, 'c/ExponentialMovingAverage': <tf.Variable 'c:0' shape=() dtype=float32_ref>, 'b/ExponentialMovingAverage': <tf.Variable 'b:0' shape=() dtype=float32_ref>}


Variable c don't has a moving average, but in variables_to_restore, it use key=shadow_name either.
Who can tell me what's wrong?