XLA/AOT Windows support

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 x64
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): master
Python version: 3.6
Bazel version (if compiling from source): 0.8.0
GCC/Compiler version (if compiling from source): VS 2017 15.5
CUDA/cuDNN version: N/A
GPU model and memory: N/A
Exact command to reproduce: N/A

Similar to #8310, but specifically about running tfCompile on Windows rather than Linux to produce x86_64-windows-msvc binaries.
XLA/AOT depends on LLVM which has excellent Windows support via CMake, but Bazel cannot interop with CMake. llvm.BUILD is auto-generated and the script to generate it is not open-sourced, this make it difficult for external contributor to make improvement. tensorflow/compiler might not need too much changes as #9908 already addressed some of them.
One possible path is to let user to run CMake in host machine when invoking configure.py, then feed CMake generated files into custom script to generate LLVM.BUILD.
Note:
Rumour has it that there is a Google-internal tool called tfNative to generate .h/.cpp files instead of .lib binaries, though I suspect that even if the tool is open-sourced, it might not be immediately available for Windows developers.