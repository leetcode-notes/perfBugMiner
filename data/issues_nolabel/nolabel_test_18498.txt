Fixed the bug in mkl_input_conversion_op when reorder is not needed

In mkl_input_conversion, if one tensor is mkl tensor an another one tf tensor, we check if broadcast is needed. If broadcast is not needed, tf tensor is converted to mkl tensor. However, when tf tensor and mkl tensor has the shape, mkldnn reorder is not run, the output buffer is not updated, so the output buffer is random data.
The fix is to copy the memory if reorder is not needed.