Model trained on GPU does not restore properly when ran on CPU

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
no
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):

== cat /etc/issue ===============================================
Linux  3.16.0-4-amd64 #1 SMP Debian 3.16.43-2+deb8u5 (2017-09-19) x86_64 GNU/Linux
VERSION_ID="8"
VERSION="8 (jessie)"

== are we in docker =============================================
No

== compiler =====================================================
c++ (GCC) 4.8.5
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


== uname -a =====================================================
Linux  3.16.0-4-amd64 #1 SMP Debian 3.16.43-2+deb8u5 (2017-09-19) x86_64 GNU/Linux

== check pips ===================================================
numpy (1.12.1)
protobuf (3.4.0)
tensorflow (1.3.0)
tensorflow-gpu (1.4.0rc0)
tensorflow-tensorboard (0.1.5)

== check for virtualenv =========================================
True

== tensorflow import ============================================
tf.VERSION = 1.4.0-rc0
tf.GIT_VERSION = v1.3.0-rc1-3112-g65b6a75
tf.COMPILER_VERSION = v1.3.0-rc1-3112-g65b6a75
Sanity check: array([1], dtype=int32)

== env ==========================================================
LD_LIBRARY_PATH /cuda/cuda-8.0/lib64:/cuda/cudnn-8.0-linux-x64-v6.0/lib64
DYLD_LIBRARY_PATH is unset

== nvidia-smi ===================================================
Thu Oct 26 16:47:55 2017
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 375.26                 Driver Version: 375.26                    |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  GeForce GT 610      Off  | 0000:01:00.0     N/A |                  N/A |
| N/A   42C    P0    N/A /  N/A |      0MiB /   963MiB |     N/A      Default |
+-------------------------------+----------------------+----------------------+

+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID  Type  Process name                               Usage      |
|=============================================================================|
|    0                  Not Supported                                         |
+-----------------------------------------------------------------------------+

== cuda libs  ===================================================



TensorFlow installed from (source or binary):
Installed binary with pip.


TensorFlow version (use command below):
('v1.3.0-rc1-3112-g65b6a75', '1.4.0-rc0')
The same bug happens on Tensorflow 1.3.0 too.


Python version:
2.7


CUDA/cuDNN version:
CUDA 8.0
cuDNN 6.0


GPU model and memory:
I am testing on two different computers. On one PC I have this GPU:
name: GeForce GTX TITAN Black major: 3 minor: 5 memoryClockRate(GHz): 0.98
pciBusID: 0000:02:00.0
totalMemory: 5.94GiB freeMemory: 5.87GiB
On my PC I do not have a GPU.


Exact command to reproduce:


This (latest now) checkout of tensorflow models:
https://github.com/tensorflow/models/tree/edcd29f2dbb4b3eaed387fe17cb5270f867aec42/official/mnist
$ python convert_to_records.py --directory ~/tmp/mnist_data
Successfully downloaded train-images-idx3-ubyte.gz 9912422 bytes.
Extracting /home/amir/tmp/mnist_data/train-images-idx3-ubyte.gz
Successfully downloaded train-labels-idx1-ubyte.gz 28881 bytes.
Extracting /home/amir/tmp/mnist_data/train-labels-idx1-ubyte.gz
Successfully downloaded t10k-images-idx3-ubyte.gz 1648877 bytes.
Extracting /home/amir/tmp/mnist_data/t10k-images-idx3-ubyte.gz
Successfully downloaded t10k-labels-idx1-ubyte.gz 4542 bytes.
Extracting /home/amir/tmp/mnist_data/t10k-labels-idx1-ubyte.gz
Writing /home/amir/tmp/mnist_data/train.tfrecords
Writing /home/amir/tmp/mnist_data/validation.tfrecords
Writing /home/amir/tmp/mnist_data/test.tfrecords
$ python mnist.py --data_dir ~/tmp/mnist_data --model_dir ~/tmp/mnist_model --steps 2000
INFO:tensorflow:Using default config.
INFO:tensorflow:Using config: {'_save_checkpoints_secs': 600, '_session_config': None, '_keep_checkpoint_max': 5, '_task_type': 'worker', '_is_chief': True, '_clu
ster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7ff6e918d910>, '_save_checkpoints_steps': None, '_keep_checkpoint_every_n_hours': 10000
, '_service': None, '_num_ps_replicas': 0, '_tf_random_seed': 1, '_master': '', '_num_worker_replicas': 1, '_task_id': 0, '_log_step_count_steps': 100, '_model_di
r': '/home/amir/tmp/mnist_model', '_save_summary_steps': 100}
WARNING:tensorflow:From mnist.py:84: __init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.TFRecordDataset`.
WARNING:tensorflow:From mnist.py:92: calling map (from tensorflow.contrib.data.python.ops.dataset_ops) with num_threads is deprecated and will be removed in a fut
ure version.
Instructions for updating:
Replace `num_threads=T` with `num_parallel_calls=T`. Replace `output_buffer_size=N` with `ds.prefetch(N)` on the returned dataset.
WARNING:tensorflow:From mnist.py:92: calling map (from tensorflow.contrib.data.python.ops.dataset_ops) with output_buffer_size is deprecated and will be removed i
n a future version.
Instructions for updating:
Replace `num_threads=T` with `num_parallel_calls=T`. Replace `output_buffer_size=N` with `ds.prefetch(N)` on the returned dataset.
INFO:tensorflow:Create CheckpointSaverHook.
2017-10-26 15:52:17.067286: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to us
e: SSE4.1 SSE4.2 AVX
2017-10-26 15:52:18.075205: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:892] successful NUMA node read from SysFS had negative value (-1), but there mu
st be at least one NUMA node, so returning NUMA node zero
2017-10-26 15:52:18.075593: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Found device 0 with properties:
name: GeForce GTX TITAN Black major: 3 minor: 5 memoryClockRate(GHz): 0.98
pciBusID: 0000:02:00.0
totalMemory: 5.94GiB freeMemory: 5.87GiB
2017-10-26 15:52:18.075610: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1120] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: GeForce GTX T
ITAN Black, pci bus id: 0000:02:00.0, compute capability: 3.5)
INFO:tensorflow:Saving checkpoints for 1 into /home/amir/tmp/mnist_model/model.ckpt.
INFO:tensorflow:train_accuracy = 0.13
INFO:tensorflow:loss = 2.28967, step = 1
INFO:tensorflow:global_step/sec: 86.9528
INFO:tensorflow:train_accuracy = 0.485 (1.150 sec)
INFO:tensorflow:loss = 0.519769, step = 101 (1.150 sec)
INFO:tensorflow:global_step/sec: 91.0098
INFO:tensorflow:train_accuracy = 0.61 (1.099 sec)
INFO:tensorflow:loss = 0.464828, step = 201 (1.099 sec)
INFO:tensorflow:global_step/sec: 95.5818
INFO:tensorflow:train_accuracy = 0.6825 (1.046 sec)
INFO:tensorflow:loss = 0.299279, step = 301 (1.046 sec)
...
Evaluation results:
    {'loss': 0.027056012, 'global_step': 20000, 'accuracy': 0.99309999}
$ # comment out the .train line (lines 232-235) in mnist.py
$ # somehow disable GPU
$ python mnist.py --data_dir ~/tmp/mnist_data --model_dir ~/tmp/mnist_model --steps 2000 --data_format channels_last
INFO:tensorflow:Using default config.
INFO:tensorflow:Using config: {'_save_checkpoints_secs': 600, '_session_config': None, '_keep_checkpoint_max': 5, '_task_type': 'worker', '_is_chief': True, '_clu
ster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f4a9afcfd10>, '_save_checkpoints_steps': None, '_keep_checkpoint_every_n_hours': 10000
, '_service': None, '_num_ps_replicas': 0, '_tf_random_seed': 1, '_master': '', '_num_worker_replicas': 1, '_task_id': 0, '_log_step_count_steps': 100, '_model_di
r': '/home/amir/tmp/mnist_model', '_save_summary_steps': 100}
WARNING:tensorflow:From mnist.py:84: __init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.TFRecordDataset`.
WARNING:tensorflow:From mnist.py:92: calling map (from tensorflow.contrib.data.python.ops.dataset_ops) with num_threads is deprecated and will be removed in a fut
ure version.
Instructions for updating:
Replace `num_threads=T` with `num_parallel_calls=T`. Replace `output_buffer_size=N` with `ds.prefetch(N)` on the returned dataset.
WARNING:tensorflow:From mnist.py:92: calling map (from tensorflow.contrib.data.python.ops.dataset_ops) with output_buffer_size is deprecated and will be removed i
n a future version.
Instructions for updating:
Replace `num_threads=T` with `num_parallel_calls=T`. Replace `output_buffer_size=N` with `ds.prefetch(N)` on the returned dataset.
INFO:tensorflow:Starting evaluation at 2017-10-26-14:33:53
2017-10-26 16:33:53.385155: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to us
e: SSE4.1 SSE4.2 AVX AVX2 FMA
2017-10-26 16:33:53.907636: E tensorflow/stream_executor/cuda/cuda_driver.cc:406] failed call to cuInit: CUDA_ERROR_NO_DEVICE
2017-10-26 16:33:53.907712: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:158] retrieving CUDA diagnostic information for host: italix14
2017-10-26 16:33:53.907722: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:165] hostname: italix14
2017-10-26 16:33:53.907800: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] libcuda reported version is: Invalid argument: expected %d.%d or %d.%d.%d f
orm for driver version; got "1"
2017-10-26 16:33:53.907837: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:369] driver version file contents: """NVRM version: NVIDIA UNIX x86_64 Kernel Mo
dule  375.26  Thu Dec  8 18:36:43 PST 2016
GCC version:  gcc version 4.8.4 (Debian 4.8.4-1)
"""
2017-10-26 16:33:53.907871: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:193] kernel reported version is: 375.26.0
INFO:tensorflow:Restoring parameters from /home/amir/tmp/mnist_model/model.ckpt-20000
INFO:tensorflow:Finished evaluation at 2017-10-26-14:34:20
INFO:tensorflow:Saving dict for global step 20000: accuracy = 0.0962, global_step = 20000, loss = 6.32954

Evaluation results:
    {'loss': 6.3295369, 'global_step': 20000, 'accuracy': 0.096199997}
Describe the problem
I have trained the official mnist model on GPU (channels_first,  NCHW) but when I test it on CPU (channels_last,  NHWC) I get different results. On GPU, I get an accuracy of 0.99309999 but the same model (when tested on CPU) gives 0.096199997. I believe when the model is restored from the checkpoint the kernel weights are not restored properly to accommodate for the new channel format.
The problem I have shown here is using the official mnist model but in reality I have a model that I have already trained using the channels_first format on GPU which took several days to train. But, now I cannot evaluate this model on CPU.