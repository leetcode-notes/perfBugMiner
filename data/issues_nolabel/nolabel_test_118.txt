"help wanted" I cannot get the TensorBoard working, I am following the given tutorial

*I am having trouble writing the log file to be able to visualize it in TensorBoard. Can somebody point me in the right direction? I have followed the code given in the tutorial. When run I get the error: *

"expected %s got %s." % (cls.name, type(msg).name))
TypeError: Parameter to MergeFrom() must be instance of same class: expected GraphDef got Graph. for field Event.graph_def*

The error is said to be on line:
summary_writer = tf.train.SummaryWriter('/Users/Cristian/Desktop/log', sess.graph)
My code:
import input_data
import tensorflow as tf


print "Start program"
mnist = input_data.read_data_sets("MNIST_data/", one_hot=True)
print "Done loading images"

x = tf.placeholder("float", [None, 784])
W = tf.Variable(tf.zeros([784,10]))
b = tf.Variable(tf.zeros([10]))

y = tf.nn.softmax(tf.matmul(x,W) + b)

y_ = tf.placeholder("float", [None,10])

print "Done init"

cross_entropy = -tf.reduce_sum(y_*tf.log(y))
train_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)


print "Done loading vars"

init = tf.initialize_all_variables()
print "Done init vars"

sess = tf.Session()
sess.run(init)

print '------'
print type(sess.graph_def)


correct_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))
accuracy = tf.reduce_mean(tf.cast(correct_prediction, "float"))

acc = tf.scalar_summary("Accuracy:", accuracy)

merged_summary_op = tf.merge_all_summaries()
summary_writer = tf.train.SummaryWriter('/Users/Cristian/Desktop/log', sess.graph)

print "Session started"


for i in range(2000):
  batch_xs, batch_ys = mnist.train.next_batch(100)
  sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})
  if i % 100 == 0:
    print sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels})
    summary_str = sess.run(merged_summary_op)
    summary_writer.add_summary(summary_str, i)


print "Done training"

correct_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))

accuracy = tf.reduce_mean(tf.cast(correct_prediction, "float"))


print sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels})