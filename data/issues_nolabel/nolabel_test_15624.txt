Problem with tf.data.Dataset managing shapes of sparse tensors

Please go to Stack Overflow for help and support:
https://stackoverflow.com/questions/tagged/tensorflow
If you open a GitHub issue, here is our policy:

It must be a bug or a feature request.
The form below must be filled out.
It shouldn't be a TensorBoard issue. Those go here.

Here's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): 16.04.3 LTS (Xenial Xerus)
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.5.0-dev20171224
Python version: 3.6
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: N/A
GPU model and memory: N/A

Describe the problem
The tf-1.5-dev supports tf.SparseTensor when using tf.data.Dataset.from_tensor_slices, but it cannot infer the shape of new tensor after some operations such as tf.data.Dataset.map.
The shape of tensor becomes Unknown, which is troublesome for downstream operations. For example, we have to call set_shape() if we want to feed the new tensor into a tf.layers.dense.
Source code / logs
import tensorflow as tf
x = tf.SparseTensor([[0,0],[1,1],[2,2]], [1,1,1], dense_shape=[3,3])
ds = tf.data.Dataset.from_tensor_slices(x)
ds.output_shapes   # TensorShape([Dimension(3)])
ds = ds.map(lambda x: tf.sparse_tensor_to_dense(x))
ds = ds.batch(1)
ds.output_shapes   # TensorShape([Dimension(None), Dimension(None)])

iterator = ds.make_one_shot_iterator()
next_elem = iterator.get_next()   # TensorShape([Dimension(None), Dimension(None)])

y = tf.layers.dense(next_elem, 100)
ValueError: The last dimension of the inputs to `Dense` should be defined. Found `None`.


@mrry