Is there a backpropagation-method for all math-layers i.e. tf.fft2d?

When building a deep NN, where one of the layer is represented by a fouriertransform (i.e. tf.fft), does tensorflow provide a backpropagation method for it? In this case it could/would be complex I guess.
How does the optimizer work on that? Are there any documents which could explain this behavior?
In theory, I understand how the gradient of a multiplication is carried out, but doing this for a more complicated function makes things more difficult for me.
Thank you very much :)