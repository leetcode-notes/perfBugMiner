Better way to count number of zero elements across a dimension?

I was wondering whether there is a nicer way to count the number of zero elements across a given dimension? Looking through the API the closest result is tf.unique_with_counts (link) but this operation returns the values in order of occurrence so I first would need to find the index of the zero-element. The solution that I am currently using is not very elegant:
x = np.asarray([[0, 0, 1], [1, 0, 3], [1, 2, 3]])

a = tf.Variable(x)
zero_elements = tf.equal(a, tf.zeros_like(a))
count_zeros_per_row = tf.reduce_sum(tf.to_int32(zero_elements), reduction_indices=1)

# result => [2, 1, 0]
Would be nice to have operations to count the (non-)zero elements across a given dimension.