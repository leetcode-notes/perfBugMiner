Image Adjustments API doesn't clearly specify input range

Describe the problem
There is a documentation issue with a possible corresponding tf.keras bug.
The tf image adjustments guide doesn't document the inputs. It appears they can be in a [0, 1] range or [0, MAX] based on comments in tf.slim where the relevant APIs are used.
This may have led to preprocessing bugs in other utilities such as keras and tf.keras, which believe tf expects the range [-1, 1] see keras-team/keras#8916, the following includes additional details from that issue:
It appears Keras' imagenet image preprocessing may be inconsistent with how it is done in tf, in particular keras sets values to [-1, 1] while in tf the expected range is [0, 1].

slim/preprocessing/inception_preprocessing.py

notes If dtype is tf.float32 then the range should be [0, 1]


keras preprocess_input()

notes tf: will scale pixels between -1 and 1, sample-wise.



Here is the key doc from Keras' preprocess_input():
def preprocess_input(x, data_format=None, mode='caffe'):
    """Preprocesses a tensor encoding a batch of images.
    # Arguments
        x: input Numpy or symoblic tensor, 3D or 4D.
        data_format: data format of the image tensor.
        mode: One of "caffe", "tf".
            - caffe: will convert the images from RGB to BGR,
                then will zero-center each color channel with
                respect to the ImageNet dataset,
                without scaling.
            - tf: will scale pixels between -1 and 1,
                sample-wise.
    # Returns
        Preprocessed tensor.
    """
Here are the key docs from the tf slim function preprocess_for_train() which specify a [0, 1] range:
def preprocess_for_train(image, height, width, bbox,
                         fast_mode=True,
                         scope=None,
                         add_image_summaries=True):
  """Distort one image for training a network.
  Distorting images provides a useful technique for augmenting the data
  set during training in order to make the network invariant to aspects
  of the image that do not effect the label.
  Additionally it would create image_summaries to display the different
  transformations applied to the image.
  Args:
    image: 3-D Tensor of image. If dtype is tf.float32 then the range should be
      [0, 1], otherwise it would converted to tf.float32 assuming that the range
      is [0, MAX], where MAX is largest positive representable number for
      int(8/16/32) data type (see `tf.image.convert_image_dtype` for details).
    height: integer
    width: integer
    bbox: 3-D float Tensor of bounding boxes arranged [1, num_boxes, coords]
      where each coordinate is [0, 1) and the coordinates are arranged
      as [ymin, xmin, ymax, xmax].
    fast_mode: Optional boolean, if True avoids slower transformations (i.e.
      bi-cubic resizing, random_hue or random_contrast).
    scope: Optional scope for name_scope.
    add_image_summaries: Enable image summaries.
  Returns:
    3-D float Tensor of distorted image used for training with range [-1, 1].
  """
side note:

tensorflow/models#2217 seems relevant
keras-team/keras#8916 is the corresponding keras issue

System information
Not relevant, this is a documentation + input value range issue.
Source code / logs
relevant links + code included above