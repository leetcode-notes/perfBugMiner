Error message of scatter_update is misleading

When you call scatter_update with a wrong input vector, the error message will tell you that the rank is
wrong, which is not very helpful.
An example case in the documentation (provided) would be great.
Example:
      testVar = tf.Variable(tf.zeros([5,1]))
      ind = tf.constant([0,3])
      data = tf.constant([5,7], dtype=tf.float32)
      up = tf.scatter_update(testVar,  ind,  data  )

Error Message:
ValueError: Shapes must be equal rank, but are 1 and 2 for 'ScatterUpdate' (op: 'ScatterUpdate') with input shapes: [5,1], [2], [2].
That's not that helpful because you don't know which of the three input shapes are wrong, but mostly fine.
Changing the Code to:
      testVar = tf.Variable(tf.zeros([5,1]))
      ind = tf.expand_dims(tf.constant([0,3]),0)
      data = tf.expand_dims(tf.constant([5,7], dtype=tf.float32),0)
      up = tf.scatter_update(testVar,  ind,  data  )

ValueError: Shapes must be equal rank, but are 2 and 3 for 'ScatterUpdate' (op: 'ScatterUpdate') with input shapes: [5,1], [1,2], [1,2].
Is clearly wrong, because non of the inputs has rank 3!
In addition, it would be really awesome if you could add the following code as an example to the scatter_update documentation (https://www.tensorflow.org/api_docs/python/tf/scatter_update).
(I couldn't find it in the repo(?), otherwise I would habe created a pull request)
Working Example:
      testVar = tf.Variable(tf.zeros([5,1]))
      ind = tf.constant([0,3])
      data = tf.expand_dims(tf.constant([5,7], dtype=tf.float32),1)
      up = tf.scatter_update(testVar,  ind,  data  )