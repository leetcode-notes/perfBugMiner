Feature request / possible bug: cannot take second derivative of a MaxPool

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OSX El Capitan
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): v1.0.0-65-g4763edf-dirty 1.0.1, but I've tested it on later versions too, and looking at the source code in master it doesn't seem like it's available
Python version: 3.5.1, but I've reproduced it on 2.7

Describe the problem
If I understand correctly, MaxPool operations should be many-times differentiable, but in Tensorflow you can only differentiate them once, which makes it impossible to inspect second derivatives for CNNs or do double backpropogation.
Source code / logs
You can reproduce it very simply this way:
import tensorflow as tf
X = tf.Variable(tf.random_normal([1,1,1,1]))
P = tf.nn.max_pool(X, [1,1,1,1], [1,1,1,1], 'SAME')
g1 = tf.gradients(P, X)[0]
g2 = tf.gradients(g1, X)[0] # this line fails
raises
LookupError: No gradient defined for operation 'gradients_17/MaxPool_10_grad/MaxPoolGrad' (op type: MaxPoolGrad)