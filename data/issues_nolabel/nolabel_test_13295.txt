Pre-built binaries with symbol information?

What you you guys think about providing CI version of TensorFlow with built-in symbol information? This would make it easier to report bugs.
I believe the following is sufficient to get optimized version with symbol tables.
blaze build --cxxopt=-g2 --linkopt=-g2 --strip never -c opt
My current problem is that I'm occasionally hitting segfaults due to tensorflow::strings::FloatToBuffer. I can't reproduce this in any small example. If there were a version of tf with symbol tables, I could just gdb on the core file and do info locals to get the value of offending float that causes the crash.
#0  0x00007ffb54a4941d in std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so
#1  0x00007ffb5745b76e in float tensorflow::(anonymous namespace)::locale_independent_strtonum<float>(char const*, char const**) ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so
#2  0x00007ffb5745bf4c in tensorflow::strings::safe_strtof(char const*, float*)
    ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so
#3  0x00007ffb5745bfe9 in tensorflow::strings::FloatToBuffer(float, char*) ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so
#4  0x00007ffb5735d7ce in tensorflow::Tensor::SummarizeValue[abi:cxx11](long long) const ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so
#5  0x00007ffb5735e3b5 in tensorflow::Tensor::DebugString[abi:cxx11]() const ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so
#6  0x00007ffb572f21ab in tensorflow::(anonymous namespace)::SummarizeTensor(tensorflow::TensorProto const&) ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so
#7  0x00007ffb572f5529 in tensorflow::SummarizeAttrValue[abi:cxx11](tensorflow::AttrValue const&) ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so
#8  0x00007ffb57322b9d in tensorflow::SummarizeAttrsHelper(tensorflow::AttrSlice, tensorflow::StringPiece) ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so
#9  0x00007ffb573231f3 in tensorflow::SummarizeNodeDef[abi:cxx11](tensorflow::NodeDef const&) ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so
#10 0x00007ffb5732332f in tensorflow::SummarizeNode[abi:cxx11](tensorflow::Node const&) ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so
#11 0x00007ffb55fc7886 in tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long) ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so
#12 0x00007ffb55fc93cf in std::_Function_handler<void (), tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::{lambda()#1}>::_M_invoke(std::_Any_data const&) ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so
#13 0x00007ffb57442c51 in Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop(int) ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so
#14 0x00007ffb57440d37 in std::_Function_handler<void (), tensorflow::thread::EigenEnvironment::CreateThread(std::function<void ()>)::{lambda()#1}>::_M_invoke(std::_Any_data const&) ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so
#15 0x00007ffb6174c260 in ?? ()
   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/scipy/sparse/../../../../libstdc++.so.6
#16 0x00007ffb6d9926ba in start_thread (arg=0x7ffaa4906700)
    at pthread_create.c:333
#17 0x00007ffb6cdb03dd in clone ()
    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109