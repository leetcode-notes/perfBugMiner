Row distances Tensorflow for models like K-Means, SOM and RBFN

I am wondering if Tensorflow has some op for fast calculation of distances. For example like Matlab's pdist or pdist2
Or do you know of any way to optimize this piece of code?
with tf.name_scope("Hidden_layer") as scope:
  centroids = tf.Variable(tf.random_uniform([num_centr,D],dtype=tf.float32),name='centroids')
  var = tf.Variable(tf.truncated_normal([num_centr],mean=225,stddev=1,dtype=tf.float32))
  exp_list = []

  for i in xrange(num_centr):
        exp_list.append(tf.exp((-1*tf.reduce_sum(tf.square(tf.sub(x,centroids[i,:])),1))/(2*var[i])))
        phi = tf.transpose(tf.pack(exp_list))
For now my code works and the results beautifully surpass my expectations. My prof deemed this impossible. With Tensorflow, I was able to prototype within two hours.
For future, I am curious if TensorFlow can improve this for-loop for calculating distances with a function like matlab's pdist()
Thanks for your help!
Rob