Gradient of tf.py_func and how to define gradients for a custom op only with python

I know about tf.py_func which I can use a python code as an op but how gradient is calculated with it?
Also, is there anyway I can set the gradient only with python? I think one way might be adding a custom op that calculate gradients into an array and use the array as an argument of apply_gradients.
For example:
x = tf.Variable(3.) # this is an custom op
y = tf.Variable(4.)
loss = 13 - x * y

opt = tf.train.GradientDescentOptimizer(0.1)
[(y_grad, y_val)] = opt.compute_gradients(loss, [y])
clipped_grads_and_vars = [(x * y, x), (y_grad, y_val)] # custom gradient is x * y

optim = opt.apply_gradients(clipped_grads_and_vars)

Is this safe way to apply custom gradients only with python?