tf.image.decode_image does not support png grayscale 16bit.

Code to reproduce:
import tensorflow as tf
import numpy as np

print ("TF Version: %s" % tf.__version__)

import urllib

png16 = urllib.request.urlopen('http://www.schaik.com/pngsuite/basn0g16.png').read(1000)
with tf.Session() as session:
    content = tf.placeholder(tf.string)
    tensor = tf.image.decode_image(
        contents=content,
        channels=1
    )
    
    out = (session.run(tensor, {content: png16}))
    np_out = np.array(out)
    print ('Shape', np_out.shape)
    print ('Max', np_out.max())
    

    

Outputs:
TF Version: 1.4.1
Shape (32, 32, 1)
Max 255

Same file, file command:
file basn0g16.png
basn0g16.png: PNG image data, 32 x 32, 16-bit grayscale, non-interlaced


System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04.3 LTS
TensorFlow installed from (source or binary): pip3 install tensorflow
TensorFlow version (use command below): 1.4.1
Python version: Python 3.5.2
Bazel version (if compiling from source): nope
GCC/Compiler version (if compiling from source): nope
CUDA/cuDNN version: no gpu
GPU model and memory: no gpu
Exact command to reproduce: see abve

python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
v1.4.0-19-ga52c8d9 1.4.1
Describe the problem
It should return uint16, but returns uint8.
Source code / logs
see above