Bug in session initialization?

Initializing a variable depending on a placeholder does not work:
import tensorflow as tf
import numpy as np

x = np.random.normal(loc=5, size=[10, 25])

sample_data = tf.placeholder(tf.float32)

mu = tf.Variable(tf.reduce_mean(sample_data, axis=0),
                 dtype=tf.float32,
                 validate_shape=False,
                 name="mu")

with tf.Session() as sess:
    sess.run(tf.global_variables_initializer(), feed_dict={sample_data: x})
    print(sess.run(mu))

########################################### REPEAT:

x = np.random.normal(loc=5, size=[10, 25])

sample_data = tf.placeholder(tf.float32)

mu = tf.Variable(tf.reduce_mean(sample_data, axis=0),
                 dtype=tf.float32,
                 validate_shape=False,
                 name="mu")

with tf.Session() as sess:
    sess.run(tf.global_variables_initializer(), feed_dict={sample_data: x})
    print(sess.run(mu))
Error Message:

tensorflow.python.framework.errors_impl.InvalidArgumentError: You must feed a value for placeholder tensor 'Placeholder' with dtype float
[[Node: Placeholder = Placeholderdtype=DT_FLOAT, shape=, _device="/job:localhost/replica:0/task:0/device:CPU:0"]]

The interesting part about this is that the first initialization works, but the second one does not.
This is really annoying if you don't know that behaviour and you try to build some application with interactive python shells.
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Ubuntu 17.10
TensorFlow installed from (source or binary):
binary
TensorFlow version (use command below):
v1.4.0-19-ga52c8d9 1.4.1
Python version:
3.6.3