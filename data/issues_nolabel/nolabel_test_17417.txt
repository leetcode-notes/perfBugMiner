embed_sequence and embedding_lookup behave differently on CPU vs. GPU

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.6
Python version: 3.6.3
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:
Exact command to reproduce:

Describe the problem
When using tf.nn.embedding_lookup or tf.contrib.layers.embed_sequence with -1 in the indexes the corresponding embeddings should be 0 vectors, in the same way that tf.feature_column.categorical_column_with_identity ignores negative values. This works correctly when trying on Colaboratory but fails on my Windows installation using the same Tensorflow version v1.6.
Source code / logs
Both ways of initializing the embeddings produce the same error, only on Windows, may it be related to the version of the gather function being used from python\ops\array_ops.py?
tf.reset_default_graph()
a = tf.constant(np.array([[0, 1, 2, -1, 4]]))
# b = tf.contrib.layers.embed_sequence(a, 5, 3, initializer=tf.random_uniform_initializer(-1.0, 1.0))
b = tf.nn.embedding_lookup(tf.get_variable('embeddings', [5, 3], initializer=tf.random_uniform_initializer(-1.0, 1.0)), a)
with tf.Session() as sess:
    sess.run(tf.global_variables_initializer())
    print(sess.run(b))
The error goes like this

InvalidArgumentError: indices[..] = -1 is not in [0, ..)